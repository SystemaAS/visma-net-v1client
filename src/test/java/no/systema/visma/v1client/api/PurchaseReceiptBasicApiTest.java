/*
 * Visma Net API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 6.13.03.0008
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package no.systema.visma.v1client.api;

import no.systema.visma.v1client.model.PurchaseReceiptBasicDto;
import no.systema.visma.v1client.model.PurchaseReceiptBasicUpdateDto;
import no.systema.visma.v1client.model.ReleasePurchaseReceiptActionResultDto;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for PurchaseReceiptBasicApi
 */
@Ignore
public class PurchaseReceiptBasicApiTest {

    private final PurchaseReceiptBasicApi api = new PurchaseReceiptBasicApi();

    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void purchaseReceiptBasicGetAllReceiptBasicTest() {
        String receiptType = null;
        String greaterThanValue = null;
        Integer numberToRead = null;
        Integer skipRecords = null;
        String lastModifiedDateTime = null;
        String lastModifiedDateTimeCondition = null;
        List<PurchaseReceiptBasicDto> response = api.purchaseReceiptBasicGetAllReceiptBasic(receiptType, greaterThanValue, numberToRead, skipRecords, lastModifiedDateTime, lastModifiedDateTimeCondition);

        // TODO: test validations
    }
    
    /**
     * Get a specific Purchase Receipt
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void purchaseReceiptBasicGetPurchaseReceiptBasicByreceiptNbrTest() {
        String receiptNbr = null;
        PurchaseReceiptBasicDto response = api.purchaseReceiptBasicGetPurchaseReceiptBasicByreceiptNbr(receiptNbr);

        // TODO: test validations
    }
    
    /**
     * Create a Purchase Receipt
     *
     * Response Message has StatusCode Created if POST operation succeed
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void purchaseReceiptBasicPostTest() {
        PurchaseReceiptBasicUpdateDto poReceiptUpdateDto = null;
        Object response = api.purchaseReceiptBasicPost(poReceiptUpdateDto);

        // TODO: test validations
    }
    
    /**
     * Update a specific Purchase Receipt
     *
     * Response Message has StatusCode NoContent if PUT operation succeed
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void purchaseReceiptBasicPutBypoReceiptNumberTest() {
        String poReceiptNumber = null;
        PurchaseReceiptBasicUpdateDto poReceiptUpdateDto = null;
        Object response = api.purchaseReceiptBasicPutBypoReceiptNumber(poReceiptNumber, poReceiptUpdateDto);

        // TODO: test validations
    }
    
    /**
     * Release purchase receipt operation
     *
     * The action result dto contains information about the result of running the action
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void purchaseReceiptBasicReleaseInvoiceByreceiptNumberTest() {
        String receiptNumber = null;
        ReleasePurchaseReceiptActionResultDto response = api.purchaseReceiptBasicReleaseInvoiceByreceiptNumber(receiptNumber);

        // TODO: test validations
    }
    
}
