/*
 * Visma Net API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 6.13.03.0008
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package no.systema.visma.v1client.api;

import no.systema.visma.v1client.model.CashTransactionDto;
import no.systema.visma.v1client.model.CashTransactionUpdateDto;
import no.systema.visma.v1client.model.ReleaseCashTransactionActionResultDto;
import no.systema.visma.v1client.model.ReverseCashTransactionActionDto;
import no.systema.visma.v1client.model.ReverseCashTransactionActionResultDto;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for CashTransactionApi
 */
@Ignore
public class CashTransactionApiTest {

    private final CashTransactionApi api = new CashTransactionApi();

    
    /**
     * Create a Cash Transaction
     *
     * Response Message has StatusCode Created if POST operation succeed
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void cashTransactionCreateCashTransactionTest() {
        CashTransactionUpdateDto cashTransaction = null;
        Object response = api.cashTransactionCreateCashTransaction(cashTransaction);

        // TODO: test validations
    }
    
    /**
     * Get all Transaction
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void cashTransactionGetAllTest() {
        Integer numberToRead = null;
        Integer skipRecords = null;
        String lastModifiedDateTime = null;
        String lastModifiedDateTimeCondition = null;
        List<CashTransactionDto> response = api.cashTransactionGetAll(numberToRead, skipRecords, lastModifiedDateTime, lastModifiedDateTimeCondition);

        // TODO: test validations
    }
    
    /**
     * Get a specific Transaction
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void cashTransactionGetByreferenceNumberTest() {
        String referenceNumber = null;
        CashTransactionDto response = api.cashTransactionGetByreferenceNumber(referenceNumber);

        // TODO: test validations
    }
    
    /**
     * Update a specific CashTransaction
     *
     * Response Message has StatusCode NoContent if PUT operation succeed
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void cashTransactionPutByreferenceNbrTest() {
        String referenceNbr = null;
        CashTransactionUpdateDto cashTransaction = null;
        Object response = api.cashTransactionPutByreferenceNbr(referenceNbr, cashTransaction);

        // TODO: test validations
    }
    
    /**
     * Release cash transaction
     *
     * The action result dto contains information about the result of running the action
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void cashTransactionReleaseByreferenceNbrTest() {
        String referenceNbr = null;
        ReleaseCashTransactionActionResultDto response = api.cashTransactionReleaseByreferenceNbr(referenceNbr);

        // TODO: test validations
    }
    
    /**
     * Reverse a Cash Transaction
     *
     * The action result dto contains information about the result of running the action
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void cashTransactionReverseByreferenceNbrTest() {
        String referenceNbr = null;
        ReverseCashTransactionActionDto reverseActionDto = null;
        ReverseCashTransactionActionResultDto response = api.cashTransactionReverseByreferenceNbr(referenceNbr, reverseActionDto);

        // TODO: test validations
    }
    
}
