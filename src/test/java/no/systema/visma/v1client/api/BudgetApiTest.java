/*
 * Visma Net API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 6.13.03.0008
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package no.systema.visma.v1client.api;

import no.systema.visma.v1client.model.BudgetDto;
import no.systema.visma.v1client.model.BudgetUpdateDto;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for BudgetApi
 */
@Ignore
public class BudgetApiTest {

    private final BudgetApi api = new BudgetApi();

    
    /**
     * Create a Budget
     *
     * Response Message has StatusCode Created if POST operation succeed
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void budgetCreateBudgetTest() {
        BudgetUpdateDto budget = null;
        Object response = api.budgetCreateBudget(budget);

        // TODO: test validations
    }
    
    /**
     * Get a range of General Ledger Budget Figures
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void budgetGetAllTest() {
        String greaterThanValue = null;
        Integer numberToRead = null;
        Integer skipRecords = null;
        String orderBy = null;
        String lastModifiedDateTime = null;
        String lastModifiedDateTimeCondition = null;
        String branch = null;
        String ledger = null;
        String financialYear = null;
        String subaccount = null;
        List<BudgetDto> response = api.budgetGetAll(greaterThanValue, numberToRead, skipRecords, orderBy, lastModifiedDateTime, lastModifiedDateTimeCondition, branch, ledger, financialYear, subaccount);

        // TODO: test validations
    }
    
    /**
     * Update a specific Budget
     *
     * Response Message has StatusCode NoContent if PUT operation succeed
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void budgetPutTest() {
        BudgetUpdateDto budget = null;
        Object response = api.budgetPut(budget);

        // TODO: test validations
    }
    
}
