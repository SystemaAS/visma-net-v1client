/*
 * Visma Net API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 6.13.03.0008
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package no.systema.visma.v1client.api;

import no.systema.visma.v1client.model.CancelSalesOrderActionDto;
import no.systema.visma.v1client.model.CancelSalesOrderActionResultDto;
import no.systema.visma.v1client.model.CreateShipmentActionDto;
import no.systema.visma.v1client.model.CreateShipmentActionResultDto;
import no.systema.visma.v1client.model.SalesOrderDto;
import no.systema.visma.v1client.model.SalesOrderUpdateDto;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for SalesOrderApi
 */
@Ignore
public class SalesOrderApiTest {

    private final SalesOrderApi api = new SalesOrderApi();

    
    /**
     * Cancel Order action
     *
     * The action result dto contains information about the result of running the action
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void salesOrderCancelSalesOrderBysaleOrderNumberTest() {
        String saleOrderNumber = null;
        CancelSalesOrderActionDto cancelSalesOrderActionDto = null;
        CancelSalesOrderActionResultDto response = api.salesOrderCancelSalesOrderBysaleOrderNumber(saleOrderNumber, cancelSalesOrderActionDto);

        // TODO: test validations
    }
    
    /**
     * Creates an attachment and associates it with a sales order. If the file already exists, a new revision is created.  - Method is deprecated and will be removed in a future version. Please start using the new method with order type.
     *
     * Response Message has StatusCode Created if POST operation succeed
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void salesOrderCreateHeaderAttachmentByorderNumberTest() {
        String orderNumber = null;
        Object response = api.salesOrderCreateHeaderAttachmentByorderNumber(orderNumber);

        // TODO: test validations
    }
    
    /**
     * Creates an attachment and associates it with a sales order on a specific order type. If the file already exists, a new revision is created.
     *
     * Response Message has StatusCode Created if POST operation succeed
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void salesOrderCreateHeaderAttachmentByorderNumberorderTypeTest() {
        String orderNumber = null;
        String orderType = null;
        Object response = api.salesOrderCreateHeaderAttachmentByorderNumberorderType(orderNumber, orderType);

        // TODO: test validations
    }
    
    /**
     * Creates an attachment and associates it with a certain sales order line. If the file already exists, a new revision is created.  - Method is deprecated and will be removed in a future version. Please start using the new method with order type.
     *
     * Response Message has StatusCode Created if POST operation succeed
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void salesOrderCreateLineAttachmentByorderNumberlineNumberTest() {
        String orderNumber = null;
        Integer lineNumber = null;
        Object response = api.salesOrderCreateLineAttachmentByorderNumberlineNumber(orderNumber, lineNumber);

        // TODO: test validations
    }
    
    /**
     * Creates an attachment and associates it with a certain sales order line on a specific order type. If the file already exists, a new revision is created.
     *
     * Response Message has StatusCode Created if POST operation succeed
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void salesOrderCreateLineAttachmentByorderNumberorderTypelineNumberTest() {
        String orderNumber = null;
        String orderType = null;
        Integer lineNumber = null;
        Object response = api.salesOrderCreateLineAttachmentByorderNumberorderTypelineNumber(orderNumber, orderType, lineNumber);

        // TODO: test validations
    }
    
    /**
     * Create shipment operation
     *
     * The action result dto contains information about the result of running the action
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void salesOrderCreateShipmentActionBysaleOrderNumberTest() {
        String saleOrderNumber = null;
        CreateShipmentActionDto createShipmentActionDto = null;
        CreateShipmentActionResultDto response = api.salesOrderCreateShipmentActionBysaleOrderNumber(saleOrderNumber, createShipmentActionDto);

        // TODO: test validations
    }
    
    /**
     * Get a range of SO Orders
     *
     * Data for all Sales Orders
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void salesOrderGetAllOrdersTest() {
        String orderType = null;
        String greaterThanValue = null;
        Integer numberToRead = null;
        Integer skipRecords = null;
        String orderBy = null;
        Boolean showNotes = null;
        String lastModifiedDateTime = null;
        String lastModifiedDateTimeCondition = null;
        Integer pageNumber = null;
        Integer pageSize = null;
        List<SalesOrderDto> response = api.salesOrderGetAllOrders(orderType, greaterThanValue, numberToRead, skipRecords, orderBy, showNotes, lastModifiedDateTime, lastModifiedDateTimeCondition, pageNumber, pageSize);

        // TODO: test validations
    }
    
    /**
     * Get a specific SO Order
     *
     * Data for a single Sales Order
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void salesOrderGetByorderNbrTest() {
        String orderNbr = null;
        SalesOrderDto response = api.salesOrderGetByorderNbr(orderNbr);

        // TODO: test validations
    }
    
    /**
     * Get a specific type of Order
     *
     * Data for a single Sales Order
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void salesOrderGetOrderByTypeByorderTypeorderNbrTest() {
        String orderType = null;
        String orderNbr = null;
        SalesOrderDto response = api.salesOrderGetOrderByTypeByorderTypeorderNbr(orderType, orderNbr);

        // TODO: test validations
    }
    
    /**
     * Create a Sale Order
     *
     * Response Message has StatusCode Created if POST operation succeed
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void salesOrderPostTest() {
        SalesOrderUpdateDto saleOrderUpdateDto = null;
        Object response = api.salesOrderPost(saleOrderUpdateDto);

        // TODO: test validations
    }
    
    /**
     * Get the print report of the Sales Order Quote
     *
     * The File is in Content of the message
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void salesOrderPrintOrderByorderNumberorderTypeTest() {
        String orderNumber = null;
        String orderType = null;
        Object response = api.salesOrderPrintOrderByorderNumberorderType(orderNumber, orderType);

        // TODO: test validations
    }
    
    /**
     * Update a specific Sale Order
     *
     * Response Message has StatusCode NoContent if PUT operation succeed
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void salesOrderPutBysalesOrderNumberTest() {
        String salesOrderNumber = null;
        SalesOrderUpdateDto saleOrderUpdateDto = null;
        Object response = api.salesOrderPutBysalesOrderNumber(salesOrderNumber, saleOrderUpdateDto);

        // TODO: test validations
    }
    
}
