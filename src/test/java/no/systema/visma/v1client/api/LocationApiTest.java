/*
 * Visma Net API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 6.13.03.0008
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package no.systema.visma.v1client.api;

import no.systema.visma.v1client.model.LocationDto;
import no.systema.visma.v1client.model.LocationUpdateDto;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for LocationApi
 */
@Ignore
public class LocationApiTest {

    private final LocationApi api = new LocationApi();

    
    /**
     * Create a Location
     *
     * Response Message has StatusCode Created if POST operation succeed
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void locationCreateTest() {
        LocationUpdateDto location = null;
        Object response = api.locationCreate(location);

        // TODO: test validations
    }
    
    /**
     * Get a specific Location of a Baccount
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void locationGetLocationBybAccountIdlocationIdTest() {
        String bAccountId = null;
        String locationId = null;
        LocationDto response = api.locationGetLocationBybAccountIdlocationId(bAccountId, locationId);

        // TODO: test validations
    }
    
    /**
     * Get a range of Locations
     *
     * Data for the Locations
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void locationGetLocationsTest() {
        String locationId = null;
        String gln = null;
        String greaterThanValue = null;
        Integer numberToRead = null;
        Integer skipRecords = null;
        String orderBy = null;
        String lastModifiedDateTime = null;
        String lastModifiedDateTimeCondition = null;
        Integer pageNumber = null;
        Integer pageSize = null;
        List<LocationDto> response = api.locationGetLocations(locationId, gln, greaterThanValue, numberToRead, skipRecords, orderBy, lastModifiedDateTime, lastModifiedDateTimeCondition, pageNumber, pageSize);

        // TODO: test validations
    }
    
    /**
     * Get a range of Locations for a BAccount
     *
     * Data for the Locations
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void locationGetLocationsForBaccountBybAccountIdTest() {
        String bAccountId = null;
        String locationId = null;
        String gln = null;
        String greaterThanValue = null;
        Integer numberToRead = null;
        Integer skipRecords = null;
        String orderBy = null;
        String lastModifiedDateTime = null;
        String lastModifiedDateTimeCondition = null;
        Integer pageNumber = null;
        Integer pageSize = null;
        List<LocationDto> response = api.locationGetLocationsForBaccountBybAccountId(bAccountId, locationId, gln, greaterThanValue, numberToRead, skipRecords, orderBy, lastModifiedDateTime, lastModifiedDateTimeCondition, pageNumber, pageSize);

        // TODO: test validations
    }
    
    /**
     * Update a specific Location
     *
     * Response Message has StatusCode NoContent if PUT operation succeed
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void locationUpdateBybAccountIdlocationIdTest() {
        String bAccountId = null;
        String locationId = null;
        LocationUpdateDto location = null;
        Object response = api.locationUpdateBybAccountIdlocationId(bAccountId, locationId, location);

        // TODO: test validations
    }
    
}
