/*
 * Visma Net API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 6.13.03.0008
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package no.systema.visma.v1client.api;

import no.systema.visma.v1client.model.JournalTransactionDto;
import no.systema.visma.v1client.model.JournalTransactionUpdateDto;
import no.systema.visma.v1client.model.ReleaseJournalTransactionActionResultDto;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for JournalTransactionApi
 */
@Ignore
public class JournalTransactionApiTest {

    private final JournalTransactionApi api = new JournalTransactionApi();

    
    /**
     * Creates an attachment and associates it with an journalTransaction. If the file already exists, a new revision is created.
     *
     * Response Message has StatusCode Created if POST operation succeed
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void journalTransactionCreateHeaderAttachmentByjournalTransactionNumberTest() {
        String journalTransactionNumber = null;
        Object response = api.journalTransactionCreateHeaderAttachmentByjournalTransactionNumber(journalTransactionNumber);

        // TODO: test validations
    }
    
    /**
     * Creates an attachment and associates it with a certain journalTransaction line. If the file already exists, a new revision is created.
     *
     * Response Message has StatusCode Created if POST operation succeed
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void journalTransactionCreateLineAttachmentByjournalTransactionNumberlineNumberTest() {
        String journalTransactionNumber = null;
        Integer lineNumber = null;
        Object response = api.journalTransactionCreateLineAttachmentByjournalTransactionNumberlineNumber(journalTransactionNumber, lineNumber);

        // TODO: test validations
    }
    
    /**
     * Get a range of Journal Transactions
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void journalTransactionGetAllJournalTransactionsTest() {
        String greaterThanValue = null;
        Integer numberToRead = null;
        Integer skipRecords = null;
        String orderBy = null;
        String lastModifiedDateTime = null;
        String lastModifiedDateTimeCondition = null;
        String customerSupplierStart = null;
        String customerSupplierEnd = null;
        Integer released = null;
        Integer pageNumber = null;
        Integer pageSize = null;
        List<JournalTransactionDto> response = api.journalTransactionGetAllJournalTransactions(greaterThanValue, numberToRead, skipRecords, orderBy, lastModifiedDateTime, lastModifiedDateTimeCondition, customerSupplierStart, customerSupplierEnd, released, pageNumber, pageSize);

        // TODO: test validations
    }
    
    /**
     * Get a specific Journal Transaction
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void journalTransactionGetSpecificJournalTransactionsByjournalTransactionNumberTest() {
        String journalTransactionNumber = null;
        JournalTransactionDto response = api.journalTransactionGetSpecificJournalTransactionsByjournalTransactionNumber(journalTransactionNumber);

        // TODO: test validations
    }
    
    /**
     * Create a Journal Transaction
     *
     * Response Message has StatusCode Created if POST operation succeed
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void journalTransactionPostTest() {
        JournalTransactionUpdateDto journalTransaction = null;
        Object response = api.journalTransactionPost(journalTransaction);

        // TODO: test validations
    }
    
    /**
     * Update a Journal Transaction
     *
     * Response Message has StatusCode NoContent if PUT operation succeed
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void journalTransactionPutByjournalTransactionNumberTest() {
        String journalTransactionNumber = null;
        JournalTransactionUpdateDto journalTransaction = null;
        Object response = api.journalTransactionPutByjournalTransactionNumber(journalTransactionNumber, journalTransaction);

        // TODO: test validations
    }
    
    /**
     * Release journal transaction operation
     *
     * The action result dto contains information about the result of running the action
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void journalTransactionReleaseJournalTransactionByjournalTransactionNumberTest() {
        String journalTransactionNumber = null;
        ReleaseJournalTransactionActionResultDto response = api.journalTransactionReleaseJournalTransactionByjournalTransactionNumber(journalTransactionNumber);

        // TODO: test validations
    }
    
}
