/*
 * Visma Net API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 6.13.03.0008
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package no.systema.visma.v1client.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import no.systema.visma.v1client.model.TaxNumberDescriptionDto;

/**
 * This class represents a Tax Detail Line. Used for getting data.
 */
@ApiModel(description = "This class represents a Tax Detail Line. Used for getting data.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-04-16T15:04:09.234+02:00")
public class TaxDetailDto {
  @JsonProperty("taxId")
  private String taxId = null;

  @JsonProperty("recordId")
  private Integer recordId = null;

  @JsonProperty("vatId")
  private TaxNumberDescriptionDto vatId = null;

  @JsonProperty("vatRate")
  private Double vatRate = null;

  @JsonProperty("taxableAmount")
  private Double taxableAmount = null;

  @JsonProperty("vatAmount")
  private Double vatAmount = null;

  public TaxDetailDto taxId(String taxId) {
    this.taxId = taxId;
    return this;
  }

   /**
   * The identifier of a tax applied to the document.
   * @return taxId
  **/
  @ApiModelProperty(value = "The identifier of a tax applied to the document.")
  public String getTaxId() {
    return taxId;
  }

  public void setTaxId(String taxId) {
    this.taxId = taxId;
  }

  public TaxDetailDto recordId(Integer recordId) {
    this.recordId = recordId;
    return this;
  }

   /**
   * The id as stored in the database. It can be used when we want to update a tax record.
   * @return recordId
  **/
  @ApiModelProperty(value = "The id as stored in the database. It can be used when we want to update a tax record.")
  public Integer getRecordId() {
    return recordId;
  }

  public void setRecordId(Integer recordId) {
    this.recordId = recordId;
  }

  public TaxDetailDto vatId(TaxNumberDescriptionDto vatId) {
    this.vatId = vatId;
    return this;
  }

   /**
   * Get vatId
   * @return vatId
  **/
  @ApiModelProperty(value = "")
  public TaxNumberDescriptionDto getVatId() {
    return vatId;
  }

  public void setVatId(TaxNumberDescriptionDto vatId) {
    this.vatId = vatId;
  }

  public TaxDetailDto vatRate(Double vatRate) {
    this.vatRate = vatRate;
    return this;
  }

   /**
   * The tax rate of the tax.
   * @return vatRate
  **/
  @ApiModelProperty(value = "The tax rate of the tax.")
  public Double getVatRate() {
    return vatRate;
  }

  public void setVatRate(Double vatRate) {
    this.vatRate = vatRate;
  }

  public TaxDetailDto taxableAmount(Double taxableAmount) {
    this.taxableAmount = taxableAmount;
    return this;
  }

   /**
   * The taxable amount for the tax, which is calculated at the document level.
   * @return taxableAmount
  **/
  @ApiModelProperty(value = "The taxable amount for the tax, which is calculated at the document level.")
  public Double getTaxableAmount() {
    return taxableAmount;
  }

  public void setTaxableAmount(Double taxableAmount) {
    this.taxableAmount = taxableAmount;
  }

  public TaxDetailDto vatAmount(Double vatAmount) {
    this.vatAmount = vatAmount;
    return this;
  }

   /**
   * The tax amount for the specific tax, which is calculated at the document level.
   * @return vatAmount
  **/
  @ApiModelProperty(value = "The tax amount for the specific tax, which is calculated at the document level.")
  public Double getVatAmount() {
    return vatAmount;
  }

  public void setVatAmount(Double vatAmount) {
    this.vatAmount = vatAmount;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TaxDetailDto taxDetailDto = (TaxDetailDto) o;
    return Objects.equals(this.taxId, taxDetailDto.taxId) &&
        Objects.equals(this.recordId, taxDetailDto.recordId) &&
        Objects.equals(this.vatId, taxDetailDto.vatId) &&
        Objects.equals(this.vatRate, taxDetailDto.vatRate) &&
        Objects.equals(this.taxableAmount, taxDetailDto.taxableAmount) &&
        Objects.equals(this.vatAmount, taxDetailDto.vatAmount);
  }

  @Override
  public int hashCode() {
    return Objects.hash(taxId, recordId, vatId, vatRate, taxableAmount, vatAmount);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TaxDetailDto {\n");
    
    sb.append("    taxId: ").append(toIndentedString(taxId)).append("\n");
    sb.append("    recordId: ").append(toIndentedString(recordId)).append("\n");
    sb.append("    vatId: ").append(toIndentedString(vatId)).append("\n");
    sb.append("    vatRate: ").append(toIndentedString(vatRate)).append("\n");
    sb.append("    taxableAmount: ").append(toIndentedString(taxableAmount)).append("\n");
    sb.append("    vatAmount: ").append(toIndentedString(vatAmount)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

