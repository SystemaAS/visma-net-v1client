/*
 * Visma Net API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 6.13.03.0008
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package no.systema.visma.v1client.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

/**
 * GeneralLedgerBalanceQueryParameters
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-04-16T15:04:09.234+02:00")
public class GeneralLedgerBalanceQueryParameters {
  @JsonProperty("greaterThanValue")
  private String greaterThanValue = null;

  @JsonProperty("numberToRead")
  private Integer numberToRead = null;

  @JsonProperty("skipRecords")
  private Integer skipRecords = null;

  @JsonProperty("periodId")
  private String periodId = null;

  @JsonProperty("periodIdCondition")
  private String periodIdCondition = null;

  @JsonProperty("orderBy")
  private String orderBy = null;

  @JsonProperty("accountId")
  private String accountId = null;

  @JsonProperty("yearClosed")
  private Integer yearClosed = null;

  /**
   * Gets or Sets balanceType
   */
  public enum BalanceTypeEnum {
    ACTUAL("Actual"),
    
    REPORT("Report"),
    
    STATISTICAL("Statistical"),
    
    BUDGET("Budget");

    private String value;

    BalanceTypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static BalanceTypeEnum fromValue(String text) {
      for (BalanceTypeEnum b : BalanceTypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("balanceType")
  private BalanceTypeEnum balanceType = null;

  @JsonProperty("toggleBalanceSigns")
  private Integer toggleBalanceSigns = null;

  @JsonProperty("pageNumber")
  private Integer pageNumber = null;

  @JsonProperty("pageSize")
  private Integer pageSize = null;

  public GeneralLedgerBalanceQueryParameters greaterThanValue(String greaterThanValue) {
    this.greaterThanValue = greaterThanValue;
    return this;
  }

   /**
   * Get greaterThanValue
   * @return greaterThanValue
  **/
  @ApiModelProperty(value = "")
  public String getGreaterThanValue() {
    return greaterThanValue;
  }

  public void setGreaterThanValue(String greaterThanValue) {
    this.greaterThanValue = greaterThanValue;
  }

  public GeneralLedgerBalanceQueryParameters numberToRead(Integer numberToRead) {
    this.numberToRead = numberToRead;
    return this;
  }

   /**
   * Get numberToRead
   * @return numberToRead
  **/
  @ApiModelProperty(value = "")
  public Integer getNumberToRead() {
    return numberToRead;
  }

  public void setNumberToRead(Integer numberToRead) {
    this.numberToRead = numberToRead;
  }

  public GeneralLedgerBalanceQueryParameters skipRecords(Integer skipRecords) {
    this.skipRecords = skipRecords;
    return this;
  }

   /**
   * Get skipRecords
   * @return skipRecords
  **/
  @ApiModelProperty(value = "")
  public Integer getSkipRecords() {
    return skipRecords;
  }

  public void setSkipRecords(Integer skipRecords) {
    this.skipRecords = skipRecords;
  }

  public GeneralLedgerBalanceQueryParameters periodId(String periodId) {
    this.periodId = periodId;
    return this;
  }

   /**
   * Get periodId
   * @return periodId
  **/
  @ApiModelProperty(value = "")
  public String getPeriodId() {
    return periodId;
  }

  public void setPeriodId(String periodId) {
    this.periodId = periodId;
  }

  public GeneralLedgerBalanceQueryParameters periodIdCondition(String periodIdCondition) {
    this.periodIdCondition = periodIdCondition;
    return this;
  }

   /**
   * Get periodIdCondition
   * @return periodIdCondition
  **/
  @ApiModelProperty(value = "")
  public String getPeriodIdCondition() {
    return periodIdCondition;
  }

  public void setPeriodIdCondition(String periodIdCondition) {
    this.periodIdCondition = periodIdCondition;
  }

  public GeneralLedgerBalanceQueryParameters orderBy(String orderBy) {
    this.orderBy = orderBy;
    return this;
  }

   /**
   * Order Options: AccountId, FinancialPeriod
   * @return orderBy
  **/
  @ApiModelProperty(value = "Order Options: AccountId, FinancialPeriod")
  public String getOrderBy() {
    return orderBy;
  }

  public void setOrderBy(String orderBy) {
    this.orderBy = orderBy;
  }

  public GeneralLedgerBalanceQueryParameters accountId(String accountId) {
    this.accountId = accountId;
    return this;
  }

   /**
   * Get accountId
   * @return accountId
  **/
  @ApiModelProperty(value = "")
  public String getAccountId() {
    return accountId;
  }

  public void setAccountId(String accountId) {
    this.accountId = accountId;
  }

  public GeneralLedgerBalanceQueryParameters yearClosed(Integer yearClosed) {
    this.yearClosed = yearClosed;
    return this;
  }

   /**
   * Get yearClosed
   * @return yearClosed
  **/
  @ApiModelProperty(value = "")
  public Integer getYearClosed() {
    return yearClosed;
  }

  public void setYearClosed(Integer yearClosed) {
    this.yearClosed = yearClosed;
  }

  public GeneralLedgerBalanceQueryParameters balanceType(BalanceTypeEnum balanceType) {
    this.balanceType = balanceType;
    return this;
  }

   /**
   * Get balanceType
   * @return balanceType
  **/
  @ApiModelProperty(value = "")
  public BalanceTypeEnum getBalanceType() {
    return balanceType;
  }

  public void setBalanceType(BalanceTypeEnum balanceType) {
    this.balanceType = balanceType;
  }

  public GeneralLedgerBalanceQueryParameters toggleBalanceSigns(Integer toggleBalanceSigns) {
    this.toggleBalanceSigns = toggleBalanceSigns;
    return this;
  }

   /**
   * Parameter can be used in order to change the balance sign for liability accounts and expense accounts, in order to match the UI
   * @return toggleBalanceSigns
  **/
  @ApiModelProperty(value = "Parameter can be used in order to change the balance sign for liability accounts and expense accounts, in order to match the UI")
  public Integer getToggleBalanceSigns() {
    return toggleBalanceSigns;
  }

  public void setToggleBalanceSigns(Integer toggleBalanceSigns) {
    this.toggleBalanceSigns = toggleBalanceSigns;
  }

  public GeneralLedgerBalanceQueryParameters pageNumber(Integer pageNumber) {
    this.pageNumber = pageNumber;
    return this;
  }

   /**
   * Get pageNumber
   * @return pageNumber
  **/
  @ApiModelProperty(value = "")
  public Integer getPageNumber() {
    return pageNumber;
  }

  public void setPageNumber(Integer pageNumber) {
    this.pageNumber = pageNumber;
  }

  public GeneralLedgerBalanceQueryParameters pageSize(Integer pageSize) {
    this.pageSize = pageSize;
    return this;
  }

   /**
   * Get pageSize
   * @return pageSize
  **/
  @ApiModelProperty(value = "")
  public Integer getPageSize() {
    return pageSize;
  }

  public void setPageSize(Integer pageSize) {
    this.pageSize = pageSize;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GeneralLedgerBalanceQueryParameters generalLedgerBalanceQueryParameters = (GeneralLedgerBalanceQueryParameters) o;
    return Objects.equals(this.greaterThanValue, generalLedgerBalanceQueryParameters.greaterThanValue) &&
        Objects.equals(this.numberToRead, generalLedgerBalanceQueryParameters.numberToRead) &&
        Objects.equals(this.skipRecords, generalLedgerBalanceQueryParameters.skipRecords) &&
        Objects.equals(this.periodId, generalLedgerBalanceQueryParameters.periodId) &&
        Objects.equals(this.periodIdCondition, generalLedgerBalanceQueryParameters.periodIdCondition) &&
        Objects.equals(this.orderBy, generalLedgerBalanceQueryParameters.orderBy) &&
        Objects.equals(this.accountId, generalLedgerBalanceQueryParameters.accountId) &&
        Objects.equals(this.yearClosed, generalLedgerBalanceQueryParameters.yearClosed) &&
        Objects.equals(this.balanceType, generalLedgerBalanceQueryParameters.balanceType) &&
        Objects.equals(this.toggleBalanceSigns, generalLedgerBalanceQueryParameters.toggleBalanceSigns) &&
        Objects.equals(this.pageNumber, generalLedgerBalanceQueryParameters.pageNumber) &&
        Objects.equals(this.pageSize, generalLedgerBalanceQueryParameters.pageSize);
  }

  @Override
  public int hashCode() {
    return Objects.hash(greaterThanValue, numberToRead, skipRecords, periodId, periodIdCondition, orderBy, accountId, yearClosed, balanceType, toggleBalanceSigns, pageNumber, pageSize);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GeneralLedgerBalanceQueryParameters {\n");
    
    sb.append("    greaterThanValue: ").append(toIndentedString(greaterThanValue)).append("\n");
    sb.append("    numberToRead: ").append(toIndentedString(numberToRead)).append("\n");
    sb.append("    skipRecords: ").append(toIndentedString(skipRecords)).append("\n");
    sb.append("    periodId: ").append(toIndentedString(periodId)).append("\n");
    sb.append("    periodIdCondition: ").append(toIndentedString(periodIdCondition)).append("\n");
    sb.append("    orderBy: ").append(toIndentedString(orderBy)).append("\n");
    sb.append("    accountId: ").append(toIndentedString(accountId)).append("\n");
    sb.append("    yearClosed: ").append(toIndentedString(yearClosed)).append("\n");
    sb.append("    balanceType: ").append(toIndentedString(balanceType)).append("\n");
    sb.append("    toggleBalanceSigns: ").append(toIndentedString(toggleBalanceSigns)).append("\n");
    sb.append("    pageNumber: ").append(toIndentedString(pageNumber)).append("\n");
    sb.append("    pageSize: ").append(toIndentedString(pageSize)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

