/*
 * Visma Net API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 6.13.03.0008
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package no.systema.visma.v1client.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.time.LocalDateTime;
import no.systema.visma.v1client.model.ReasonCodeDto;

/**
 * PaymentLineDto
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-04-16T15:04:09.234+02:00")
public class PaymentLineDto {
  /**
   * Gets or Sets documentType
   */
  public enum DocumentTypeEnum {
    INVOICE("Invoice"),
    
    DEBITNOTE("DebitNote"),
    
    CREDITNOTE("CreditNote"),
    
    PAYMENT("Payment"),
    
    VOIDPAYMENT("VoidPayment"),
    
    PREPAYMENT("Prepayment"),
    
    REFUND("Refund"),
    
    FINCHARGE("FinCharge"),
    
    SMALLBALANCEWO("SmallBalanceWo"),
    
    SMALLCREDITWO("SmallCreditWo"),
    
    CASHSALE("CashSale"),
    
    CASHRETURN("CashReturn"),
    
    UNDEFINED("Undefined"),
    
    NOUPDATE("NoUpdate");

    private String value;

    DocumentTypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static DocumentTypeEnum fromValue(String text) {
      for (DocumentTypeEnum b : DocumentTypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("documentType")
  private DocumentTypeEnum documentType = null;

  @JsonProperty("refNbr")
  private String refNbr = null;

  @JsonProperty("amountPaid")
  private Double amountPaid = null;

  @JsonProperty("cashDiscountTaken")
  private Double cashDiscountTaken = null;

  @JsonProperty("balanceWriteOff")
  private Double balanceWriteOff = null;

  @JsonProperty("writeOffReasonCode")
  private ReasonCodeDto writeOffReasonCode = null;

  @JsonProperty("date")
  private LocalDateTime date = null;

  @JsonProperty("dueDate")
  private LocalDateTime dueDate = null;

  @JsonProperty("cashDiscountDate")
  private LocalDateTime cashDiscountDate = null;

  @JsonProperty("balance")
  private Double balance = null;

  @JsonProperty("cashDiscountBalance")
  private Double cashDiscountBalance = null;

  @JsonProperty("description")
  private String description = null;

  @JsonProperty("currency")
  private String currency = null;

  @JsonProperty("postPeriod")
  private String postPeriod = null;

  @JsonProperty("customerOrder")
  private String customerOrder = null;

  @JsonProperty("crossRate")
  private Double crossRate = null;

  public PaymentLineDto documentType(DocumentTypeEnum documentType) {
    this.documentType = documentType;
    return this;
  }

   /**
   * Get documentType
   * @return documentType
  **/
  @ApiModelProperty(value = "")
  public DocumentTypeEnum getDocumentType() {
    return documentType;
  }

  public void setDocumentType(DocumentTypeEnum documentType) {
    this.documentType = documentType;
  }

  public PaymentLineDto refNbr(String refNbr) {
    this.refNbr = refNbr;
    return this;
  }

   /**
   * Get refNbr
   * @return refNbr
  **/
  @ApiModelProperty(value = "")
  public String getRefNbr() {
    return refNbr;
  }

  public void setRefNbr(String refNbr) {
    this.refNbr = refNbr;
  }

  public PaymentLineDto amountPaid(Double amountPaid) {
    this.amountPaid = amountPaid;
    return this;
  }

   /**
   * Get amountPaid
   * @return amountPaid
  **/
  @ApiModelProperty(value = "")
  public Double getAmountPaid() {
    return amountPaid;
  }

  public void setAmountPaid(Double amountPaid) {
    this.amountPaid = amountPaid;
  }

  public PaymentLineDto cashDiscountTaken(Double cashDiscountTaken) {
    this.cashDiscountTaken = cashDiscountTaken;
    return this;
  }

   /**
   * Get cashDiscountTaken
   * @return cashDiscountTaken
  **/
  @ApiModelProperty(value = "")
  public Double getCashDiscountTaken() {
    return cashDiscountTaken;
  }

  public void setCashDiscountTaken(Double cashDiscountTaken) {
    this.cashDiscountTaken = cashDiscountTaken;
  }

  public PaymentLineDto balanceWriteOff(Double balanceWriteOff) {
    this.balanceWriteOff = balanceWriteOff;
    return this;
  }

   /**
   * Get balanceWriteOff
   * @return balanceWriteOff
  **/
  @ApiModelProperty(value = "")
  public Double getBalanceWriteOff() {
    return balanceWriteOff;
  }

  public void setBalanceWriteOff(Double balanceWriteOff) {
    this.balanceWriteOff = balanceWriteOff;
  }

  public PaymentLineDto writeOffReasonCode(ReasonCodeDto writeOffReasonCode) {
    this.writeOffReasonCode = writeOffReasonCode;
    return this;
  }

   /**
   * Get writeOffReasonCode
   * @return writeOffReasonCode
  **/
  @ApiModelProperty(value = "")
  public ReasonCodeDto getWriteOffReasonCode() {
    return writeOffReasonCode;
  }

  public void setWriteOffReasonCode(ReasonCodeDto writeOffReasonCode) {
    this.writeOffReasonCode = writeOffReasonCode;
  }

  public PaymentLineDto date(LocalDateTime date) {
    this.date = date;
    return this;
  }

   /**
   * Get date
   * @return date
  **/
  @ApiModelProperty(value = "")
  public LocalDateTime getDate() {
    return date;
  }

  public void setDate(LocalDateTime date) {
    this.date = date;
  }

  public PaymentLineDto dueDate(LocalDateTime dueDate) {
    this.dueDate = dueDate;
    return this;
  }

   /**
   * Get dueDate
   * @return dueDate
  **/
  @ApiModelProperty(value = "")
  public LocalDateTime getDueDate() {
    return dueDate;
  }

  public void setDueDate(LocalDateTime dueDate) {
    this.dueDate = dueDate;
  }

  public PaymentLineDto cashDiscountDate(LocalDateTime cashDiscountDate) {
    this.cashDiscountDate = cashDiscountDate;
    return this;
  }

   /**
   * Get cashDiscountDate
   * @return cashDiscountDate
  **/
  @ApiModelProperty(value = "")
  public LocalDateTime getCashDiscountDate() {
    return cashDiscountDate;
  }

  public void setCashDiscountDate(LocalDateTime cashDiscountDate) {
    this.cashDiscountDate = cashDiscountDate;
  }

  public PaymentLineDto balance(Double balance) {
    this.balance = balance;
    return this;
  }

   /**
   * Get balance
   * @return balance
  **/
  @ApiModelProperty(value = "")
  public Double getBalance() {
    return balance;
  }

  public void setBalance(Double balance) {
    this.balance = balance;
  }

  public PaymentLineDto cashDiscountBalance(Double cashDiscountBalance) {
    this.cashDiscountBalance = cashDiscountBalance;
    return this;
  }

   /**
   * Get cashDiscountBalance
   * @return cashDiscountBalance
  **/
  @ApiModelProperty(value = "")
  public Double getCashDiscountBalance() {
    return cashDiscountBalance;
  }

  public void setCashDiscountBalance(Double cashDiscountBalance) {
    this.cashDiscountBalance = cashDiscountBalance;
  }

  public PaymentLineDto description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @ApiModelProperty(value = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public PaymentLineDto currency(String currency) {
    this.currency = currency;
    return this;
  }

   /**
   * Get currency
   * @return currency
  **/
  @ApiModelProperty(value = "")
  public String getCurrency() {
    return currency;
  }

  public void setCurrency(String currency) {
    this.currency = currency;
  }

  public PaymentLineDto postPeriod(String postPeriod) {
    this.postPeriod = postPeriod;
    return this;
  }

   /**
   * The financial period to which the transactions recorded in the document should be posted. Format MMYYYY.
   * @return postPeriod
  **/
  @ApiModelProperty(value = "The financial period to which the transactions recorded in the document should be posted. Format MMYYYY.")
  public String getPostPeriod() {
    return postPeriod;
  }

  public void setPostPeriod(String postPeriod) {
    this.postPeriod = postPeriod;
  }

  public PaymentLineDto customerOrder(String customerOrder) {
    this.customerOrder = customerOrder;
    return this;
  }

   /**
   * Get customerOrder
   * @return customerOrder
  **/
  @ApiModelProperty(value = "")
  public String getCustomerOrder() {
    return customerOrder;
  }

  public void setCustomerOrder(String customerOrder) {
    this.customerOrder = customerOrder;
  }

  public PaymentLineDto crossRate(Double crossRate) {
    this.crossRate = crossRate;
    return this;
  }

   /**
   * Get crossRate
   * @return crossRate
  **/
  @ApiModelProperty(value = "")
  public Double getCrossRate() {
    return crossRate;
  }

  public void setCrossRate(Double crossRate) {
    this.crossRate = crossRate;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PaymentLineDto paymentLineDto = (PaymentLineDto) o;
    return Objects.equals(this.documentType, paymentLineDto.documentType) &&
        Objects.equals(this.refNbr, paymentLineDto.refNbr) &&
        Objects.equals(this.amountPaid, paymentLineDto.amountPaid) &&
        Objects.equals(this.cashDiscountTaken, paymentLineDto.cashDiscountTaken) &&
        Objects.equals(this.balanceWriteOff, paymentLineDto.balanceWriteOff) &&
        Objects.equals(this.writeOffReasonCode, paymentLineDto.writeOffReasonCode) &&
        Objects.equals(this.date, paymentLineDto.date) &&
        Objects.equals(this.dueDate, paymentLineDto.dueDate) &&
        Objects.equals(this.cashDiscountDate, paymentLineDto.cashDiscountDate) &&
        Objects.equals(this.balance, paymentLineDto.balance) &&
        Objects.equals(this.cashDiscountBalance, paymentLineDto.cashDiscountBalance) &&
        Objects.equals(this.description, paymentLineDto.description) &&
        Objects.equals(this.currency, paymentLineDto.currency) &&
        Objects.equals(this.postPeriod, paymentLineDto.postPeriod) &&
        Objects.equals(this.customerOrder, paymentLineDto.customerOrder) &&
        Objects.equals(this.crossRate, paymentLineDto.crossRate);
  }

  @Override
  public int hashCode() {
    return Objects.hash(documentType, refNbr, amountPaid, cashDiscountTaken, balanceWriteOff, writeOffReasonCode, date, dueDate, cashDiscountDate, balance, cashDiscountBalance, description, currency, postPeriod, customerOrder, crossRate);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PaymentLineDto {\n");
    
    sb.append("    documentType: ").append(toIndentedString(documentType)).append("\n");
    sb.append("    refNbr: ").append(toIndentedString(refNbr)).append("\n");
    sb.append("    amountPaid: ").append(toIndentedString(amountPaid)).append("\n");
    sb.append("    cashDiscountTaken: ").append(toIndentedString(cashDiscountTaken)).append("\n");
    sb.append("    balanceWriteOff: ").append(toIndentedString(balanceWriteOff)).append("\n");
    sb.append("    writeOffReasonCode: ").append(toIndentedString(writeOffReasonCode)).append("\n");
    sb.append("    date: ").append(toIndentedString(date)).append("\n");
    sb.append("    dueDate: ").append(toIndentedString(dueDate)).append("\n");
    sb.append("    cashDiscountDate: ").append(toIndentedString(cashDiscountDate)).append("\n");
    sb.append("    balance: ").append(toIndentedString(balance)).append("\n");
    sb.append("    cashDiscountBalance: ").append(toIndentedString(cashDiscountBalance)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    postPeriod: ").append(toIndentedString(postPeriod)).append("\n");
    sb.append("    customerOrder: ").append(toIndentedString(customerOrder)).append("\n");
    sb.append("    crossRate: ").append(toIndentedString(crossRate)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

