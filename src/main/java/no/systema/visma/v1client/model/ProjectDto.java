/*
 * Visma Net API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 6.13.03.0008
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package no.systema.visma.v1client.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import no.systema.visma.v1client.model.AccountNumberTypeDescriptionDto;
import no.systema.visma.v1client.model.AllocationRuleIdDescriptionDto;
import no.systema.visma.v1client.model.BillingRuleIdDescriptionDto;
import no.systema.visma.v1client.model.CustomerNumberDto;
import no.systema.visma.v1client.model.EmployeeDto;
import no.systema.visma.v1client.model.LocationIdNameDto;
import no.systema.visma.v1client.model.RateTableIdDescriptionDto;
import no.systema.visma.v1client.model.SubAccountDescriptionDto;
import no.systema.visma.v1client.model.TaskDto;
import no.systema.visma.v1client.model.TemplateNumberDescriptionDto;
import no.systema.visma.v1client.model.VisibilityDto;

/**
 * This class represents a Project in ProjectController. Used for getting data.
 */
@ApiModel(description = "This class represents a Project in ProjectController. Used for getting data.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-04-16T15:04:09.234+02:00")
public class ProjectDto {
  @JsonProperty("internalID")
  private Integer internalID = null;

  @JsonProperty("projectID")
  private String projectID = null;

  @JsonProperty("customer")
  private CustomerNumberDto customer = null;

  @JsonProperty("hold")
  private Boolean hold = null;

  /**
   * Gets or Sets status
   */
  public enum StatusEnum {
    PLANNED("Planned"),
    
    ACTIVE("Active"),
    
    COMPLETED("Completed"),
    
    CANCELLED("Cancelled"),
    
    ONHOLD("OnHold"),
    
    PENDINGAPPROVAL("PendingApproval");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static StatusEnum fromValue(String text) {
      for (StatusEnum b : StatusEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("status")
  private StatusEnum status = null;

  @JsonProperty("template")
  private TemplateNumberDescriptionDto template = null;

  @JsonProperty("description")
  private String description = null;

  @JsonProperty("assets")
  private Double assets = null;

  @JsonProperty("liability")
  private Double liability = null;

  @JsonProperty("income")
  private Double income = null;

  @JsonProperty("expenses")
  private Double expenses = null;

  @JsonProperty("startDate")
  private LocalDateTime startDate = null;

  @JsonProperty("endDate")
  private LocalDateTime endDate = null;

  @JsonProperty("projectManager")
  private EmployeeDto projectManager = null;

  @JsonProperty("restrictEmployees")
  private Boolean restrictEmployees = null;

  @JsonProperty("restrictEquipment")
  private Boolean restrictEquipment = null;

  @JsonProperty("visibility")
  private VisibilityDto visibility = null;

  @JsonProperty("defAccount")
  private AccountNumberTypeDescriptionDto defAccount = null;

  @JsonProperty("defSub")
  private SubAccountDescriptionDto defSub = null;

  @JsonProperty("defAccrualAccount")
  private AccountNumberTypeDescriptionDto defAccrualAccount = null;

  @JsonProperty("defAccrualSub")
  private SubAccountDescriptionDto defAccrualSub = null;

  /**
   * Gets or Sets billingPeriod
   */
  public enum BillingPeriodEnum {
    WEEKLY("Weekly"),
    
    MONTHLY("Monthly"),
    
    QUARTERLY("Quarterly"),
    
    ANNUAL("Annual"),
    
    ONDEMAND("OnDemand");

    private String value;

    BillingPeriodEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static BillingPeriodEnum fromValue(String text) {
      for (BillingPeriodEnum b : BillingPeriodEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("billingPeriod")
  private BillingPeriodEnum billingPeriod = null;

  @JsonProperty("nextBillingDate")
  private LocalDateTime nextBillingDate = null;

  @JsonProperty("lastBillingDate")
  private LocalDateTime lastBillingDate = null;

  @JsonProperty("customerLocation")
  private LocationIdNameDto customerLocation = null;

  @JsonProperty("allocationRule")
  private AllocationRuleIdDescriptionDto allocationRule = null;

  @JsonProperty("billingRule")
  private BillingRuleIdDescriptionDto billingRule = null;

  @JsonProperty("rateTable")
  private RateTableIdDescriptionDto rateTable = null;

  @JsonProperty("autoAllocate")
  private Boolean autoAllocate = null;

  @JsonProperty("automaticReleaseAr")
  private Boolean automaticReleaseAr = null;

  @JsonProperty("lastModifiedDateTime")
  private LocalDateTime lastModifiedDateTime = null;

  @JsonProperty("tasks")
  private List<TaskDto> tasks = null;

  @JsonProperty("employees")
  private List<EmployeeDto> employees = null;

  @JsonProperty("systemTemplate")
  private Boolean systemTemplate = null;

  @JsonProperty("extras")
  private Map<String, Object> extras = null;

  @JsonProperty("errorInfo")
  private String errorInfo = null;

  public ProjectDto internalID(Integer internalID) {
    this.internalID = internalID;
    return this;
  }

   /**
   * Get internalID
   * @return internalID
  **/
  @ApiModelProperty(value = "")
  public Integer getInternalID() {
    return internalID;
  }

  public void setInternalID(Integer internalID) {
    this.internalID = internalID;
  }

  public ProjectDto projectID(String projectID) {
    this.projectID = projectID;
    return this;
  }

   /**
   * Get projectID
   * @return projectID
  **/
  @ApiModelProperty(value = "")
  public String getProjectID() {
    return projectID;
  }

  public void setProjectID(String projectID) {
    this.projectID = projectID;
  }

  public ProjectDto customer(CustomerNumberDto customer) {
    this.customer = customer;
    return this;
  }

   /**
   * Get customer
   * @return customer
  **/
  @ApiModelProperty(value = "")
  public CustomerNumberDto getCustomer() {
    return customer;
  }

  public void setCustomer(CustomerNumberDto customer) {
    this.customer = customer;
  }

  public ProjectDto hold(Boolean hold) {
    this.hold = hold;
    return this;
  }

   /**
   * Get hold
   * @return hold
  **/
  @ApiModelProperty(value = "")
  public Boolean isHold() {
    return hold;
  }

  public void setHold(Boolean hold) {
    this.hold = hold;
  }

  public ProjectDto status(StatusEnum status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @ApiModelProperty(value = "")
  public StatusEnum getStatus() {
    return status;
  }

  public void setStatus(StatusEnum status) {
    this.status = status;
  }

  public ProjectDto template(TemplateNumberDescriptionDto template) {
    this.template = template;
    return this;
  }

   /**
   * Get template
   * @return template
  **/
  @ApiModelProperty(value = "")
  public TemplateNumberDescriptionDto getTemplate() {
    return template;
  }

  public void setTemplate(TemplateNumberDescriptionDto template) {
    this.template = template;
  }

  public ProjectDto description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @ApiModelProperty(value = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public ProjectDto assets(Double assets) {
    this.assets = assets;
    return this;
  }

   /**
   * Get assets
   * @return assets
  **/
  @ApiModelProperty(value = "")
  public Double getAssets() {
    return assets;
  }

  public void setAssets(Double assets) {
    this.assets = assets;
  }

  public ProjectDto liability(Double liability) {
    this.liability = liability;
    return this;
  }

   /**
   * Get liability
   * @return liability
  **/
  @ApiModelProperty(value = "")
  public Double getLiability() {
    return liability;
  }

  public void setLiability(Double liability) {
    this.liability = liability;
  }

  public ProjectDto income(Double income) {
    this.income = income;
    return this;
  }

   /**
   * Get income
   * @return income
  **/
  @ApiModelProperty(value = "")
  public Double getIncome() {
    return income;
  }

  public void setIncome(Double income) {
    this.income = income;
  }

  public ProjectDto expenses(Double expenses) {
    this.expenses = expenses;
    return this;
  }

   /**
   * Get expenses
   * @return expenses
  **/
  @ApiModelProperty(value = "")
  public Double getExpenses() {
    return expenses;
  }

  public void setExpenses(Double expenses) {
    this.expenses = expenses;
  }

  public ProjectDto startDate(LocalDateTime startDate) {
    this.startDate = startDate;
    return this;
  }

   /**
   * Get startDate
   * @return startDate
  **/
  @ApiModelProperty(value = "")
  public LocalDateTime getStartDate() {
    return startDate;
  }

  public void setStartDate(LocalDateTime startDate) {
    this.startDate = startDate;
  }

  public ProjectDto endDate(LocalDateTime endDate) {
    this.endDate = endDate;
    return this;
  }

   /**
   * Get endDate
   * @return endDate
  **/
  @ApiModelProperty(value = "")
  public LocalDateTime getEndDate() {
    return endDate;
  }

  public void setEndDate(LocalDateTime endDate) {
    this.endDate = endDate;
  }

  public ProjectDto projectManager(EmployeeDto projectManager) {
    this.projectManager = projectManager;
    return this;
  }

   /**
   * Get projectManager
   * @return projectManager
  **/
  @ApiModelProperty(value = "")
  public EmployeeDto getProjectManager() {
    return projectManager;
  }

  public void setProjectManager(EmployeeDto projectManager) {
    this.projectManager = projectManager;
  }

  public ProjectDto restrictEmployees(Boolean restrictEmployees) {
    this.restrictEmployees = restrictEmployees;
    return this;
  }

   /**
   * Get restrictEmployees
   * @return restrictEmployees
  **/
  @ApiModelProperty(value = "")
  public Boolean isRestrictEmployees() {
    return restrictEmployees;
  }

  public void setRestrictEmployees(Boolean restrictEmployees) {
    this.restrictEmployees = restrictEmployees;
  }

  public ProjectDto restrictEquipment(Boolean restrictEquipment) {
    this.restrictEquipment = restrictEquipment;
    return this;
  }

   /**
   * Get restrictEquipment
   * @return restrictEquipment
  **/
  @ApiModelProperty(value = "")
  public Boolean isRestrictEquipment() {
    return restrictEquipment;
  }

  public void setRestrictEquipment(Boolean restrictEquipment) {
    this.restrictEquipment = restrictEquipment;
  }

  public ProjectDto visibility(VisibilityDto visibility) {
    this.visibility = visibility;
    return this;
  }

   /**
   * Get visibility
   * @return visibility
  **/
  @ApiModelProperty(value = "")
  public VisibilityDto getVisibility() {
    return visibility;
  }

  public void setVisibility(VisibilityDto visibility) {
    this.visibility = visibility;
  }

  public ProjectDto defAccount(AccountNumberTypeDescriptionDto defAccount) {
    this.defAccount = defAccount;
    return this;
  }

   /**
   * Get defAccount
   * @return defAccount
  **/
  @ApiModelProperty(value = "")
  public AccountNumberTypeDescriptionDto getDefAccount() {
    return defAccount;
  }

  public void setDefAccount(AccountNumberTypeDescriptionDto defAccount) {
    this.defAccount = defAccount;
  }

  public ProjectDto defSub(SubAccountDescriptionDto defSub) {
    this.defSub = defSub;
    return this;
  }

   /**
   * Get defSub
   * @return defSub
  **/
  @ApiModelProperty(value = "")
  public SubAccountDescriptionDto getDefSub() {
    return defSub;
  }

  public void setDefSub(SubAccountDescriptionDto defSub) {
    this.defSub = defSub;
  }

  public ProjectDto defAccrualAccount(AccountNumberTypeDescriptionDto defAccrualAccount) {
    this.defAccrualAccount = defAccrualAccount;
    return this;
  }

   /**
   * Get defAccrualAccount
   * @return defAccrualAccount
  **/
  @ApiModelProperty(value = "")
  public AccountNumberTypeDescriptionDto getDefAccrualAccount() {
    return defAccrualAccount;
  }

  public void setDefAccrualAccount(AccountNumberTypeDescriptionDto defAccrualAccount) {
    this.defAccrualAccount = defAccrualAccount;
  }

  public ProjectDto defAccrualSub(SubAccountDescriptionDto defAccrualSub) {
    this.defAccrualSub = defAccrualSub;
    return this;
  }

   /**
   * Get defAccrualSub
   * @return defAccrualSub
  **/
  @ApiModelProperty(value = "")
  public SubAccountDescriptionDto getDefAccrualSub() {
    return defAccrualSub;
  }

  public void setDefAccrualSub(SubAccountDescriptionDto defAccrualSub) {
    this.defAccrualSub = defAccrualSub;
  }

  public ProjectDto billingPeriod(BillingPeriodEnum billingPeriod) {
    this.billingPeriod = billingPeriod;
    return this;
  }

   /**
   * Get billingPeriod
   * @return billingPeriod
  **/
  @ApiModelProperty(value = "")
  public BillingPeriodEnum getBillingPeriod() {
    return billingPeriod;
  }

  public void setBillingPeriod(BillingPeriodEnum billingPeriod) {
    this.billingPeriod = billingPeriod;
  }

  public ProjectDto nextBillingDate(LocalDateTime nextBillingDate) {
    this.nextBillingDate = nextBillingDate;
    return this;
  }

   /**
   * Get nextBillingDate
   * @return nextBillingDate
  **/
  @ApiModelProperty(value = "")
  public LocalDateTime getNextBillingDate() {
    return nextBillingDate;
  }

  public void setNextBillingDate(LocalDateTime nextBillingDate) {
    this.nextBillingDate = nextBillingDate;
  }

  public ProjectDto lastBillingDate(LocalDateTime lastBillingDate) {
    this.lastBillingDate = lastBillingDate;
    return this;
  }

   /**
   * Get lastBillingDate
   * @return lastBillingDate
  **/
  @ApiModelProperty(value = "")
  public LocalDateTime getLastBillingDate() {
    return lastBillingDate;
  }

  public void setLastBillingDate(LocalDateTime lastBillingDate) {
    this.lastBillingDate = lastBillingDate;
  }

  public ProjectDto customerLocation(LocationIdNameDto customerLocation) {
    this.customerLocation = customerLocation;
    return this;
  }

   /**
   * Get customerLocation
   * @return customerLocation
  **/
  @ApiModelProperty(value = "")
  public LocationIdNameDto getCustomerLocation() {
    return customerLocation;
  }

  public void setCustomerLocation(LocationIdNameDto customerLocation) {
    this.customerLocation = customerLocation;
  }

  public ProjectDto allocationRule(AllocationRuleIdDescriptionDto allocationRule) {
    this.allocationRule = allocationRule;
    return this;
  }

   /**
   * Get allocationRule
   * @return allocationRule
  **/
  @ApiModelProperty(value = "")
  public AllocationRuleIdDescriptionDto getAllocationRule() {
    return allocationRule;
  }

  public void setAllocationRule(AllocationRuleIdDescriptionDto allocationRule) {
    this.allocationRule = allocationRule;
  }

  public ProjectDto billingRule(BillingRuleIdDescriptionDto billingRule) {
    this.billingRule = billingRule;
    return this;
  }

   /**
   * Get billingRule
   * @return billingRule
  **/
  @ApiModelProperty(value = "")
  public BillingRuleIdDescriptionDto getBillingRule() {
    return billingRule;
  }

  public void setBillingRule(BillingRuleIdDescriptionDto billingRule) {
    this.billingRule = billingRule;
  }

  public ProjectDto rateTable(RateTableIdDescriptionDto rateTable) {
    this.rateTable = rateTable;
    return this;
  }

   /**
   * Get rateTable
   * @return rateTable
  **/
  @ApiModelProperty(value = "")
  public RateTableIdDescriptionDto getRateTable() {
    return rateTable;
  }

  public void setRateTable(RateTableIdDescriptionDto rateTable) {
    this.rateTable = rateTable;
  }

  public ProjectDto autoAllocate(Boolean autoAllocate) {
    this.autoAllocate = autoAllocate;
    return this;
  }

   /**
   * Get autoAllocate
   * @return autoAllocate
  **/
  @ApiModelProperty(value = "")
  public Boolean isAutoAllocate() {
    return autoAllocate;
  }

  public void setAutoAllocate(Boolean autoAllocate) {
    this.autoAllocate = autoAllocate;
  }

  public ProjectDto automaticReleaseAr(Boolean automaticReleaseAr) {
    this.automaticReleaseAr = automaticReleaseAr;
    return this;
  }

   /**
   * Get automaticReleaseAr
   * @return automaticReleaseAr
  **/
  @ApiModelProperty(value = "")
  public Boolean isAutomaticReleaseAr() {
    return automaticReleaseAr;
  }

  public void setAutomaticReleaseAr(Boolean automaticReleaseAr) {
    this.automaticReleaseAr = automaticReleaseAr;
  }

  public ProjectDto lastModifiedDateTime(LocalDateTime lastModifiedDateTime) {
    this.lastModifiedDateTime = lastModifiedDateTime;
    return this;
  }

   /**
   * Get lastModifiedDateTime
   * @return lastModifiedDateTime
  **/
  @ApiModelProperty(value = "")
  public LocalDateTime getLastModifiedDateTime() {
    return lastModifiedDateTime;
  }

  public void setLastModifiedDateTime(LocalDateTime lastModifiedDateTime) {
    this.lastModifiedDateTime = lastModifiedDateTime;
  }

  public ProjectDto tasks(List<TaskDto> tasks) {
    this.tasks = tasks;
    return this;
  }

  public ProjectDto addTasksItem(TaskDto tasksItem) {
    if (this.tasks == null) {
      this.tasks = new ArrayList<>();
    }
    this.tasks.add(tasksItem);
    return this;
  }

   /**
   * Get tasks
   * @return tasks
  **/
  @ApiModelProperty(value = "")
  public List<TaskDto> getTasks() {
    return tasks;
  }

  public void setTasks(List<TaskDto> tasks) {
    this.tasks = tasks;
  }

  public ProjectDto employees(List<EmployeeDto> employees) {
    this.employees = employees;
    return this;
  }

  public ProjectDto addEmployeesItem(EmployeeDto employeesItem) {
    if (this.employees == null) {
      this.employees = new ArrayList<>();
    }
    this.employees.add(employeesItem);
    return this;
  }

   /**
   * Get employees
   * @return employees
  **/
  @ApiModelProperty(value = "")
  public List<EmployeeDto> getEmployees() {
    return employees;
  }

  public void setEmployees(List<EmployeeDto> employees) {
    this.employees = employees;
  }

  public ProjectDto systemTemplate(Boolean systemTemplate) {
    this.systemTemplate = systemTemplate;
    return this;
  }

   /**
   * Get systemTemplate
   * @return systemTemplate
  **/
  @ApiModelProperty(value = "")
  public Boolean isSystemTemplate() {
    return systemTemplate;
  }

  public void setSystemTemplate(Boolean systemTemplate) {
    this.systemTemplate = systemTemplate;
  }

  public ProjectDto extras(Map<String, Object> extras) {
    this.extras = extras;
    return this;
  }

  public ProjectDto putExtrasItem(String key, Object extrasItem) {
    if (this.extras == null) {
      this.extras = new HashMap<>();
    }
    this.extras.put(key, extrasItem);
    return this;
  }

   /**
   * Get extras
   * @return extras
  **/
  @ApiModelProperty(value = "")
  public Map<String, Object> getExtras() {
    return extras;
  }

  public void setExtras(Map<String, Object> extras) {
    this.extras = extras;
  }

  public ProjectDto errorInfo(String errorInfo) {
    this.errorInfo = errorInfo;
    return this;
  }

   /**
   * Get errorInfo
   * @return errorInfo
  **/
  @ApiModelProperty(value = "")
  public String getErrorInfo() {
    return errorInfo;
  }

  public void setErrorInfo(String errorInfo) {
    this.errorInfo = errorInfo;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ProjectDto projectDto = (ProjectDto) o;
    return Objects.equals(this.internalID, projectDto.internalID) &&
        Objects.equals(this.projectID, projectDto.projectID) &&
        Objects.equals(this.customer, projectDto.customer) &&
        Objects.equals(this.hold, projectDto.hold) &&
        Objects.equals(this.status, projectDto.status) &&
        Objects.equals(this.template, projectDto.template) &&
        Objects.equals(this.description, projectDto.description) &&
        Objects.equals(this.assets, projectDto.assets) &&
        Objects.equals(this.liability, projectDto.liability) &&
        Objects.equals(this.income, projectDto.income) &&
        Objects.equals(this.expenses, projectDto.expenses) &&
        Objects.equals(this.startDate, projectDto.startDate) &&
        Objects.equals(this.endDate, projectDto.endDate) &&
        Objects.equals(this.projectManager, projectDto.projectManager) &&
        Objects.equals(this.restrictEmployees, projectDto.restrictEmployees) &&
        Objects.equals(this.restrictEquipment, projectDto.restrictEquipment) &&
        Objects.equals(this.visibility, projectDto.visibility) &&
        Objects.equals(this.defAccount, projectDto.defAccount) &&
        Objects.equals(this.defSub, projectDto.defSub) &&
        Objects.equals(this.defAccrualAccount, projectDto.defAccrualAccount) &&
        Objects.equals(this.defAccrualSub, projectDto.defAccrualSub) &&
        Objects.equals(this.billingPeriod, projectDto.billingPeriod) &&
        Objects.equals(this.nextBillingDate, projectDto.nextBillingDate) &&
        Objects.equals(this.lastBillingDate, projectDto.lastBillingDate) &&
        Objects.equals(this.customerLocation, projectDto.customerLocation) &&
        Objects.equals(this.allocationRule, projectDto.allocationRule) &&
        Objects.equals(this.billingRule, projectDto.billingRule) &&
        Objects.equals(this.rateTable, projectDto.rateTable) &&
        Objects.equals(this.autoAllocate, projectDto.autoAllocate) &&
        Objects.equals(this.automaticReleaseAr, projectDto.automaticReleaseAr) &&
        Objects.equals(this.lastModifiedDateTime, projectDto.lastModifiedDateTime) &&
        Objects.equals(this.tasks, projectDto.tasks) &&
        Objects.equals(this.employees, projectDto.employees) &&
        Objects.equals(this.systemTemplate, projectDto.systemTemplate) &&
        Objects.equals(this.extras, projectDto.extras) &&
        Objects.equals(this.errorInfo, projectDto.errorInfo);
  }

  @Override
  public int hashCode() {
    return Objects.hash(internalID, projectID, customer, hold, status, template, description, assets, liability, income, expenses, startDate, endDate, projectManager, restrictEmployees, restrictEquipment, visibility, defAccount, defSub, defAccrualAccount, defAccrualSub, billingPeriod, nextBillingDate, lastBillingDate, customerLocation, allocationRule, billingRule, rateTable, autoAllocate, automaticReleaseAr, lastModifiedDateTime, tasks, employees, systemTemplate, extras, errorInfo);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ProjectDto {\n");
    
    sb.append("    internalID: ").append(toIndentedString(internalID)).append("\n");
    sb.append("    projectID: ").append(toIndentedString(projectID)).append("\n");
    sb.append("    customer: ").append(toIndentedString(customer)).append("\n");
    sb.append("    hold: ").append(toIndentedString(hold)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    template: ").append(toIndentedString(template)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    assets: ").append(toIndentedString(assets)).append("\n");
    sb.append("    liability: ").append(toIndentedString(liability)).append("\n");
    sb.append("    income: ").append(toIndentedString(income)).append("\n");
    sb.append("    expenses: ").append(toIndentedString(expenses)).append("\n");
    sb.append("    startDate: ").append(toIndentedString(startDate)).append("\n");
    sb.append("    endDate: ").append(toIndentedString(endDate)).append("\n");
    sb.append("    projectManager: ").append(toIndentedString(projectManager)).append("\n");
    sb.append("    restrictEmployees: ").append(toIndentedString(restrictEmployees)).append("\n");
    sb.append("    restrictEquipment: ").append(toIndentedString(restrictEquipment)).append("\n");
    sb.append("    visibility: ").append(toIndentedString(visibility)).append("\n");
    sb.append("    defAccount: ").append(toIndentedString(defAccount)).append("\n");
    sb.append("    defSub: ").append(toIndentedString(defSub)).append("\n");
    sb.append("    defAccrualAccount: ").append(toIndentedString(defAccrualAccount)).append("\n");
    sb.append("    defAccrualSub: ").append(toIndentedString(defAccrualSub)).append("\n");
    sb.append("    billingPeriod: ").append(toIndentedString(billingPeriod)).append("\n");
    sb.append("    nextBillingDate: ").append(toIndentedString(nextBillingDate)).append("\n");
    sb.append("    lastBillingDate: ").append(toIndentedString(lastBillingDate)).append("\n");
    sb.append("    customerLocation: ").append(toIndentedString(customerLocation)).append("\n");
    sb.append("    allocationRule: ").append(toIndentedString(allocationRule)).append("\n");
    sb.append("    billingRule: ").append(toIndentedString(billingRule)).append("\n");
    sb.append("    rateTable: ").append(toIndentedString(rateTable)).append("\n");
    sb.append("    autoAllocate: ").append(toIndentedString(autoAllocate)).append("\n");
    sb.append("    automaticReleaseAr: ").append(toIndentedString(automaticReleaseAr)).append("\n");
    sb.append("    lastModifiedDateTime: ").append(toIndentedString(lastModifiedDateTime)).append("\n");
    sb.append("    tasks: ").append(toIndentedString(tasks)).append("\n");
    sb.append("    employees: ").append(toIndentedString(employees)).append("\n");
    sb.append("    systemTemplate: ").append(toIndentedString(systemTemplate)).append("\n");
    sb.append("    extras: ").append(toIndentedString(extras)).append("\n");
    sb.append("    errorInfo: ").append(toIndentedString(errorInfo)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

