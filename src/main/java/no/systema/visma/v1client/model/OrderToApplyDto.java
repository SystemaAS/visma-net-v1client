/*
 * Visma Net API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 6.13.03.0008
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package no.systema.visma.v1client.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.time.LocalDateTime;

/**
 * This class represents an OrderToApply in Payments
 */
@ApiModel(description = "This class represents an OrderToApply in Payments")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-04-16T15:04:09.234+02:00")
public class OrderToApplyDto {
  @JsonProperty("orderType")
  private String orderType = null;

  @JsonProperty("orderNo")
  private String orderNo = null;

  /**
   * Gets or Sets status
   */
  public enum StatusEnum {
    OPEN("Open"),
    
    HOLD("Hold"),
    
    CREDITHOLD("CreditHold"),
    
    COMPLETED("Completed"),
    
    CANCELLED("Cancelled"),
    
    BACKORDER("BackOrder"),
    
    SHIPPING("Shipping"),
    
    INVOICED("Invoiced");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static StatusEnum fromValue(String text) {
      for (StatusEnum b : StatusEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("status")
  private StatusEnum status = null;

  @JsonProperty("appliedToOrder")
  private Double appliedToOrder = null;

  @JsonProperty("transferredToInvoice")
  private Double transferredToInvoice = null;

  @JsonProperty("date")
  private LocalDateTime date = null;

  @JsonProperty("dueDate")
  private LocalDateTime dueDate = null;

  @JsonProperty("cashDiscountDate")
  private LocalDateTime cashDiscountDate = null;

  @JsonProperty("balance")
  private Double balance = null;

  @JsonProperty("description")
  private String description = null;

  @JsonProperty("orderTotal")
  private Double orderTotal = null;

  @JsonProperty("currency")
  private String currency = null;

  @JsonProperty("invoiceNbr")
  private String invoiceNbr = null;

  @JsonProperty("invoiceDate")
  private LocalDateTime invoiceDate = null;

  public OrderToApplyDto orderType(String orderType) {
    this.orderType = orderType;
    return this;
  }

   /**
   * Get orderType
   * @return orderType
  **/
  @ApiModelProperty(value = "")
  public String getOrderType() {
    return orderType;
  }

  public void setOrderType(String orderType) {
    this.orderType = orderType;
  }

  public OrderToApplyDto orderNo(String orderNo) {
    this.orderNo = orderNo;
    return this;
  }

   /**
   * Get orderNo
   * @return orderNo
  **/
  @ApiModelProperty(value = "")
  public String getOrderNo() {
    return orderNo;
  }

  public void setOrderNo(String orderNo) {
    this.orderNo = orderNo;
  }

  public OrderToApplyDto status(StatusEnum status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @ApiModelProperty(value = "")
  public StatusEnum getStatus() {
    return status;
  }

  public void setStatus(StatusEnum status) {
    this.status = status;
  }

  public OrderToApplyDto appliedToOrder(Double appliedToOrder) {
    this.appliedToOrder = appliedToOrder;
    return this;
  }

   /**
   * Get appliedToOrder
   * @return appliedToOrder
  **/
  @ApiModelProperty(value = "")
  public Double getAppliedToOrder() {
    return appliedToOrder;
  }

  public void setAppliedToOrder(Double appliedToOrder) {
    this.appliedToOrder = appliedToOrder;
  }

  public OrderToApplyDto transferredToInvoice(Double transferredToInvoice) {
    this.transferredToInvoice = transferredToInvoice;
    return this;
  }

   /**
   * Get transferredToInvoice
   * @return transferredToInvoice
  **/
  @ApiModelProperty(value = "")
  public Double getTransferredToInvoice() {
    return transferredToInvoice;
  }

  public void setTransferredToInvoice(Double transferredToInvoice) {
    this.transferredToInvoice = transferredToInvoice;
  }

  public OrderToApplyDto date(LocalDateTime date) {
    this.date = date;
    return this;
  }

   /**
   * Get date
   * @return date
  **/
  @ApiModelProperty(value = "")
  public LocalDateTime getDate() {
    return date;
  }

  public void setDate(LocalDateTime date) {
    this.date = date;
  }

  public OrderToApplyDto dueDate(LocalDateTime dueDate) {
    this.dueDate = dueDate;
    return this;
  }

   /**
   * Get dueDate
   * @return dueDate
  **/
  @ApiModelProperty(value = "")
  public LocalDateTime getDueDate() {
    return dueDate;
  }

  public void setDueDate(LocalDateTime dueDate) {
    this.dueDate = dueDate;
  }

  public OrderToApplyDto cashDiscountDate(LocalDateTime cashDiscountDate) {
    this.cashDiscountDate = cashDiscountDate;
    return this;
  }

   /**
   * Get cashDiscountDate
   * @return cashDiscountDate
  **/
  @ApiModelProperty(value = "")
  public LocalDateTime getCashDiscountDate() {
    return cashDiscountDate;
  }

  public void setCashDiscountDate(LocalDateTime cashDiscountDate) {
    this.cashDiscountDate = cashDiscountDate;
  }

  public OrderToApplyDto balance(Double balance) {
    this.balance = balance;
    return this;
  }

   /**
   * Get balance
   * @return balance
  **/
  @ApiModelProperty(value = "")
  public Double getBalance() {
    return balance;
  }

  public void setBalance(Double balance) {
    this.balance = balance;
  }

  public OrderToApplyDto description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @ApiModelProperty(value = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public OrderToApplyDto orderTotal(Double orderTotal) {
    this.orderTotal = orderTotal;
    return this;
  }

   /**
   * Get orderTotal
   * @return orderTotal
  **/
  @ApiModelProperty(value = "")
  public Double getOrderTotal() {
    return orderTotal;
  }

  public void setOrderTotal(Double orderTotal) {
    this.orderTotal = orderTotal;
  }

  public OrderToApplyDto currency(String currency) {
    this.currency = currency;
    return this;
  }

   /**
   * Get currency
   * @return currency
  **/
  @ApiModelProperty(value = "")
  public String getCurrency() {
    return currency;
  }

  public void setCurrency(String currency) {
    this.currency = currency;
  }

  public OrderToApplyDto invoiceNbr(String invoiceNbr) {
    this.invoiceNbr = invoiceNbr;
    return this;
  }

   /**
   * Get invoiceNbr
   * @return invoiceNbr
  **/
  @ApiModelProperty(value = "")
  public String getInvoiceNbr() {
    return invoiceNbr;
  }

  public void setInvoiceNbr(String invoiceNbr) {
    this.invoiceNbr = invoiceNbr;
  }

  public OrderToApplyDto invoiceDate(LocalDateTime invoiceDate) {
    this.invoiceDate = invoiceDate;
    return this;
  }

   /**
   * Get invoiceDate
   * @return invoiceDate
  **/
  @ApiModelProperty(value = "")
  public LocalDateTime getInvoiceDate() {
    return invoiceDate;
  }

  public void setInvoiceDate(LocalDateTime invoiceDate) {
    this.invoiceDate = invoiceDate;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OrderToApplyDto orderToApplyDto = (OrderToApplyDto) o;
    return Objects.equals(this.orderType, orderToApplyDto.orderType) &&
        Objects.equals(this.orderNo, orderToApplyDto.orderNo) &&
        Objects.equals(this.status, orderToApplyDto.status) &&
        Objects.equals(this.appliedToOrder, orderToApplyDto.appliedToOrder) &&
        Objects.equals(this.transferredToInvoice, orderToApplyDto.transferredToInvoice) &&
        Objects.equals(this.date, orderToApplyDto.date) &&
        Objects.equals(this.dueDate, orderToApplyDto.dueDate) &&
        Objects.equals(this.cashDiscountDate, orderToApplyDto.cashDiscountDate) &&
        Objects.equals(this.balance, orderToApplyDto.balance) &&
        Objects.equals(this.description, orderToApplyDto.description) &&
        Objects.equals(this.orderTotal, orderToApplyDto.orderTotal) &&
        Objects.equals(this.currency, orderToApplyDto.currency) &&
        Objects.equals(this.invoiceNbr, orderToApplyDto.invoiceNbr) &&
        Objects.equals(this.invoiceDate, orderToApplyDto.invoiceDate);
  }

  @Override
  public int hashCode() {
    return Objects.hash(orderType, orderNo, status, appliedToOrder, transferredToInvoice, date, dueDate, cashDiscountDate, balance, description, orderTotal, currency, invoiceNbr, invoiceDate);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OrderToApplyDto {\n");
    
    sb.append("    orderType: ").append(toIndentedString(orderType)).append("\n");
    sb.append("    orderNo: ").append(toIndentedString(orderNo)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    appliedToOrder: ").append(toIndentedString(appliedToOrder)).append("\n");
    sb.append("    transferredToInvoice: ").append(toIndentedString(transferredToInvoice)).append("\n");
    sb.append("    date: ").append(toIndentedString(date)).append("\n");
    sb.append("    dueDate: ").append(toIndentedString(dueDate)).append("\n");
    sb.append("    cashDiscountDate: ").append(toIndentedString(cashDiscountDate)).append("\n");
    sb.append("    balance: ").append(toIndentedString(balance)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    orderTotal: ").append(toIndentedString(orderTotal)).append("\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    invoiceNbr: ").append(toIndentedString(invoiceNbr)).append("\n");
    sb.append("    invoiceDate: ").append(toIndentedString(invoiceDate)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

