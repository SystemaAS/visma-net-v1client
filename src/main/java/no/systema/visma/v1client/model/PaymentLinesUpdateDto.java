/*
 * Visma Net API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 6.13.03.0008
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package no.systema.visma.v1client.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import no.systema.visma.v1client.model.DtoValueCustomerDocumentTypes;
import no.systema.visma.v1client.model.DtoValueDecimal;
import no.systema.visma.v1client.model.DtoValueString;

/**
 * PaymentLinesUpdateDto
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-04-16T15:04:09.234+02:00")
public class PaymentLinesUpdateDto {
  /**
   * Gets or Sets operation
   */
  public enum OperationEnum {
    INSERT("Insert"),
    
    UPDATE("Update"),
    
    DELETE("Delete");

    private String value;

    OperationEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static OperationEnum fromValue(String text) {
      for (OperationEnum b : OperationEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("operation")
  private OperationEnum operation = null;

  @JsonProperty("documentType")
  private DtoValueCustomerDocumentTypes documentType = null;

  @JsonProperty("refNbr")
  private DtoValueString refNbr = null;

  @JsonProperty("amountPaid")
  private DtoValueDecimal amountPaid = null;

  @JsonProperty("cashDiscountTaken")
  private DtoValueDecimal cashDiscountTaken = null;

  @JsonProperty("balanceWriteOff")
  private DtoValueDecimal balanceWriteOff = null;

  @JsonProperty("writeOffReasonCode")
  private DtoValueString writeOffReasonCode = null;

  @JsonProperty("crossRate")
  private DtoValueDecimal crossRate = null;

  public PaymentLinesUpdateDto operation(OperationEnum operation) {
    this.operation = operation;
    return this;
  }

   /**
   * Get operation
   * @return operation
  **/
  @ApiModelProperty(value = "")
  public OperationEnum getOperation() {
    return operation;
  }

  public void setOperation(OperationEnum operation) {
    this.operation = operation;
  }

  public PaymentLinesUpdateDto documentType(DtoValueCustomerDocumentTypes documentType) {
    this.documentType = documentType;
    return this;
  }

   /**
   * Get documentType
   * @return documentType
  **/
  @ApiModelProperty(value = "")
  public DtoValueCustomerDocumentTypes getDocumentType() {
    return documentType;
  }

  public void setDocumentType(DtoValueCustomerDocumentTypes documentType) {
    this.documentType = documentType;
  }

  public PaymentLinesUpdateDto refNbr(DtoValueString refNbr) {
    this.refNbr = refNbr;
    return this;
  }

   /**
   * Get refNbr
   * @return refNbr
  **/
  @ApiModelProperty(value = "")
  public DtoValueString getRefNbr() {
    return refNbr;
  }

  public void setRefNbr(DtoValueString refNbr) {
    this.refNbr = refNbr;
  }

  public PaymentLinesUpdateDto amountPaid(DtoValueDecimal amountPaid) {
    this.amountPaid = amountPaid;
    return this;
  }

   /**
   * Get amountPaid
   * @return amountPaid
  **/
  @ApiModelProperty(value = "")
  public DtoValueDecimal getAmountPaid() {
    return amountPaid;
  }

  public void setAmountPaid(DtoValueDecimal amountPaid) {
    this.amountPaid = amountPaid;
  }

  public PaymentLinesUpdateDto cashDiscountTaken(DtoValueDecimal cashDiscountTaken) {
    this.cashDiscountTaken = cashDiscountTaken;
    return this;
  }

   /**
   * Get cashDiscountTaken
   * @return cashDiscountTaken
  **/
  @ApiModelProperty(value = "")
  public DtoValueDecimal getCashDiscountTaken() {
    return cashDiscountTaken;
  }

  public void setCashDiscountTaken(DtoValueDecimal cashDiscountTaken) {
    this.cashDiscountTaken = cashDiscountTaken;
  }

  public PaymentLinesUpdateDto balanceWriteOff(DtoValueDecimal balanceWriteOff) {
    this.balanceWriteOff = balanceWriteOff;
    return this;
  }

   /**
   * Get balanceWriteOff
   * @return balanceWriteOff
  **/
  @ApiModelProperty(value = "")
  public DtoValueDecimal getBalanceWriteOff() {
    return balanceWriteOff;
  }

  public void setBalanceWriteOff(DtoValueDecimal balanceWriteOff) {
    this.balanceWriteOff = balanceWriteOff;
  }

  public PaymentLinesUpdateDto writeOffReasonCode(DtoValueString writeOffReasonCode) {
    this.writeOffReasonCode = writeOffReasonCode;
    return this;
  }

   /**
   * Get writeOffReasonCode
   * @return writeOffReasonCode
  **/
  @ApiModelProperty(value = "")
  public DtoValueString getWriteOffReasonCode() {
    return writeOffReasonCode;
  }

  public void setWriteOffReasonCode(DtoValueString writeOffReasonCode) {
    this.writeOffReasonCode = writeOffReasonCode;
  }

  public PaymentLinesUpdateDto crossRate(DtoValueDecimal crossRate) {
    this.crossRate = crossRate;
    return this;
  }

   /**
   * Get crossRate
   * @return crossRate
  **/
  @ApiModelProperty(value = "")
  public DtoValueDecimal getCrossRate() {
    return crossRate;
  }

  public void setCrossRate(DtoValueDecimal crossRate) {
    this.crossRate = crossRate;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PaymentLinesUpdateDto paymentLinesUpdateDto = (PaymentLinesUpdateDto) o;
    return Objects.equals(this.operation, paymentLinesUpdateDto.operation) &&
        Objects.equals(this.documentType, paymentLinesUpdateDto.documentType) &&
        Objects.equals(this.refNbr, paymentLinesUpdateDto.refNbr) &&
        Objects.equals(this.amountPaid, paymentLinesUpdateDto.amountPaid) &&
        Objects.equals(this.cashDiscountTaken, paymentLinesUpdateDto.cashDiscountTaken) &&
        Objects.equals(this.balanceWriteOff, paymentLinesUpdateDto.balanceWriteOff) &&
        Objects.equals(this.writeOffReasonCode, paymentLinesUpdateDto.writeOffReasonCode) &&
        Objects.equals(this.crossRate, paymentLinesUpdateDto.crossRate);
  }

  @Override
  public int hashCode() {
    return Objects.hash(operation, documentType, refNbr, amountPaid, cashDiscountTaken, balanceWriteOff, writeOffReasonCode, crossRate);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PaymentLinesUpdateDto {\n");
    
    sb.append("    operation: ").append(toIndentedString(operation)).append("\n");
    sb.append("    documentType: ").append(toIndentedString(documentType)).append("\n");
    sb.append("    refNbr: ").append(toIndentedString(refNbr)).append("\n");
    sb.append("    amountPaid: ").append(toIndentedString(amountPaid)).append("\n");
    sb.append("    cashDiscountTaken: ").append(toIndentedString(cashDiscountTaken)).append("\n");
    sb.append("    balanceWriteOff: ").append(toIndentedString(balanceWriteOff)).append("\n");
    sb.append("    writeOffReasonCode: ").append(toIndentedString(writeOffReasonCode)).append("\n");
    sb.append("    crossRate: ").append(toIndentedString(crossRate)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

