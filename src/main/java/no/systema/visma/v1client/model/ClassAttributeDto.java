/*
 * Visma Net API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 6.13.03.0008
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package no.systema.visma.v1client.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import no.systema.visma.v1client.model.ClassAttributeDetailDto;

/**
 * ClassAttributeDto
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-04-16T15:04:09.234+02:00")
public class ClassAttributeDto {
  @JsonProperty("attributeId")
  private String attributeId = null;

  @JsonProperty("description")
  private String description = null;

  @JsonProperty("sortOrder")
  private Integer sortOrder = null;

  @JsonProperty("required")
  private Boolean required = null;

  /**
   * Gets or Sets attributeType
   */
  public enum AttributeTypeEnum {
    TEXT("Text"),
    
    COMBO("Combo"),
    
    MULTISELECTCOMBO("MultiSelectCombo"),
    
    LOOKUP("Lookup"),
    
    CHECKBOX("Checkbox"),
    
    DATETIME("Datetime");

    private String value;

    AttributeTypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static AttributeTypeEnum fromValue(String text) {
      for (AttributeTypeEnum b : AttributeTypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("attributeType")
  private AttributeTypeEnum attributeType = null;

  @JsonProperty("defaultValue")
  private String defaultValue = null;

  @JsonProperty("details")
  private List<ClassAttributeDetailDto> details = null;

  public ClassAttributeDto attributeId(String attributeId) {
    this.attributeId = attributeId;
    return this;
  }

   /**
   * Get attributeId
   * @return attributeId
  **/
  @ApiModelProperty(value = "")
  public String getAttributeId() {
    return attributeId;
  }

  public void setAttributeId(String attributeId) {
    this.attributeId = attributeId;
  }

  public ClassAttributeDto description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @ApiModelProperty(value = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public ClassAttributeDto sortOrder(Integer sortOrder) {
    this.sortOrder = sortOrder;
    return this;
  }

   /**
   * Get sortOrder
   * @return sortOrder
  **/
  @ApiModelProperty(value = "")
  public Integer getSortOrder() {
    return sortOrder;
  }

  public void setSortOrder(Integer sortOrder) {
    this.sortOrder = sortOrder;
  }

  public ClassAttributeDto required(Boolean required) {
    this.required = required;
    return this;
  }

   /**
   * Get required
   * @return required
  **/
  @ApiModelProperty(value = "")
  public Boolean isRequired() {
    return required;
  }

  public void setRequired(Boolean required) {
    this.required = required;
  }

  public ClassAttributeDto attributeType(AttributeTypeEnum attributeType) {
    this.attributeType = attributeType;
    return this;
  }

   /**
   * Get attributeType
   * @return attributeType
  **/
  @ApiModelProperty(value = "")
  public AttributeTypeEnum getAttributeType() {
    return attributeType;
  }

  public void setAttributeType(AttributeTypeEnum attributeType) {
    this.attributeType = attributeType;
  }

  public ClassAttributeDto defaultValue(String defaultValue) {
    this.defaultValue = defaultValue;
    return this;
  }

   /**
   * Get defaultValue
   * @return defaultValue
  **/
  @ApiModelProperty(value = "")
  public String getDefaultValue() {
    return defaultValue;
  }

  public void setDefaultValue(String defaultValue) {
    this.defaultValue = defaultValue;
  }

  public ClassAttributeDto details(List<ClassAttributeDetailDto> details) {
    this.details = details;
    return this;
  }

  public ClassAttributeDto addDetailsItem(ClassAttributeDetailDto detailsItem) {
    if (this.details == null) {
      this.details = new ArrayList<>();
    }
    this.details.add(detailsItem);
    return this;
  }

   /**
   * Get details
   * @return details
  **/
  @ApiModelProperty(value = "")
  public List<ClassAttributeDetailDto> getDetails() {
    return details;
  }

  public void setDetails(List<ClassAttributeDetailDto> details) {
    this.details = details;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ClassAttributeDto classAttributeDto = (ClassAttributeDto) o;
    return Objects.equals(this.attributeId, classAttributeDto.attributeId) &&
        Objects.equals(this.description, classAttributeDto.description) &&
        Objects.equals(this.sortOrder, classAttributeDto.sortOrder) &&
        Objects.equals(this.required, classAttributeDto.required) &&
        Objects.equals(this.attributeType, classAttributeDto.attributeType) &&
        Objects.equals(this.defaultValue, classAttributeDto.defaultValue) &&
        Objects.equals(this.details, classAttributeDto.details);
  }

  @Override
  public int hashCode() {
    return Objects.hash(attributeId, description, sortOrder, required, attributeType, defaultValue, details);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ClassAttributeDto {\n");
    
    sb.append("    attributeId: ").append(toIndentedString(attributeId)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    sortOrder: ").append(toIndentedString(sortOrder)).append("\n");
    sb.append("    required: ").append(toIndentedString(required)).append("\n");
    sb.append("    attributeType: ").append(toIndentedString(attributeType)).append("\n");
    sb.append("    defaultValue: ").append(toIndentedString(defaultValue)).append("\n");
    sb.append("    details: ").append(toIndentedString(details)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

