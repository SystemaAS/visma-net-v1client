/*
 * Visma Net API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 6.13.03.0008
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package no.systema.visma.v1client.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import no.systema.visma.v1client.model.AttributeLineUpdateDto;
import no.systema.visma.v1client.model.DtoValueInventoryStatus;
import no.systema.visma.v1client.model.DtoValueInventoryType;
import no.systema.visma.v1client.model.DtoValueNullableDecimal;
import no.systema.visma.v1client.model.DtoValueString;

/**
 * InventoryUpdateDto
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-04-16T15:04:09.234+02:00")
public class InventoryUpdateDto {
  @JsonProperty("inventoryNumber")
  private DtoValueString inventoryNumber = null;

  @JsonProperty("status")
  private DtoValueInventoryStatus status = null;

  @JsonProperty("type")
  private DtoValueInventoryType type = null;

  @JsonProperty("description")
  private DtoValueString description = null;

  @JsonProperty("itemClass")
  private DtoValueString itemClass = null;

  @JsonProperty("postingClass")
  private DtoValueString postingClass = null;

  @JsonProperty("vatCode")
  private DtoValueString vatCode = null;

  @JsonProperty("defaultPrice")
  private DtoValueNullableDecimal defaultPrice = null;

  @JsonProperty("baseUnit")
  private DtoValueString baseUnit = null;

  @JsonProperty("salesUnit")
  private DtoValueString salesUnit = null;

  @JsonProperty("purchaseUnit")
  private DtoValueString purchaseUnit = null;

  @JsonProperty("attributeLines")
  private List<AttributeLineUpdateDto> attributeLines = null;

  public InventoryUpdateDto inventoryNumber(DtoValueString inventoryNumber) {
    this.inventoryNumber = inventoryNumber;
    return this;
  }

   /**
   * Mandatory for POST, not applicable for PUT. The unique alphanumeric identifier of the  item that is used in UI.
   * @return inventoryNumber
  **/
  @ApiModelProperty(value = "Mandatory for POST, not applicable for PUT. The unique alphanumeric identifier of the  item that is used in UI.")
  public DtoValueString getInventoryNumber() {
    return inventoryNumber;
  }

  public void setInventoryNumber(DtoValueString inventoryNumber) {
    this.inventoryNumber = inventoryNumber;
  }

  public InventoryUpdateDto status(DtoValueInventoryStatus status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @ApiModelProperty(value = "")
  public DtoValueInventoryStatus getStatus() {
    return status;
  }

  public void setStatus(DtoValueInventoryStatus status) {
    this.status = status;
  }

  public InventoryUpdateDto type(DtoValueInventoryType type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @ApiModelProperty(value = "")
  public DtoValueInventoryType getType() {
    return type;
  }

  public void setType(DtoValueInventoryType type) {
    this.type = type;
  }

  public InventoryUpdateDto description(DtoValueString description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @ApiModelProperty(value = "")
  public DtoValueString getDescription() {
    return description;
  }

  public void setDescription(DtoValueString description) {
    this.description = description;
  }

  public InventoryUpdateDto itemClass(DtoValueString itemClass) {
    this.itemClass = itemClass;
    return this;
  }

   /**
   * Mandatory, the item class to which the item is assigned. Selecting a class provides default settings for the item.
   * @return itemClass
  **/
  @ApiModelProperty(value = "Mandatory, the item class to which the item is assigned. Selecting a class provides default settings for the item.")
  public DtoValueString getItemClass() {
    return itemClass;
  }

  public void setItemClass(DtoValueString itemClass) {
    this.itemClass = itemClass;
  }

  public InventoryUpdateDto postingClass(DtoValueString postingClass) {
    this.postingClass = postingClass;
    return this;
  }

   /**
   * The posting class of the item, which by default is the posting class assigned to the item class.
   * @return postingClass
  **/
  @ApiModelProperty(value = "The posting class of the item, which by default is the posting class assigned to the item class.")
  public DtoValueString getPostingClass() {
    return postingClass;
  }

  public void setPostingClass(DtoValueString postingClass) {
    this.postingClass = postingClass;
  }

  public InventoryUpdateDto vatCode(DtoValueString vatCode) {
    this.vatCode = vatCode;
    return this;
  }

   /**
   * The vat category of the item, which by default is the vat category associated with the item class.
   * @return vatCode
  **/
  @ApiModelProperty(value = "The vat category of the item, which by default is the vat category associated with the item class.")
  public DtoValueString getVatCode() {
    return vatCode;
  }

  public void setVatCode(DtoValueString vatCode) {
    this.vatCode = vatCode;
  }

  public InventoryUpdateDto defaultPrice(DtoValueNullableDecimal defaultPrice) {
    this.defaultPrice = defaultPrice;
    return this;
  }

   /**
   * The price of the item. This price is used as the default price, if there are no other prices set.
   * @return defaultPrice
  **/
  @ApiModelProperty(value = "The price of the item. This price is used as the default price, if there are no other prices set.")
  public DtoValueNullableDecimal getDefaultPrice() {
    return defaultPrice;
  }

  public void setDefaultPrice(DtoValueNullableDecimal defaultPrice) {
    this.defaultPrice = defaultPrice;
  }

  public InventoryUpdateDto baseUnit(DtoValueString baseUnit) {
    this.baseUnit = baseUnit;
    return this;
  }

   /**
   * Get baseUnit
   * @return baseUnit
  **/
  @ApiModelProperty(value = "")
  public DtoValueString getBaseUnit() {
    return baseUnit;
  }

  public void setBaseUnit(DtoValueString baseUnit) {
    this.baseUnit = baseUnit;
  }

  public InventoryUpdateDto salesUnit(DtoValueString salesUnit) {
    this.salesUnit = salesUnit;
    return this;
  }

   /**
   * Get salesUnit
   * @return salesUnit
  **/
  @ApiModelProperty(value = "")
  public DtoValueString getSalesUnit() {
    return salesUnit;
  }

  public void setSalesUnit(DtoValueString salesUnit) {
    this.salesUnit = salesUnit;
  }

  public InventoryUpdateDto purchaseUnit(DtoValueString purchaseUnit) {
    this.purchaseUnit = purchaseUnit;
    return this;
  }

   /**
   * Get purchaseUnit
   * @return purchaseUnit
  **/
  @ApiModelProperty(value = "")
  public DtoValueString getPurchaseUnit() {
    return purchaseUnit;
  }

  public void setPurchaseUnit(DtoValueString purchaseUnit) {
    this.purchaseUnit = purchaseUnit;
  }

  public InventoryUpdateDto attributeLines(List<AttributeLineUpdateDto> attributeLines) {
    this.attributeLines = attributeLines;
    return this;
  }

  public InventoryUpdateDto addAttributeLinesItem(AttributeLineUpdateDto attributeLinesItem) {
    if (this.attributeLines == null) {
      this.attributeLines = new ArrayList<>();
    }
    this.attributeLines.add(attributeLinesItem);
    return this;
  }

   /**
   * Get attributeLines
   * @return attributeLines
  **/
  @ApiModelProperty(value = "")
  public List<AttributeLineUpdateDto> getAttributeLines() {
    return attributeLines;
  }

  public void setAttributeLines(List<AttributeLineUpdateDto> attributeLines) {
    this.attributeLines = attributeLines;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InventoryUpdateDto inventoryUpdateDto = (InventoryUpdateDto) o;
    return Objects.equals(this.inventoryNumber, inventoryUpdateDto.inventoryNumber) &&
        Objects.equals(this.status, inventoryUpdateDto.status) &&
        Objects.equals(this.type, inventoryUpdateDto.type) &&
        Objects.equals(this.description, inventoryUpdateDto.description) &&
        Objects.equals(this.itemClass, inventoryUpdateDto.itemClass) &&
        Objects.equals(this.postingClass, inventoryUpdateDto.postingClass) &&
        Objects.equals(this.vatCode, inventoryUpdateDto.vatCode) &&
        Objects.equals(this.defaultPrice, inventoryUpdateDto.defaultPrice) &&
        Objects.equals(this.baseUnit, inventoryUpdateDto.baseUnit) &&
        Objects.equals(this.salesUnit, inventoryUpdateDto.salesUnit) &&
        Objects.equals(this.purchaseUnit, inventoryUpdateDto.purchaseUnit) &&
        Objects.equals(this.attributeLines, inventoryUpdateDto.attributeLines);
  }

  @Override
  public int hashCode() {
    return Objects.hash(inventoryNumber, status, type, description, itemClass, postingClass, vatCode, defaultPrice, baseUnit, salesUnit, purchaseUnit, attributeLines);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InventoryUpdateDto {\n");
    
    sb.append("    inventoryNumber: ").append(toIndentedString(inventoryNumber)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    itemClass: ").append(toIndentedString(itemClass)).append("\n");
    sb.append("    postingClass: ").append(toIndentedString(postingClass)).append("\n");
    sb.append("    vatCode: ").append(toIndentedString(vatCode)).append("\n");
    sb.append("    defaultPrice: ").append(toIndentedString(defaultPrice)).append("\n");
    sb.append("    baseUnit: ").append(toIndentedString(baseUnit)).append("\n");
    sb.append("    salesUnit: ").append(toIndentedString(salesUnit)).append("\n");
    sb.append("    purchaseUnit: ").append(toIndentedString(purchaseUnit)).append("\n");
    sb.append("    attributeLines: ").append(toIndentedString(attributeLines)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

