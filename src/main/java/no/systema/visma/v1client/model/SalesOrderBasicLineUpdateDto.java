/*
 * Visma Net API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 6.13.03.0008
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package no.systema.visma.v1client.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import no.systema.visma.v1client.model.DtoValueNullableBoolean;
import no.systema.visma.v1client.model.DtoValueNullableDecimal;
import no.systema.visma.v1client.model.DtoValueNullableInt32;
import no.systema.visma.v1client.model.DtoValueString;

/**
 * This class represent a Sales Order Line in Sales Order Controller. Used to pass data to server for creating or updating an order line
 */
@ApiModel(description = "This class represent a Sales Order Line in Sales Order Controller. Used to pass data to server for creating or updating an order line")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-04-16T15:04:09.234+02:00")
public class SalesOrderBasicLineUpdateDto {
  @JsonProperty("branchNumber")
  private DtoValueString branchNumber = null;

  /**
   * Gets or Sets operation
   */
  public enum OperationEnum {
    INSERT("Insert"),
    
    UPDATE("Update"),
    
    DELETE("Delete");

    private String value;

    OperationEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static OperationEnum fromValue(String text) {
      for (OperationEnum b : OperationEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("operation")
  private OperationEnum operation = null;

  @JsonProperty("lineNbr")
  private DtoValueNullableInt32 lineNbr = null;

  @JsonProperty("inventoryId")
  private DtoValueString inventoryId = null;

  @JsonProperty("inventoryNumber")
  private DtoValueString inventoryNumber = null;

  @JsonProperty("warehouse")
  private DtoValueString warehouse = null;

  @JsonProperty("uom")
  private DtoValueString uom = null;

  @JsonProperty("quantity")
  private DtoValueNullableDecimal quantity = null;

  @JsonProperty("unitCost")
  private DtoValueNullableDecimal unitCost = null;

  @JsonProperty("unitPrice")
  private DtoValueNullableDecimal unitPrice = null;

  @JsonProperty("discountPercent")
  private DtoValueNullableDecimal discountPercent = null;

  @JsonProperty("discountAmount")
  private DtoValueNullableDecimal discountAmount = null;

  @JsonProperty("discountCode")
  private DtoValueString discountCode = null;

  @JsonProperty("manualDiscount")
  private DtoValueNullableBoolean manualDiscount = null;

  @JsonProperty("discUnitPrice")
  private DtoValueNullableDecimal discUnitPrice = null;

  @JsonProperty("lineDescription")
  private DtoValueString lineDescription = null;

  @JsonProperty("note")
  private DtoValueString note = null;

  public SalesOrderBasicLineUpdateDto branchNumber(DtoValueString branchNumber) {
    this.branchNumber = branchNumber;
    return this;
  }

   /**
   * Get branchNumber
   * @return branchNumber
  **/
  @ApiModelProperty(value = "")
  public DtoValueString getBranchNumber() {
    return branchNumber;
  }

  public void setBranchNumber(DtoValueString branchNumber) {
    this.branchNumber = branchNumber;
  }

  public SalesOrderBasicLineUpdateDto operation(OperationEnum operation) {
    this.operation = operation;
    return this;
  }

   /**
   * Get operation
   * @return operation
  **/
  @ApiModelProperty(value = "")
  public OperationEnum getOperation() {
    return operation;
  }

  public void setOperation(OperationEnum operation) {
    this.operation = operation;
  }

  public SalesOrderBasicLineUpdateDto lineNbr(DtoValueNullableInt32 lineNbr) {
    this.lineNbr = lineNbr;
    return this;
  }

   /**
   * Get lineNbr
   * @return lineNbr
  **/
  @ApiModelProperty(value = "")
  public DtoValueNullableInt32 getLineNbr() {
    return lineNbr;
  }

  public void setLineNbr(DtoValueNullableInt32 lineNbr) {
    this.lineNbr = lineNbr;
  }

  public SalesOrderBasicLineUpdateDto inventoryId(DtoValueString inventoryId) {
    this.inventoryId = inventoryId;
    return this;
  }

   /**
   * InventoryId is deprecated, please use InventoryNumber instead.
   * @return inventoryId
  **/
  @ApiModelProperty(value = "InventoryId is deprecated, please use InventoryNumber instead.")
  public DtoValueString getInventoryId() {
    return inventoryId;
  }

  public void setInventoryId(DtoValueString inventoryId) {
    this.inventoryId = inventoryId;
  }

  public SalesOrderBasicLineUpdateDto inventoryNumber(DtoValueString inventoryNumber) {
    this.inventoryNumber = inventoryNumber;
    return this;
  }

   /**
   * Mandatory field
   * @return inventoryNumber
  **/
  @ApiModelProperty(required = true, value = "Mandatory field")
  public DtoValueString getInventoryNumber() {
    return inventoryNumber;
  }

  public void setInventoryNumber(DtoValueString inventoryNumber) {
    this.inventoryNumber = inventoryNumber;
  }

  public SalesOrderBasicLineUpdateDto warehouse(DtoValueString warehouse) {
    this.warehouse = warehouse;
    return this;
  }

   /**
   * Get warehouse
   * @return warehouse
  **/
  @ApiModelProperty(value = "")
  public DtoValueString getWarehouse() {
    return warehouse;
  }

  public void setWarehouse(DtoValueString warehouse) {
    this.warehouse = warehouse;
  }

  public SalesOrderBasicLineUpdateDto uom(DtoValueString uom) {
    this.uom = uom;
    return this;
  }

   /**
   * Get uom
   * @return uom
  **/
  @ApiModelProperty(value = "")
  public DtoValueString getUom() {
    return uom;
  }

  public void setUom(DtoValueString uom) {
    this.uom = uom;
  }

  public SalesOrderBasicLineUpdateDto quantity(DtoValueNullableDecimal quantity) {
    this.quantity = quantity;
    return this;
  }

   /**
   * Get quantity
   * @return quantity
  **/
  @ApiModelProperty(value = "")
  public DtoValueNullableDecimal getQuantity() {
    return quantity;
  }

  public void setQuantity(DtoValueNullableDecimal quantity) {
    this.quantity = quantity;
  }

  public SalesOrderBasicLineUpdateDto unitCost(DtoValueNullableDecimal unitCost) {
    this.unitCost = unitCost;
    return this;
  }

   /**
   * Get unitCost
   * @return unitCost
  **/
  @ApiModelProperty(value = "")
  public DtoValueNullableDecimal getUnitCost() {
    return unitCost;
  }

  public void setUnitCost(DtoValueNullableDecimal unitCost) {
    this.unitCost = unitCost;
  }

  public SalesOrderBasicLineUpdateDto unitPrice(DtoValueNullableDecimal unitPrice) {
    this.unitPrice = unitPrice;
    return this;
  }

   /**
   * Get unitPrice
   * @return unitPrice
  **/
  @ApiModelProperty(value = "")
  public DtoValueNullableDecimal getUnitPrice() {
    return unitPrice;
  }

  public void setUnitPrice(DtoValueNullableDecimal unitPrice) {
    this.unitPrice = unitPrice;
  }

  public SalesOrderBasicLineUpdateDto discountPercent(DtoValueNullableDecimal discountPercent) {
    this.discountPercent = discountPercent;
    return this;
  }

   /**
   * Get discountPercent
   * @return discountPercent
  **/
  @ApiModelProperty(value = "")
  public DtoValueNullableDecimal getDiscountPercent() {
    return discountPercent;
  }

  public void setDiscountPercent(DtoValueNullableDecimal discountPercent) {
    this.discountPercent = discountPercent;
  }

  public SalesOrderBasicLineUpdateDto discountAmount(DtoValueNullableDecimal discountAmount) {
    this.discountAmount = discountAmount;
    return this;
  }

   /**
   * Get discountAmount
   * @return discountAmount
  **/
  @ApiModelProperty(value = "")
  public DtoValueNullableDecimal getDiscountAmount() {
    return discountAmount;
  }

  public void setDiscountAmount(DtoValueNullableDecimal discountAmount) {
    this.discountAmount = discountAmount;
  }

  public SalesOrderBasicLineUpdateDto discountCode(DtoValueString discountCode) {
    this.discountCode = discountCode;
    return this;
  }

   /**
   * Get discountCode
   * @return discountCode
  **/
  @ApiModelProperty(value = "")
  public DtoValueString getDiscountCode() {
    return discountCode;
  }

  public void setDiscountCode(DtoValueString discountCode) {
    this.discountCode = discountCode;
  }

  public SalesOrderBasicLineUpdateDto manualDiscount(DtoValueNullableBoolean manualDiscount) {
    this.manualDiscount = manualDiscount;
    return this;
  }

   /**
   * Get manualDiscount
   * @return manualDiscount
  **/
  @ApiModelProperty(value = "")
  public DtoValueNullableBoolean getManualDiscount() {
    return manualDiscount;
  }

  public void setManualDiscount(DtoValueNullableBoolean manualDiscount) {
    this.manualDiscount = manualDiscount;
  }

  public SalesOrderBasicLineUpdateDto discUnitPrice(DtoValueNullableDecimal discUnitPrice) {
    this.discUnitPrice = discUnitPrice;
    return this;
  }

   /**
   * Get discUnitPrice
   * @return discUnitPrice
  **/
  @ApiModelProperty(value = "")
  public DtoValueNullableDecimal getDiscUnitPrice() {
    return discUnitPrice;
  }

  public void setDiscUnitPrice(DtoValueNullableDecimal discUnitPrice) {
    this.discUnitPrice = discUnitPrice;
  }

  public SalesOrderBasicLineUpdateDto lineDescription(DtoValueString lineDescription) {
    this.lineDescription = lineDescription;
    return this;
  }

   /**
   * Get lineDescription
   * @return lineDescription
  **/
  @ApiModelProperty(value = "")
  public DtoValueString getLineDescription() {
    return lineDescription;
  }

  public void setLineDescription(DtoValueString lineDescription) {
    this.lineDescription = lineDescription;
  }

  public SalesOrderBasicLineUpdateDto note(DtoValueString note) {
    this.note = note;
    return this;
  }

   /**
   * Get note
   * @return note
  **/
  @ApiModelProperty(value = "")
  public DtoValueString getNote() {
    return note;
  }

  public void setNote(DtoValueString note) {
    this.note = note;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SalesOrderBasicLineUpdateDto salesOrderBasicLineUpdateDto = (SalesOrderBasicLineUpdateDto) o;
    return Objects.equals(this.branchNumber, salesOrderBasicLineUpdateDto.branchNumber) &&
        Objects.equals(this.operation, salesOrderBasicLineUpdateDto.operation) &&
        Objects.equals(this.lineNbr, salesOrderBasicLineUpdateDto.lineNbr) &&
        Objects.equals(this.inventoryId, salesOrderBasicLineUpdateDto.inventoryId) &&
        Objects.equals(this.inventoryNumber, salesOrderBasicLineUpdateDto.inventoryNumber) &&
        Objects.equals(this.warehouse, salesOrderBasicLineUpdateDto.warehouse) &&
        Objects.equals(this.uom, salesOrderBasicLineUpdateDto.uom) &&
        Objects.equals(this.quantity, salesOrderBasicLineUpdateDto.quantity) &&
        Objects.equals(this.unitCost, salesOrderBasicLineUpdateDto.unitCost) &&
        Objects.equals(this.unitPrice, salesOrderBasicLineUpdateDto.unitPrice) &&
        Objects.equals(this.discountPercent, salesOrderBasicLineUpdateDto.discountPercent) &&
        Objects.equals(this.discountAmount, salesOrderBasicLineUpdateDto.discountAmount) &&
        Objects.equals(this.discountCode, salesOrderBasicLineUpdateDto.discountCode) &&
        Objects.equals(this.manualDiscount, salesOrderBasicLineUpdateDto.manualDiscount) &&
        Objects.equals(this.discUnitPrice, salesOrderBasicLineUpdateDto.discUnitPrice) &&
        Objects.equals(this.lineDescription, salesOrderBasicLineUpdateDto.lineDescription) &&
        Objects.equals(this.note, salesOrderBasicLineUpdateDto.note);
  }

  @Override
  public int hashCode() {
    return Objects.hash(branchNumber, operation, lineNbr, inventoryId, inventoryNumber, warehouse, uom, quantity, unitCost, unitPrice, discountPercent, discountAmount, discountCode, manualDiscount, discUnitPrice, lineDescription, note);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SalesOrderBasicLineUpdateDto {\n");
    
    sb.append("    branchNumber: ").append(toIndentedString(branchNumber)).append("\n");
    sb.append("    operation: ").append(toIndentedString(operation)).append("\n");
    sb.append("    lineNbr: ").append(toIndentedString(lineNbr)).append("\n");
    sb.append("    inventoryId: ").append(toIndentedString(inventoryId)).append("\n");
    sb.append("    inventoryNumber: ").append(toIndentedString(inventoryNumber)).append("\n");
    sb.append("    warehouse: ").append(toIndentedString(warehouse)).append("\n");
    sb.append("    uom: ").append(toIndentedString(uom)).append("\n");
    sb.append("    quantity: ").append(toIndentedString(quantity)).append("\n");
    sb.append("    unitCost: ").append(toIndentedString(unitCost)).append("\n");
    sb.append("    unitPrice: ").append(toIndentedString(unitPrice)).append("\n");
    sb.append("    discountPercent: ").append(toIndentedString(discountPercent)).append("\n");
    sb.append("    discountAmount: ").append(toIndentedString(discountAmount)).append("\n");
    sb.append("    discountCode: ").append(toIndentedString(discountCode)).append("\n");
    sb.append("    manualDiscount: ").append(toIndentedString(manualDiscount)).append("\n");
    sb.append("    discUnitPrice: ").append(toIndentedString(discUnitPrice)).append("\n");
    sb.append("    lineDescription: ").append(toIndentedString(lineDescription)).append("\n");
    sb.append("    note: ").append(toIndentedString(note)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

