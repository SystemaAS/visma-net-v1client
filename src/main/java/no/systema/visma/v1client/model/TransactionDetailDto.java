/*
 * Visma Net API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 6.13.03.0008
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package no.systema.visma.v1client.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import no.systema.visma.v1client.model.AccountNumberTypeDescriptionDto;
import no.systema.visma.v1client.model.BranchNumberDto;
import no.systema.visma.v1client.model.InventoryNumberDescriptionDto;
import no.systema.visma.v1client.model.ProjectIdDescriptionDto;
import no.systema.visma.v1client.model.ProjectTaskIdDescriptionDto;
import no.systema.visma.v1client.model.SubAccountDto;
import no.systema.visma.v1client.model.TaxCategoryNumberDescriptionDto;

/**
 * TransactionDetailDto
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-04-16T15:04:09.234+02:00")
public class TransactionDetailDto {
  @JsonProperty("lineNumber")
  private Integer lineNumber = null;

  @JsonProperty("branch")
  private BranchNumberDto branch = null;

  @JsonProperty("item")
  private InventoryNumberDescriptionDto item = null;

  @JsonProperty("description")
  private String description = null;

  @JsonProperty("quantity")
  private Double quantity = null;

  @JsonProperty("uom")
  private String uom = null;

  @JsonProperty("price")
  private Double price = null;

  @JsonProperty("amount")
  private Double amount = null;

  @JsonProperty("offsetCashAccount")
  private AccountNumberTypeDescriptionDto offsetCashAccount = null;

  @JsonProperty("offsetAccount")
  private AccountNumberTypeDescriptionDto offsetAccount = null;

  @JsonProperty("offsetSubAccount")
  private SubAccountDto offsetSubAccount = null;

  @JsonProperty("taxCategory")
  private TaxCategoryNumberDescriptionDto taxCategory = null;

  @JsonProperty("nonBillable")
  private Boolean nonBillable = null;

  @JsonProperty("project")
  private ProjectIdDescriptionDto project = null;

  @JsonProperty("projectTask")
  private ProjectTaskIdDescriptionDto projectTask = null;

  public TransactionDetailDto lineNumber(Integer lineNumber) {
    this.lineNumber = lineNumber;
    return this;
  }

   /**
   * Get lineNumber
   * @return lineNumber
  **/
  @ApiModelProperty(value = "")
  public Integer getLineNumber() {
    return lineNumber;
  }

  public void setLineNumber(Integer lineNumber) {
    this.lineNumber = lineNumber;
  }

  public TransactionDetailDto branch(BranchNumberDto branch) {
    this.branch = branch;
    return this;
  }

   /**
   * Get branch
   * @return branch
  **/
  @ApiModelProperty(value = "")
  public BranchNumberDto getBranch() {
    return branch;
  }

  public void setBranch(BranchNumberDto branch) {
    this.branch = branch;
  }

  public TransactionDetailDto item(InventoryNumberDescriptionDto item) {
    this.item = item;
    return this;
  }

   /**
   * Get item
   * @return item
  **/
  @ApiModelProperty(value = "")
  public InventoryNumberDescriptionDto getItem() {
    return item;
  }

  public void setItem(InventoryNumberDescriptionDto item) {
    this.item = item;
  }

  public TransactionDetailDto description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @ApiModelProperty(value = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public TransactionDetailDto quantity(Double quantity) {
    this.quantity = quantity;
    return this;
  }

   /**
   * Get quantity
   * @return quantity
  **/
  @ApiModelProperty(value = "")
  public Double getQuantity() {
    return quantity;
  }

  public void setQuantity(Double quantity) {
    this.quantity = quantity;
  }

  public TransactionDetailDto uom(String uom) {
    this.uom = uom;
    return this;
  }

   /**
   * Get uom
   * @return uom
  **/
  @ApiModelProperty(value = "")
  public String getUom() {
    return uom;
  }

  public void setUom(String uom) {
    this.uom = uom;
  }

  public TransactionDetailDto price(Double price) {
    this.price = price;
    return this;
  }

   /**
   * Get price
   * @return price
  **/
  @ApiModelProperty(value = "")
  public Double getPrice() {
    return price;
  }

  public void setPrice(Double price) {
    this.price = price;
  }

  public TransactionDetailDto amount(Double amount) {
    this.amount = amount;
    return this;
  }

   /**
   * Get amount
   * @return amount
  **/
  @ApiModelProperty(value = "")
  public Double getAmount() {
    return amount;
  }

  public void setAmount(Double amount) {
    this.amount = amount;
  }

  public TransactionDetailDto offsetCashAccount(AccountNumberTypeDescriptionDto offsetCashAccount) {
    this.offsetCashAccount = offsetCashAccount;
    return this;
  }

   /**
   * Get offsetCashAccount
   * @return offsetCashAccount
  **/
  @ApiModelProperty(value = "")
  public AccountNumberTypeDescriptionDto getOffsetCashAccount() {
    return offsetCashAccount;
  }

  public void setOffsetCashAccount(AccountNumberTypeDescriptionDto offsetCashAccount) {
    this.offsetCashAccount = offsetCashAccount;
  }

  public TransactionDetailDto offsetAccount(AccountNumberTypeDescriptionDto offsetAccount) {
    this.offsetAccount = offsetAccount;
    return this;
  }

   /**
   * Get offsetAccount
   * @return offsetAccount
  **/
  @ApiModelProperty(value = "")
  public AccountNumberTypeDescriptionDto getOffsetAccount() {
    return offsetAccount;
  }

  public void setOffsetAccount(AccountNumberTypeDescriptionDto offsetAccount) {
    this.offsetAccount = offsetAccount;
  }

  public TransactionDetailDto offsetSubAccount(SubAccountDto offsetSubAccount) {
    this.offsetSubAccount = offsetSubAccount;
    return this;
  }

   /**
   * Get offsetSubAccount
   * @return offsetSubAccount
  **/
  @ApiModelProperty(value = "")
  public SubAccountDto getOffsetSubAccount() {
    return offsetSubAccount;
  }

  public void setOffsetSubAccount(SubAccountDto offsetSubAccount) {
    this.offsetSubAccount = offsetSubAccount;
  }

  public TransactionDetailDto taxCategory(TaxCategoryNumberDescriptionDto taxCategory) {
    this.taxCategory = taxCategory;
    return this;
  }

   /**
   * Get taxCategory
   * @return taxCategory
  **/
  @ApiModelProperty(value = "")
  public TaxCategoryNumberDescriptionDto getTaxCategory() {
    return taxCategory;
  }

  public void setTaxCategory(TaxCategoryNumberDescriptionDto taxCategory) {
    this.taxCategory = taxCategory;
  }

  public TransactionDetailDto nonBillable(Boolean nonBillable) {
    this.nonBillable = nonBillable;
    return this;
  }

   /**
   * Get nonBillable
   * @return nonBillable
  **/
  @ApiModelProperty(value = "")
  public Boolean isNonBillable() {
    return nonBillable;
  }

  public void setNonBillable(Boolean nonBillable) {
    this.nonBillable = nonBillable;
  }

  public TransactionDetailDto project(ProjectIdDescriptionDto project) {
    this.project = project;
    return this;
  }

   /**
   * Get project
   * @return project
  **/
  @ApiModelProperty(value = "")
  public ProjectIdDescriptionDto getProject() {
    return project;
  }

  public void setProject(ProjectIdDescriptionDto project) {
    this.project = project;
  }

  public TransactionDetailDto projectTask(ProjectTaskIdDescriptionDto projectTask) {
    this.projectTask = projectTask;
    return this;
  }

   /**
   * Get projectTask
   * @return projectTask
  **/
  @ApiModelProperty(value = "")
  public ProjectTaskIdDescriptionDto getProjectTask() {
    return projectTask;
  }

  public void setProjectTask(ProjectTaskIdDescriptionDto projectTask) {
    this.projectTask = projectTask;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TransactionDetailDto transactionDetailDto = (TransactionDetailDto) o;
    return Objects.equals(this.lineNumber, transactionDetailDto.lineNumber) &&
        Objects.equals(this.branch, transactionDetailDto.branch) &&
        Objects.equals(this.item, transactionDetailDto.item) &&
        Objects.equals(this.description, transactionDetailDto.description) &&
        Objects.equals(this.quantity, transactionDetailDto.quantity) &&
        Objects.equals(this.uom, transactionDetailDto.uom) &&
        Objects.equals(this.price, transactionDetailDto.price) &&
        Objects.equals(this.amount, transactionDetailDto.amount) &&
        Objects.equals(this.offsetCashAccount, transactionDetailDto.offsetCashAccount) &&
        Objects.equals(this.offsetAccount, transactionDetailDto.offsetAccount) &&
        Objects.equals(this.offsetSubAccount, transactionDetailDto.offsetSubAccount) &&
        Objects.equals(this.taxCategory, transactionDetailDto.taxCategory) &&
        Objects.equals(this.nonBillable, transactionDetailDto.nonBillable) &&
        Objects.equals(this.project, transactionDetailDto.project) &&
        Objects.equals(this.projectTask, transactionDetailDto.projectTask);
  }

  @Override
  public int hashCode() {
    return Objects.hash(lineNumber, branch, item, description, quantity, uom, price, amount, offsetCashAccount, offsetAccount, offsetSubAccount, taxCategory, nonBillable, project, projectTask);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TransactionDetailDto {\n");
    
    sb.append("    lineNumber: ").append(toIndentedString(lineNumber)).append("\n");
    sb.append("    branch: ").append(toIndentedString(branch)).append("\n");
    sb.append("    item: ").append(toIndentedString(item)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    quantity: ").append(toIndentedString(quantity)).append("\n");
    sb.append("    uom: ").append(toIndentedString(uom)).append("\n");
    sb.append("    price: ").append(toIndentedString(price)).append("\n");
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("    offsetCashAccount: ").append(toIndentedString(offsetCashAccount)).append("\n");
    sb.append("    offsetAccount: ").append(toIndentedString(offsetAccount)).append("\n");
    sb.append("    offsetSubAccount: ").append(toIndentedString(offsetSubAccount)).append("\n");
    sb.append("    taxCategory: ").append(toIndentedString(taxCategory)).append("\n");
    sb.append("    nonBillable: ").append(toIndentedString(nonBillable)).append("\n");
    sb.append("    project: ").append(toIndentedString(project)).append("\n");
    sb.append("    projectTask: ").append(toIndentedString(projectTask)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

