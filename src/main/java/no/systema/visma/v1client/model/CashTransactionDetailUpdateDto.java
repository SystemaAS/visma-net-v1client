/*
 * Visma Net API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 6.13.03.0008
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package no.systema.visma.v1client.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import no.systema.visma.v1client.model.DtoValueInt32;
import no.systema.visma.v1client.model.DtoValueNullableBoolean;
import no.systema.visma.v1client.model.DtoValueNullableDecimal;
import no.systema.visma.v1client.model.DtoValueString;
import no.systema.visma.v1client.model.SegmentUpdateDto;

/**
 * CashTransactionDetailUpdateDto
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-04-16T15:04:09.234+02:00")
public class CashTransactionDetailUpdateDto {
  /**
   * Gets or Sets operation
   */
  public enum OperationEnum {
    INSERT("Insert"),
    
    UPDATE("Update"),
    
    DELETE("Delete");

    private String value;

    OperationEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static OperationEnum fromValue(String text) {
      for (OperationEnum b : OperationEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("operation")
  private OperationEnum operation = null;

  @JsonProperty("lineNumber")
  private DtoValueInt32 lineNumber = null;

  @JsonProperty("branchNumber")
  private DtoValueString branchNumber = null;

  @JsonProperty("inventoryNumber")
  private DtoValueString inventoryNumber = null;

  @JsonProperty("description")
  private DtoValueString description = null;

  @JsonProperty("quantity")
  private DtoValueNullableDecimal quantity = null;

  @JsonProperty("uom")
  private DtoValueString uom = null;

  @JsonProperty("price")
  private DtoValueNullableDecimal price = null;

  @JsonProperty("amount")
  private DtoValueNullableDecimal amount = null;

  @JsonProperty("offsetAccount")
  private DtoValueString offsetAccount = null;

  @JsonProperty("offsetSubaccount")
  private List<SegmentUpdateDto> offsetSubaccount = null;

  @JsonProperty("vatCode")
  private DtoValueString vatCode = null;

  @JsonProperty("notInvoiceable")
  private DtoValueNullableBoolean notInvoiceable = null;

  public CashTransactionDetailUpdateDto operation(OperationEnum operation) {
    this.operation = operation;
    return this;
  }

   /**
   * Get operation
   * @return operation
  **/
  @ApiModelProperty(value = "")
  public OperationEnum getOperation() {
    return operation;
  }

  public void setOperation(OperationEnum operation) {
    this.operation = operation;
  }

  public CashTransactionDetailUpdateDto lineNumber(DtoValueInt32 lineNumber) {
    this.lineNumber = lineNumber;
    return this;
  }

   /**
   * Get lineNumber
   * @return lineNumber
  **/
  @ApiModelProperty(value = "")
  public DtoValueInt32 getLineNumber() {
    return lineNumber;
  }

  public void setLineNumber(DtoValueInt32 lineNumber) {
    this.lineNumber = lineNumber;
  }

  public CashTransactionDetailUpdateDto branchNumber(DtoValueString branchNumber) {
    this.branchNumber = branchNumber;
    return this;
  }

   /**
   * Get branchNumber
   * @return branchNumber
  **/
  @ApiModelProperty(value = "")
  public DtoValueString getBranchNumber() {
    return branchNumber;
  }

  public void setBranchNumber(DtoValueString branchNumber) {
    this.branchNumber = branchNumber;
  }

  public CashTransactionDetailUpdateDto inventoryNumber(DtoValueString inventoryNumber) {
    this.inventoryNumber = inventoryNumber;
    return this;
  }

   /**
   * Get inventoryNumber
   * @return inventoryNumber
  **/
  @ApiModelProperty(value = "")
  public DtoValueString getInventoryNumber() {
    return inventoryNumber;
  }

  public void setInventoryNumber(DtoValueString inventoryNumber) {
    this.inventoryNumber = inventoryNumber;
  }

  public CashTransactionDetailUpdateDto description(DtoValueString description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @ApiModelProperty(value = "")
  public DtoValueString getDescription() {
    return description;
  }

  public void setDescription(DtoValueString description) {
    this.description = description;
  }

  public CashTransactionDetailUpdateDto quantity(DtoValueNullableDecimal quantity) {
    this.quantity = quantity;
    return this;
  }

   /**
   * Get quantity
   * @return quantity
  **/
  @ApiModelProperty(value = "")
  public DtoValueNullableDecimal getQuantity() {
    return quantity;
  }

  public void setQuantity(DtoValueNullableDecimal quantity) {
    this.quantity = quantity;
  }

  public CashTransactionDetailUpdateDto uom(DtoValueString uom) {
    this.uom = uom;
    return this;
  }

   /**
   * Get uom
   * @return uom
  **/
  @ApiModelProperty(value = "")
  public DtoValueString getUom() {
    return uom;
  }

  public void setUom(DtoValueString uom) {
    this.uom = uom;
  }

  public CashTransactionDetailUpdateDto price(DtoValueNullableDecimal price) {
    this.price = price;
    return this;
  }

   /**
   * Get price
   * @return price
  **/
  @ApiModelProperty(value = "")
  public DtoValueNullableDecimal getPrice() {
    return price;
  }

  public void setPrice(DtoValueNullableDecimal price) {
    this.price = price;
  }

  public CashTransactionDetailUpdateDto amount(DtoValueNullableDecimal amount) {
    this.amount = amount;
    return this;
  }

   /**
   * Get amount
   * @return amount
  **/
  @ApiModelProperty(value = "")
  public DtoValueNullableDecimal getAmount() {
    return amount;
  }

  public void setAmount(DtoValueNullableDecimal amount) {
    this.amount = amount;
  }

  public CashTransactionDetailUpdateDto offsetAccount(DtoValueString offsetAccount) {
    this.offsetAccount = offsetAccount;
    return this;
  }

   /**
   * Get offsetAccount
   * @return offsetAccount
  **/
  @ApiModelProperty(value = "")
  public DtoValueString getOffsetAccount() {
    return offsetAccount;
  }

  public void setOffsetAccount(DtoValueString offsetAccount) {
    this.offsetAccount = offsetAccount;
  }

  public CashTransactionDetailUpdateDto offsetSubaccount(List<SegmentUpdateDto> offsetSubaccount) {
    this.offsetSubaccount = offsetSubaccount;
    return this;
  }

  public CashTransactionDetailUpdateDto addOffsetSubaccountItem(SegmentUpdateDto offsetSubaccountItem) {
    if (this.offsetSubaccount == null) {
      this.offsetSubaccount = new ArrayList<>();
    }
    this.offsetSubaccount.add(offsetSubaccountItem);
    return this;
  }

   /**
   * Get offsetSubaccount
   * @return offsetSubaccount
  **/
  @ApiModelProperty(value = "")
  public List<SegmentUpdateDto> getOffsetSubaccount() {
    return offsetSubaccount;
  }

  public void setOffsetSubaccount(List<SegmentUpdateDto> offsetSubaccount) {
    this.offsetSubaccount = offsetSubaccount;
  }

  public CashTransactionDetailUpdateDto vatCode(DtoValueString vatCode) {
    this.vatCode = vatCode;
    return this;
  }

   /**
   * Get vatCode
   * @return vatCode
  **/
  @ApiModelProperty(value = "")
  public DtoValueString getVatCode() {
    return vatCode;
  }

  public void setVatCode(DtoValueString vatCode) {
    this.vatCode = vatCode;
  }

  public CashTransactionDetailUpdateDto notInvoiceable(DtoValueNullableBoolean notInvoiceable) {
    this.notInvoiceable = notInvoiceable;
    return this;
  }

   /**
   * Get notInvoiceable
   * @return notInvoiceable
  **/
  @ApiModelProperty(value = "")
  public DtoValueNullableBoolean getNotInvoiceable() {
    return notInvoiceable;
  }

  public void setNotInvoiceable(DtoValueNullableBoolean notInvoiceable) {
    this.notInvoiceable = notInvoiceable;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CashTransactionDetailUpdateDto cashTransactionDetailUpdateDto = (CashTransactionDetailUpdateDto) o;
    return Objects.equals(this.operation, cashTransactionDetailUpdateDto.operation) &&
        Objects.equals(this.lineNumber, cashTransactionDetailUpdateDto.lineNumber) &&
        Objects.equals(this.branchNumber, cashTransactionDetailUpdateDto.branchNumber) &&
        Objects.equals(this.inventoryNumber, cashTransactionDetailUpdateDto.inventoryNumber) &&
        Objects.equals(this.description, cashTransactionDetailUpdateDto.description) &&
        Objects.equals(this.quantity, cashTransactionDetailUpdateDto.quantity) &&
        Objects.equals(this.uom, cashTransactionDetailUpdateDto.uom) &&
        Objects.equals(this.price, cashTransactionDetailUpdateDto.price) &&
        Objects.equals(this.amount, cashTransactionDetailUpdateDto.amount) &&
        Objects.equals(this.offsetAccount, cashTransactionDetailUpdateDto.offsetAccount) &&
        Objects.equals(this.offsetSubaccount, cashTransactionDetailUpdateDto.offsetSubaccount) &&
        Objects.equals(this.vatCode, cashTransactionDetailUpdateDto.vatCode) &&
        Objects.equals(this.notInvoiceable, cashTransactionDetailUpdateDto.notInvoiceable);
  }

  @Override
  public int hashCode() {
    return Objects.hash(operation, lineNumber, branchNumber, inventoryNumber, description, quantity, uom, price, amount, offsetAccount, offsetSubaccount, vatCode, notInvoiceable);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CashTransactionDetailUpdateDto {\n");
    
    sb.append("    operation: ").append(toIndentedString(operation)).append("\n");
    sb.append("    lineNumber: ").append(toIndentedString(lineNumber)).append("\n");
    sb.append("    branchNumber: ").append(toIndentedString(branchNumber)).append("\n");
    sb.append("    inventoryNumber: ").append(toIndentedString(inventoryNumber)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    quantity: ").append(toIndentedString(quantity)).append("\n");
    sb.append("    uom: ").append(toIndentedString(uom)).append("\n");
    sb.append("    price: ").append(toIndentedString(price)).append("\n");
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("    offsetAccount: ").append(toIndentedString(offsetAccount)).append("\n");
    sb.append("    offsetSubaccount: ").append(toIndentedString(offsetSubaccount)).append("\n");
    sb.append("    vatCode: ").append(toIndentedString(vatCode)).append("\n");
    sb.append("    notInvoiceable: ").append(toIndentedString(notInvoiceable)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

