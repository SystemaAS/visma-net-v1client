/*
 * Visma Net API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 6.13.03.0008
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package no.systema.visma.v1client.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.time.LocalDateTime;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import no.systema.visma.v1client.model.AccountNumberDescriptionDto;
import no.systema.visma.v1client.model.BranchNumberDto;
import no.systema.visma.v1client.model.LedgerDescriptionDto;

/**
 * GeneralLedgerTransactionDetailsDto
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-04-16T15:04:09.234+02:00")
public class GeneralLedgerTransactionDetailsDto {
  @JsonProperty("lineNumber")
  private Integer lineNumber = null;

  @JsonProperty("module")
  private String module = null;

  @JsonProperty("batchNumber")
  private String batchNumber = null;

  @JsonProperty("tranDate")
  private LocalDateTime tranDate = null;

  @JsonProperty("period")
  private String period = null;

  @JsonProperty("description")
  private String description = null;

  @JsonProperty("refNumber")
  private String refNumber = null;

  @JsonProperty("branch")
  private BranchNumberDto branch = null;

  @JsonProperty("account")
  private AccountNumberDescriptionDto account = null;

  @JsonProperty("ledger")
  private LedgerDescriptionDto ledger = null;

  @JsonProperty("subaccount")
  private String subaccount = null;

  @JsonProperty("begBalance")
  private Double begBalance = null;

  @JsonProperty("debitAmount")
  private Double debitAmount = null;

  @JsonProperty("creditAmount")
  private Double creditAmount = null;

  @JsonProperty("endingBalance")
  private Double endingBalance = null;

  @JsonProperty("currency")
  private String currency = null;

  @JsonProperty("currBegBalance")
  private Double currBegBalance = null;

  @JsonProperty("currDebitAmount")
  private Double currDebitAmount = null;

  @JsonProperty("currCreditAmount")
  private Double currCreditAmount = null;

  @JsonProperty("currEndingBalance")
  private Double currEndingBalance = null;

  @JsonProperty("lastModifiedDateTime")
  private LocalDateTime lastModifiedDateTime = null;

  @JsonProperty("extras")
  private Map<String, Object> extras = null;

  @JsonProperty("errorInfo")
  private String errorInfo = null;

  public GeneralLedgerTransactionDetailsDto lineNumber(Integer lineNumber) {
    this.lineNumber = lineNumber;
    return this;
  }

   /**
   * Get lineNumber
   * @return lineNumber
  **/
  @ApiModelProperty(value = "")
  public Integer getLineNumber() {
    return lineNumber;
  }

  public void setLineNumber(Integer lineNumber) {
    this.lineNumber = lineNumber;
  }

  public GeneralLedgerTransactionDetailsDto module(String module) {
    this.module = module;
    return this;
  }

   /**
   * Get module
   * @return module
  **/
  @ApiModelProperty(value = "")
  public String getModule() {
    return module;
  }

  public void setModule(String module) {
    this.module = module;
  }

  public GeneralLedgerTransactionDetailsDto batchNumber(String batchNumber) {
    this.batchNumber = batchNumber;
    return this;
  }

   /**
   * Get batchNumber
   * @return batchNumber
  **/
  @ApiModelProperty(value = "")
  public String getBatchNumber() {
    return batchNumber;
  }

  public void setBatchNumber(String batchNumber) {
    this.batchNumber = batchNumber;
  }

  public GeneralLedgerTransactionDetailsDto tranDate(LocalDateTime tranDate) {
    this.tranDate = tranDate;
    return this;
  }

   /**
   * Get tranDate
   * @return tranDate
  **/
  @ApiModelProperty(value = "")
  public LocalDateTime getTranDate() {
    return tranDate;
  }

  public void setTranDate(LocalDateTime tranDate) {
    this.tranDate = tranDate;
  }

  public GeneralLedgerTransactionDetailsDto period(String period) {
    this.period = period;
    return this;
  }

   /**
   * Get period
   * @return period
  **/
  @ApiModelProperty(value = "")
  public String getPeriod() {
    return period;
  }

  public void setPeriod(String period) {
    this.period = period;
  }

  public GeneralLedgerTransactionDetailsDto description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @ApiModelProperty(value = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public GeneralLedgerTransactionDetailsDto refNumber(String refNumber) {
    this.refNumber = refNumber;
    return this;
  }

   /**
   * Get refNumber
   * @return refNumber
  **/
  @ApiModelProperty(value = "")
  public String getRefNumber() {
    return refNumber;
  }

  public void setRefNumber(String refNumber) {
    this.refNumber = refNumber;
  }

  public GeneralLedgerTransactionDetailsDto branch(BranchNumberDto branch) {
    this.branch = branch;
    return this;
  }

   /**
   * Get branch
   * @return branch
  **/
  @ApiModelProperty(value = "")
  public BranchNumberDto getBranch() {
    return branch;
  }

  public void setBranch(BranchNumberDto branch) {
    this.branch = branch;
  }

  public GeneralLedgerTransactionDetailsDto account(AccountNumberDescriptionDto account) {
    this.account = account;
    return this;
  }

   /**
   * Get account
   * @return account
  **/
  @ApiModelProperty(value = "")
  public AccountNumberDescriptionDto getAccount() {
    return account;
  }

  public void setAccount(AccountNumberDescriptionDto account) {
    this.account = account;
  }

  public GeneralLedgerTransactionDetailsDto ledger(LedgerDescriptionDto ledger) {
    this.ledger = ledger;
    return this;
  }

   /**
   * Get ledger
   * @return ledger
  **/
  @ApiModelProperty(value = "")
  public LedgerDescriptionDto getLedger() {
    return ledger;
  }

  public void setLedger(LedgerDescriptionDto ledger) {
    this.ledger = ledger;
  }

  public GeneralLedgerTransactionDetailsDto subaccount(String subaccount) {
    this.subaccount = subaccount;
    return this;
  }

   /**
   * Get subaccount
   * @return subaccount
  **/
  @ApiModelProperty(value = "")
  public String getSubaccount() {
    return subaccount;
  }

  public void setSubaccount(String subaccount) {
    this.subaccount = subaccount;
  }

  public GeneralLedgerTransactionDetailsDto begBalance(Double begBalance) {
    this.begBalance = begBalance;
    return this;
  }

   /**
   * Get begBalance
   * @return begBalance
  **/
  @ApiModelProperty(value = "")
  public Double getBegBalance() {
    return begBalance;
  }

  public void setBegBalance(Double begBalance) {
    this.begBalance = begBalance;
  }

  public GeneralLedgerTransactionDetailsDto debitAmount(Double debitAmount) {
    this.debitAmount = debitAmount;
    return this;
  }

   /**
   * Get debitAmount
   * @return debitAmount
  **/
  @ApiModelProperty(value = "")
  public Double getDebitAmount() {
    return debitAmount;
  }

  public void setDebitAmount(Double debitAmount) {
    this.debitAmount = debitAmount;
  }

  public GeneralLedgerTransactionDetailsDto creditAmount(Double creditAmount) {
    this.creditAmount = creditAmount;
    return this;
  }

   /**
   * Get creditAmount
   * @return creditAmount
  **/
  @ApiModelProperty(value = "")
  public Double getCreditAmount() {
    return creditAmount;
  }

  public void setCreditAmount(Double creditAmount) {
    this.creditAmount = creditAmount;
  }

  public GeneralLedgerTransactionDetailsDto endingBalance(Double endingBalance) {
    this.endingBalance = endingBalance;
    return this;
  }

   /**
   * Get endingBalance
   * @return endingBalance
  **/
  @ApiModelProperty(value = "")
  public Double getEndingBalance() {
    return endingBalance;
  }

  public void setEndingBalance(Double endingBalance) {
    this.endingBalance = endingBalance;
  }

  public GeneralLedgerTransactionDetailsDto currency(String currency) {
    this.currency = currency;
    return this;
  }

   /**
   * Get currency
   * @return currency
  **/
  @ApiModelProperty(value = "")
  public String getCurrency() {
    return currency;
  }

  public void setCurrency(String currency) {
    this.currency = currency;
  }

  public GeneralLedgerTransactionDetailsDto currBegBalance(Double currBegBalance) {
    this.currBegBalance = currBegBalance;
    return this;
  }

   /**
   * Get currBegBalance
   * @return currBegBalance
  **/
  @ApiModelProperty(value = "")
  public Double getCurrBegBalance() {
    return currBegBalance;
  }

  public void setCurrBegBalance(Double currBegBalance) {
    this.currBegBalance = currBegBalance;
  }

  public GeneralLedgerTransactionDetailsDto currDebitAmount(Double currDebitAmount) {
    this.currDebitAmount = currDebitAmount;
    return this;
  }

   /**
   * Get currDebitAmount
   * @return currDebitAmount
  **/
  @ApiModelProperty(value = "")
  public Double getCurrDebitAmount() {
    return currDebitAmount;
  }

  public void setCurrDebitAmount(Double currDebitAmount) {
    this.currDebitAmount = currDebitAmount;
  }

  public GeneralLedgerTransactionDetailsDto currCreditAmount(Double currCreditAmount) {
    this.currCreditAmount = currCreditAmount;
    return this;
  }

   /**
   * Get currCreditAmount
   * @return currCreditAmount
  **/
  @ApiModelProperty(value = "")
  public Double getCurrCreditAmount() {
    return currCreditAmount;
  }

  public void setCurrCreditAmount(Double currCreditAmount) {
    this.currCreditAmount = currCreditAmount;
  }

  public GeneralLedgerTransactionDetailsDto currEndingBalance(Double currEndingBalance) {
    this.currEndingBalance = currEndingBalance;
    return this;
  }

   /**
   * Get currEndingBalance
   * @return currEndingBalance
  **/
  @ApiModelProperty(value = "")
  public Double getCurrEndingBalance() {
    return currEndingBalance;
  }

  public void setCurrEndingBalance(Double currEndingBalance) {
    this.currEndingBalance = currEndingBalance;
  }

  public GeneralLedgerTransactionDetailsDto lastModifiedDateTime(LocalDateTime lastModifiedDateTime) {
    this.lastModifiedDateTime = lastModifiedDateTime;
    return this;
  }

   /**
   * Get lastModifiedDateTime
   * @return lastModifiedDateTime
  **/
  @ApiModelProperty(value = "")
  public LocalDateTime getLastModifiedDateTime() {
    return lastModifiedDateTime;
  }

  public void setLastModifiedDateTime(LocalDateTime lastModifiedDateTime) {
    this.lastModifiedDateTime = lastModifiedDateTime;
  }

  public GeneralLedgerTransactionDetailsDto extras(Map<String, Object> extras) {
    this.extras = extras;
    return this;
  }

  public GeneralLedgerTransactionDetailsDto putExtrasItem(String key, Object extrasItem) {
    if (this.extras == null) {
      this.extras = new HashMap<>();
    }
    this.extras.put(key, extrasItem);
    return this;
  }

   /**
   * Get extras
   * @return extras
  **/
  @ApiModelProperty(value = "")
  public Map<String, Object> getExtras() {
    return extras;
  }

  public void setExtras(Map<String, Object> extras) {
    this.extras = extras;
  }

  public GeneralLedgerTransactionDetailsDto errorInfo(String errorInfo) {
    this.errorInfo = errorInfo;
    return this;
  }

   /**
   * Get errorInfo
   * @return errorInfo
  **/
  @ApiModelProperty(value = "")
  public String getErrorInfo() {
    return errorInfo;
  }

  public void setErrorInfo(String errorInfo) {
    this.errorInfo = errorInfo;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GeneralLedgerTransactionDetailsDto generalLedgerTransactionDetailsDto = (GeneralLedgerTransactionDetailsDto) o;
    return Objects.equals(this.lineNumber, generalLedgerTransactionDetailsDto.lineNumber) &&
        Objects.equals(this.module, generalLedgerTransactionDetailsDto.module) &&
        Objects.equals(this.batchNumber, generalLedgerTransactionDetailsDto.batchNumber) &&
        Objects.equals(this.tranDate, generalLedgerTransactionDetailsDto.tranDate) &&
        Objects.equals(this.period, generalLedgerTransactionDetailsDto.period) &&
        Objects.equals(this.description, generalLedgerTransactionDetailsDto.description) &&
        Objects.equals(this.refNumber, generalLedgerTransactionDetailsDto.refNumber) &&
        Objects.equals(this.branch, generalLedgerTransactionDetailsDto.branch) &&
        Objects.equals(this.account, generalLedgerTransactionDetailsDto.account) &&
        Objects.equals(this.ledger, generalLedgerTransactionDetailsDto.ledger) &&
        Objects.equals(this.subaccount, generalLedgerTransactionDetailsDto.subaccount) &&
        Objects.equals(this.begBalance, generalLedgerTransactionDetailsDto.begBalance) &&
        Objects.equals(this.debitAmount, generalLedgerTransactionDetailsDto.debitAmount) &&
        Objects.equals(this.creditAmount, generalLedgerTransactionDetailsDto.creditAmount) &&
        Objects.equals(this.endingBalance, generalLedgerTransactionDetailsDto.endingBalance) &&
        Objects.equals(this.currency, generalLedgerTransactionDetailsDto.currency) &&
        Objects.equals(this.currBegBalance, generalLedgerTransactionDetailsDto.currBegBalance) &&
        Objects.equals(this.currDebitAmount, generalLedgerTransactionDetailsDto.currDebitAmount) &&
        Objects.equals(this.currCreditAmount, generalLedgerTransactionDetailsDto.currCreditAmount) &&
        Objects.equals(this.currEndingBalance, generalLedgerTransactionDetailsDto.currEndingBalance) &&
        Objects.equals(this.lastModifiedDateTime, generalLedgerTransactionDetailsDto.lastModifiedDateTime) &&
        Objects.equals(this.extras, generalLedgerTransactionDetailsDto.extras) &&
        Objects.equals(this.errorInfo, generalLedgerTransactionDetailsDto.errorInfo);
  }

  @Override
  public int hashCode() {
    return Objects.hash(lineNumber, module, batchNumber, tranDate, period, description, refNumber, branch, account, ledger, subaccount, begBalance, debitAmount, creditAmount, endingBalance, currency, currBegBalance, currDebitAmount, currCreditAmount, currEndingBalance, lastModifiedDateTime, extras, errorInfo);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GeneralLedgerTransactionDetailsDto {\n");
    
    sb.append("    lineNumber: ").append(toIndentedString(lineNumber)).append("\n");
    sb.append("    module: ").append(toIndentedString(module)).append("\n");
    sb.append("    batchNumber: ").append(toIndentedString(batchNumber)).append("\n");
    sb.append("    tranDate: ").append(toIndentedString(tranDate)).append("\n");
    sb.append("    period: ").append(toIndentedString(period)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    refNumber: ").append(toIndentedString(refNumber)).append("\n");
    sb.append("    branch: ").append(toIndentedString(branch)).append("\n");
    sb.append("    account: ").append(toIndentedString(account)).append("\n");
    sb.append("    ledger: ").append(toIndentedString(ledger)).append("\n");
    sb.append("    subaccount: ").append(toIndentedString(subaccount)).append("\n");
    sb.append("    begBalance: ").append(toIndentedString(begBalance)).append("\n");
    sb.append("    debitAmount: ").append(toIndentedString(debitAmount)).append("\n");
    sb.append("    creditAmount: ").append(toIndentedString(creditAmount)).append("\n");
    sb.append("    endingBalance: ").append(toIndentedString(endingBalance)).append("\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    currBegBalance: ").append(toIndentedString(currBegBalance)).append("\n");
    sb.append("    currDebitAmount: ").append(toIndentedString(currDebitAmount)).append("\n");
    sb.append("    currCreditAmount: ").append(toIndentedString(currCreditAmount)).append("\n");
    sb.append("    currEndingBalance: ").append(toIndentedString(currEndingBalance)).append("\n");
    sb.append("    lastModifiedDateTime: ").append(toIndentedString(lastModifiedDateTime)).append("\n");
    sb.append("    extras: ").append(toIndentedString(extras)).append("\n");
    sb.append("    errorInfo: ").append(toIndentedString(errorInfo)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

