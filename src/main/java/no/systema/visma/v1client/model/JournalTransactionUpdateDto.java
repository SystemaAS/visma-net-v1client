/*
 * Visma Net API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 6.13.03.0008
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package no.systema.visma.v1client.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import no.systema.visma.v1client.model.DtoValueBoolean;
import no.systema.visma.v1client.model.DtoValueDateTime;
import no.systema.visma.v1client.model.DtoValueDecimal;
import no.systema.visma.v1client.model.DtoValueString;
import no.systema.visma.v1client.model.JournalTransactionLineUpdateDto;

/**
 * This class represents a journal transaction in JournalTransactionController. Used for creating/updating data.
 */
@ApiModel(description = "This class represents a journal transaction in JournalTransactionController. Used for creating/updating data.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-04-16T15:04:09.234+02:00")
public class JournalTransactionUpdateDto {
  @JsonProperty("batchNumber")
  private DtoValueString batchNumber = null;

  @JsonProperty("hold")
  private DtoValueBoolean hold = null;

  @JsonProperty("transactionDate")
  private DtoValueDateTime transactionDate = null;

  @JsonProperty("postPeriod")
  private DtoValueString postPeriod = null;

  @JsonProperty("financialPeriod")
  private DtoValueString financialPeriod = null;

  @JsonProperty("ledger")
  private DtoValueString ledger = null;

  @JsonProperty("currencyId")
  private DtoValueString currencyId = null;

  @JsonProperty("exchangeRate")
  private DtoValueDecimal exchangeRate = null;

  @JsonProperty("autoReversing")
  private DtoValueBoolean autoReversing = null;

  @JsonProperty("description")
  private DtoValueString description = null;

  @JsonProperty("controlTotalInCurrency")
  private DtoValueDecimal controlTotalInCurrency = null;

  @JsonProperty("createVatTransaction")
  private DtoValueBoolean createVatTransaction = null;

  @JsonProperty("skipVatAmountValidation")
  private DtoValueBoolean skipVatAmountValidation = null;

  @JsonProperty("transactionCode")
  private DtoValueString transactionCode = null;

  @JsonProperty("branch")
  private DtoValueString branch = null;

  @JsonProperty("journalTransactionLines")
  private List<JournalTransactionLineUpdateDto> journalTransactionLines = null;

  public JournalTransactionUpdateDto batchNumber(DtoValueString batchNumber) {
    this.batchNumber = batchNumber;
    return this;
  }

   /**
   * Get batchNumber
   * @return batchNumber
  **/
  @ApiModelProperty(value = "")
  public DtoValueString getBatchNumber() {
    return batchNumber;
  }

  public void setBatchNumber(DtoValueString batchNumber) {
    this.batchNumber = batchNumber;
  }

  public JournalTransactionUpdateDto hold(DtoValueBoolean hold) {
    this.hold = hold;
    return this;
  }

   /**
   * Get hold
   * @return hold
  **/
  @ApiModelProperty(value = "")
  public DtoValueBoolean getHold() {
    return hold;
  }

  public void setHold(DtoValueBoolean hold) {
    this.hold = hold;
  }

  public JournalTransactionUpdateDto transactionDate(DtoValueDateTime transactionDate) {
    this.transactionDate = transactionDate;
    return this;
  }

   /**
   * Get transactionDate
   * @return transactionDate
  **/
  @ApiModelProperty(value = "")
  public DtoValueDateTime getTransactionDate() {
    return transactionDate;
  }

  public void setTransactionDate(DtoValueDateTime transactionDate) {
    this.transactionDate = transactionDate;
  }

  public JournalTransactionUpdateDto postPeriod(DtoValueString postPeriod) {
    this.postPeriod = postPeriod;
    return this;
  }

   /**
   * The financial period to which the transactions recorded in the document should be posted. Use the format MMYYYY.
   * @return postPeriod
  **/
  @ApiModelProperty(value = "The financial period to which the transactions recorded in the document should be posted. Use the format MMYYYY.")
  public DtoValueString getPostPeriod() {
    return postPeriod;
  }

  public void setPostPeriod(DtoValueString postPeriod) {
    this.postPeriod = postPeriod;
  }

  public JournalTransactionUpdateDto financialPeriod(DtoValueString financialPeriod) {
    this.financialPeriod = financialPeriod;
    return this;
  }

   /**
   * The financial period to which the transactions recorded in the document should be posted. Use the format YYYYMM.
   * @return financialPeriod
  **/
  @ApiModelProperty(value = "The financial period to which the transactions recorded in the document should be posted. Use the format YYYYMM.")
  public DtoValueString getFinancialPeriod() {
    return financialPeriod;
  }

  public void setFinancialPeriod(DtoValueString financialPeriod) {
    this.financialPeriod = financialPeriod;
  }

  public JournalTransactionUpdateDto ledger(DtoValueString ledger) {
    this.ledger = ledger;
    return this;
  }

   /**
   * Get ledger
   * @return ledger
  **/
  @ApiModelProperty(value = "")
  public DtoValueString getLedger() {
    return ledger;
  }

  public void setLedger(DtoValueString ledger) {
    this.ledger = ledger;
  }

  public JournalTransactionUpdateDto currencyId(DtoValueString currencyId) {
    this.currencyId = currencyId;
    return this;
  }

   /**
   * Get currencyId
   * @return currencyId
  **/
  @ApiModelProperty(value = "")
  public DtoValueString getCurrencyId() {
    return currencyId;
  }

  public void setCurrencyId(DtoValueString currencyId) {
    this.currencyId = currencyId;
  }

  public JournalTransactionUpdateDto exchangeRate(DtoValueDecimal exchangeRate) {
    this.exchangeRate = exchangeRate;
    return this;
  }

   /**
   * Get exchangeRate
   * @return exchangeRate
  **/
  @ApiModelProperty(value = "")
  public DtoValueDecimal getExchangeRate() {
    return exchangeRate;
  }

  public void setExchangeRate(DtoValueDecimal exchangeRate) {
    this.exchangeRate = exchangeRate;
  }

  public JournalTransactionUpdateDto autoReversing(DtoValueBoolean autoReversing) {
    this.autoReversing = autoReversing;
    return this;
  }

   /**
   * Get autoReversing
   * @return autoReversing
  **/
  @ApiModelProperty(value = "")
  public DtoValueBoolean getAutoReversing() {
    return autoReversing;
  }

  public void setAutoReversing(DtoValueBoolean autoReversing) {
    this.autoReversing = autoReversing;
  }

  public JournalTransactionUpdateDto description(DtoValueString description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @ApiModelProperty(value = "")
  public DtoValueString getDescription() {
    return description;
  }

  public void setDescription(DtoValueString description) {
    this.description = description;
  }

  public JournalTransactionUpdateDto controlTotalInCurrency(DtoValueDecimal controlTotalInCurrency) {
    this.controlTotalInCurrency = controlTotalInCurrency;
    return this;
  }

   /**
   * Get controlTotalInCurrency
   * @return controlTotalInCurrency
  **/
  @ApiModelProperty(value = "")
  public DtoValueDecimal getControlTotalInCurrency() {
    return controlTotalInCurrency;
  }

  public void setControlTotalInCurrency(DtoValueDecimal controlTotalInCurrency) {
    this.controlTotalInCurrency = controlTotalInCurrency;
  }

  public JournalTransactionUpdateDto createVatTransaction(DtoValueBoolean createVatTransaction) {
    this.createVatTransaction = createVatTransaction;
    return this;
  }

   /**
   * Get createVatTransaction
   * @return createVatTransaction
  **/
  @ApiModelProperty(value = "")
  public DtoValueBoolean getCreateVatTransaction() {
    return createVatTransaction;
  }

  public void setCreateVatTransaction(DtoValueBoolean createVatTransaction) {
    this.createVatTransaction = createVatTransaction;
  }

  public JournalTransactionUpdateDto skipVatAmountValidation(DtoValueBoolean skipVatAmountValidation) {
    this.skipVatAmountValidation = skipVatAmountValidation;
    return this;
  }

   /**
   * Get skipVatAmountValidation
   * @return skipVatAmountValidation
  **/
  @ApiModelProperty(value = "")
  public DtoValueBoolean getSkipVatAmountValidation() {
    return skipVatAmountValidation;
  }

  public void setSkipVatAmountValidation(DtoValueBoolean skipVatAmountValidation) {
    this.skipVatAmountValidation = skipVatAmountValidation;
  }

  public JournalTransactionUpdateDto transactionCode(DtoValueString transactionCode) {
    this.transactionCode = transactionCode;
    return this;
  }

   /**
   * Get transactionCode
   * @return transactionCode
  **/
  @ApiModelProperty(value = "")
  public DtoValueString getTransactionCode() {
    return transactionCode;
  }

  public void setTransactionCode(DtoValueString transactionCode) {
    this.transactionCode = transactionCode;
  }

  public JournalTransactionUpdateDto branch(DtoValueString branch) {
    this.branch = branch;
    return this;
  }

   /**
   * Get branch
   * @return branch
  **/
  @ApiModelProperty(value = "")
  public DtoValueString getBranch() {
    return branch;
  }

  public void setBranch(DtoValueString branch) {
    this.branch = branch;
  }

  public JournalTransactionUpdateDto journalTransactionLines(List<JournalTransactionLineUpdateDto> journalTransactionLines) {
    this.journalTransactionLines = journalTransactionLines;
    return this;
  }

  public JournalTransactionUpdateDto addJournalTransactionLinesItem(JournalTransactionLineUpdateDto journalTransactionLinesItem) {
    if (this.journalTransactionLines == null) {
      this.journalTransactionLines = new ArrayList<>();
    }
    this.journalTransactionLines.add(journalTransactionLinesItem);
    return this;
  }

   /**
   * Get journalTransactionLines
   * @return journalTransactionLines
  **/
  @ApiModelProperty(value = "")
  public List<JournalTransactionLineUpdateDto> getJournalTransactionLines() {
    return journalTransactionLines;
  }

  public void setJournalTransactionLines(List<JournalTransactionLineUpdateDto> journalTransactionLines) {
    this.journalTransactionLines = journalTransactionLines;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    JournalTransactionUpdateDto journalTransactionUpdateDto = (JournalTransactionUpdateDto) o;
    return Objects.equals(this.batchNumber, journalTransactionUpdateDto.batchNumber) &&
        Objects.equals(this.hold, journalTransactionUpdateDto.hold) &&
        Objects.equals(this.transactionDate, journalTransactionUpdateDto.transactionDate) &&
        Objects.equals(this.postPeriod, journalTransactionUpdateDto.postPeriod) &&
        Objects.equals(this.financialPeriod, journalTransactionUpdateDto.financialPeriod) &&
        Objects.equals(this.ledger, journalTransactionUpdateDto.ledger) &&
        Objects.equals(this.currencyId, journalTransactionUpdateDto.currencyId) &&
        Objects.equals(this.exchangeRate, journalTransactionUpdateDto.exchangeRate) &&
        Objects.equals(this.autoReversing, journalTransactionUpdateDto.autoReversing) &&
        Objects.equals(this.description, journalTransactionUpdateDto.description) &&
        Objects.equals(this.controlTotalInCurrency, journalTransactionUpdateDto.controlTotalInCurrency) &&
        Objects.equals(this.createVatTransaction, journalTransactionUpdateDto.createVatTransaction) &&
        Objects.equals(this.skipVatAmountValidation, journalTransactionUpdateDto.skipVatAmountValidation) &&
        Objects.equals(this.transactionCode, journalTransactionUpdateDto.transactionCode) &&
        Objects.equals(this.branch, journalTransactionUpdateDto.branch) &&
        Objects.equals(this.journalTransactionLines, journalTransactionUpdateDto.journalTransactionLines);
  }

  @Override
  public int hashCode() {
    return Objects.hash(batchNumber, hold, transactionDate, postPeriod, financialPeriod, ledger, currencyId, exchangeRate, autoReversing, description, controlTotalInCurrency, createVatTransaction, skipVatAmountValidation, transactionCode, branch, journalTransactionLines);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class JournalTransactionUpdateDto {\n");
    
    sb.append("    batchNumber: ").append(toIndentedString(batchNumber)).append("\n");
    sb.append("    hold: ").append(toIndentedString(hold)).append("\n");
    sb.append("    transactionDate: ").append(toIndentedString(transactionDate)).append("\n");
    sb.append("    postPeriod: ").append(toIndentedString(postPeriod)).append("\n");
    sb.append("    financialPeriod: ").append(toIndentedString(financialPeriod)).append("\n");
    sb.append("    ledger: ").append(toIndentedString(ledger)).append("\n");
    sb.append("    currencyId: ").append(toIndentedString(currencyId)).append("\n");
    sb.append("    exchangeRate: ").append(toIndentedString(exchangeRate)).append("\n");
    sb.append("    autoReversing: ").append(toIndentedString(autoReversing)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    controlTotalInCurrency: ").append(toIndentedString(controlTotalInCurrency)).append("\n");
    sb.append("    createVatTransaction: ").append(toIndentedString(createVatTransaction)).append("\n");
    sb.append("    skipVatAmountValidation: ").append(toIndentedString(skipVatAmountValidation)).append("\n");
    sb.append("    transactionCode: ").append(toIndentedString(transactionCode)).append("\n");
    sb.append("    branch: ").append(toIndentedString(branch)).append("\n");
    sb.append("    journalTransactionLines: ").append(toIndentedString(journalTransactionLines)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

