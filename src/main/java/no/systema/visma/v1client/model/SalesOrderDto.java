/*
 * Visma Net API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 6.13.03.0008
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package no.systema.visma.v1client.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import no.systema.visma.v1client.model.AttachmentDto;
import no.systema.visma.v1client.model.BranchNumberDto;
import no.systema.visma.v1client.model.CarrierDescriptionDto;
import no.systema.visma.v1client.model.CreditTermsDto;
import no.systema.visma.v1client.model.CustomerDescriptionDto;
import no.systema.visma.v1client.model.FOBPointDescriptionDto;
import no.systema.visma.v1client.model.LocationDescriptionDto;
import no.systema.visma.v1client.model.SalesOrderAddressDto;
import no.systema.visma.v1client.model.SalesOrderContactDto;
import no.systema.visma.v1client.model.SalesOrderLineDto;
import no.systema.visma.v1client.model.SalesPersonDto;
import no.systema.visma.v1client.model.ShippingTermsDescriptionDto;
import no.systema.visma.v1client.model.ShippingZoneDescriptionDto;
import no.systema.visma.v1client.model.SigmaIntrastatTransactionDescriptionDto;
import no.systema.visma.v1client.model.UserDescriptionDto;
import no.systema.visma.v1client.model.VatZoneDto;
import no.systema.visma.v1client.model.WarehouseIdDescriptionDto;

/**
 * This class represents a SOOrder in SOOrderController. Used by getting data.
 */
@ApiModel(description = "This class represents a SOOrder in SOOrderController. Used by getting data.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-04-16T15:04:09.234+02:00")
public class SalesOrderDto {
  @JsonProperty("project")
  private Integer project = null;

  @JsonProperty("printDescriptionOnInvoice")
  private Boolean printDescriptionOnInvoice = null;

  @JsonProperty("printNoteOnExternalDocuments")
  private Boolean printNoteOnExternalDocuments = null;

  @JsonProperty("printNoteOnInternalDocuments")
  private Boolean printNoteOnInternalDocuments = null;

  @JsonProperty("soBillingContact")
  private SalesOrderContactDto soBillingContact = null;

  @JsonProperty("soBillingAddress")
  private SalesOrderAddressDto soBillingAddress = null;

  @JsonProperty("customerVATZone")
  private VatZoneDto customerVATZone = null;

  @JsonProperty("invoiceSeparately")
  private Boolean invoiceSeparately = null;

  @JsonProperty("invoiceNbr")
  private String invoiceNbr = null;

  @JsonProperty("invoiceDate")
  private LocalDateTime invoiceDate = null;

  @JsonProperty("terms")
  private CreditTermsDto terms = null;

  @JsonProperty("dueDate")
  private LocalDateTime dueDate = null;

  @JsonProperty("cashDiscountDate")
  private LocalDateTime cashDiscountDate = null;

  @JsonProperty("postPeriod")
  private String postPeriod = null;

  @JsonProperty("salesPerson")
  private SalesPersonDto salesPerson = null;

  @JsonProperty("owner")
  private UserDescriptionDto owner = null;

  @JsonProperty("origOrderType")
  private String origOrderType = null;

  @JsonProperty("origOrderNbr")
  private String origOrderNbr = null;

  @JsonProperty("soShippingContact")
  private SalesOrderContactDto soShippingContact = null;

  @JsonProperty("soShippingAddress")
  private SalesOrderAddressDto soShippingAddress = null;

  @JsonProperty("schedShipment")
  private LocalDateTime schedShipment = null;

  @JsonProperty("shipSeparately")
  private Boolean shipSeparately = null;

  /**
   * Gets or Sets shipComplete
   */
  public enum ShipCompleteEnum {
    BACKORDERALLOWED("BackOrderAllowed"),
    
    CANCELREMAINDER("CancelRemainder"),
    
    SHIPCOMPLETE("ShipComplete");

    private String value;

    ShipCompleteEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static ShipCompleteEnum fromValue(String text) {
      for (ShipCompleteEnum b : ShipCompleteEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("shipComplete")
  private ShipCompleteEnum shipComplete = null;

  @JsonProperty("cancelBy")
  private LocalDateTime cancelBy = null;

  @JsonProperty("canceled")
  private Boolean canceled = null;

  @JsonProperty("preferredWarehouse")
  private WarehouseIdDescriptionDto preferredWarehouse = null;

  @JsonProperty("shipVia")
  private CarrierDescriptionDto shipVia = null;

  @JsonProperty("fobPoint")
  private FOBPointDescriptionDto fobPoint = null;

  @JsonProperty("priority")
  private Integer priority = null;

  @JsonProperty("shippingTerms")
  private ShippingTermsDescriptionDto shippingTerms = null;

  @JsonProperty("shippingZone")
  private ShippingZoneDescriptionDto shippingZone = null;

  @JsonProperty("residentialDelivery")
  private Boolean residentialDelivery = null;

  @JsonProperty("saturdayDelivery")
  private Boolean saturdayDelivery = null;

  @JsonProperty("insurance")
  private Boolean insurance = null;

  @JsonProperty("transactionType")
  private SigmaIntrastatTransactionDescriptionDto transactionType = null;

  @JsonProperty("lines")
  private List<SalesOrderLineDto> lines = null;

  @JsonProperty("orderType")
  private String orderType = null;

  @JsonProperty("orderNo")
  private String orderNo = null;

  /**
   * Gets or Sets status
   */
  public enum StatusEnum {
    OPEN("Open"),
    
    HOLD("Hold"),
    
    CREDITHOLD("CreditHold"),
    
    COMPLETED("Completed"),
    
    CANCELLED("Cancelled"),
    
    BACKORDER("BackOrder"),
    
    SHIPPING("Shipping"),
    
    INVOICED("Invoiced");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static StatusEnum fromValue(String text) {
      for (StatusEnum b : StatusEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("status")
  private StatusEnum status = null;

  @JsonProperty("hold")
  private Boolean hold = null;

  @JsonProperty("date")
  private LocalDateTime date = null;

  @JsonProperty("requestOn")
  private LocalDateTime requestOn = null;

  @JsonProperty("customerOrder")
  private String customerOrder = null;

  @JsonProperty("customerRefNo")
  private String customerRefNo = null;

  @JsonProperty("customer")
  private CustomerDescriptionDto customer = null;

  @JsonProperty("location")
  private LocationDescriptionDto location = null;

  @JsonProperty("currency")
  private String currency = null;

  @JsonProperty("description")
  private String description = null;

  @JsonProperty("orderTotal")
  private Double orderTotal = null;

  @JsonProperty("vatTaxableTotal")
  private Double vatTaxableTotal = null;

  @JsonProperty("vatExemptTotal")
  private Double vatExemptTotal = null;

  @JsonProperty("taxTotal")
  private Double taxTotal = null;

  @JsonProperty("lastModifiedDateTime")
  private LocalDateTime lastModifiedDateTime = null;

  @JsonProperty("branchNumber")
  private BranchNumberDto branchNumber = null;

  @JsonProperty("note")
  private String note = null;

  @JsonProperty("attachments")
  private List<AttachmentDto> attachments = null;

  @JsonProperty("extras")
  private Map<String, Object> extras = null;

  @JsonProperty("errorInfo")
  private String errorInfo = null;

  public SalesOrderDto project(Integer project) {
    this.project = project;
    return this;
  }

   /**
   * Get project
   * @return project
  **/
  @ApiModelProperty(value = "")
  public Integer getProject() {
    return project;
  }

  public void setProject(Integer project) {
    this.project = project;
  }

  public SalesOrderDto printDescriptionOnInvoice(Boolean printDescriptionOnInvoice) {
    this.printDescriptionOnInvoice = printDescriptionOnInvoice;
    return this;
  }

   /**
   * Get printDescriptionOnInvoice
   * @return printDescriptionOnInvoice
  **/
  @ApiModelProperty(value = "")
  public Boolean isPrintDescriptionOnInvoice() {
    return printDescriptionOnInvoice;
  }

  public void setPrintDescriptionOnInvoice(Boolean printDescriptionOnInvoice) {
    this.printDescriptionOnInvoice = printDescriptionOnInvoice;
  }

  public SalesOrderDto printNoteOnExternalDocuments(Boolean printNoteOnExternalDocuments) {
    this.printNoteOnExternalDocuments = printNoteOnExternalDocuments;
    return this;
  }

   /**
   * Get printNoteOnExternalDocuments
   * @return printNoteOnExternalDocuments
  **/
  @ApiModelProperty(value = "")
  public Boolean isPrintNoteOnExternalDocuments() {
    return printNoteOnExternalDocuments;
  }

  public void setPrintNoteOnExternalDocuments(Boolean printNoteOnExternalDocuments) {
    this.printNoteOnExternalDocuments = printNoteOnExternalDocuments;
  }

  public SalesOrderDto printNoteOnInternalDocuments(Boolean printNoteOnInternalDocuments) {
    this.printNoteOnInternalDocuments = printNoteOnInternalDocuments;
    return this;
  }

   /**
   * Get printNoteOnInternalDocuments
   * @return printNoteOnInternalDocuments
  **/
  @ApiModelProperty(value = "")
  public Boolean isPrintNoteOnInternalDocuments() {
    return printNoteOnInternalDocuments;
  }

  public void setPrintNoteOnInternalDocuments(Boolean printNoteOnInternalDocuments) {
    this.printNoteOnInternalDocuments = printNoteOnInternalDocuments;
  }

  public SalesOrderDto soBillingContact(SalesOrderContactDto soBillingContact) {
    this.soBillingContact = soBillingContact;
    return this;
  }

   /**
   * Get soBillingContact
   * @return soBillingContact
  **/
  @ApiModelProperty(value = "")
  public SalesOrderContactDto getSoBillingContact() {
    return soBillingContact;
  }

  public void setSoBillingContact(SalesOrderContactDto soBillingContact) {
    this.soBillingContact = soBillingContact;
  }

  public SalesOrderDto soBillingAddress(SalesOrderAddressDto soBillingAddress) {
    this.soBillingAddress = soBillingAddress;
    return this;
  }

   /**
   * Get soBillingAddress
   * @return soBillingAddress
  **/
  @ApiModelProperty(value = "")
  public SalesOrderAddressDto getSoBillingAddress() {
    return soBillingAddress;
  }

  public void setSoBillingAddress(SalesOrderAddressDto soBillingAddress) {
    this.soBillingAddress = soBillingAddress;
  }

  public SalesOrderDto customerVATZone(VatZoneDto customerVATZone) {
    this.customerVATZone = customerVATZone;
    return this;
  }

   /**
   * Get customerVATZone
   * @return customerVATZone
  **/
  @ApiModelProperty(value = "")
  public VatZoneDto getCustomerVATZone() {
    return customerVATZone;
  }

  public void setCustomerVATZone(VatZoneDto customerVATZone) {
    this.customerVATZone = customerVATZone;
  }

  public SalesOrderDto invoiceSeparately(Boolean invoiceSeparately) {
    this.invoiceSeparately = invoiceSeparately;
    return this;
  }

   /**
   * Get invoiceSeparately
   * @return invoiceSeparately
  **/
  @ApiModelProperty(value = "")
  public Boolean isInvoiceSeparately() {
    return invoiceSeparately;
  }

  public void setInvoiceSeparately(Boolean invoiceSeparately) {
    this.invoiceSeparately = invoiceSeparately;
  }

  public SalesOrderDto invoiceNbr(String invoiceNbr) {
    this.invoiceNbr = invoiceNbr;
    return this;
  }

   /**
   * Get invoiceNbr
   * @return invoiceNbr
  **/
  @ApiModelProperty(value = "")
  public String getInvoiceNbr() {
    return invoiceNbr;
  }

  public void setInvoiceNbr(String invoiceNbr) {
    this.invoiceNbr = invoiceNbr;
  }

  public SalesOrderDto invoiceDate(LocalDateTime invoiceDate) {
    this.invoiceDate = invoiceDate;
    return this;
  }

   /**
   * Get invoiceDate
   * @return invoiceDate
  **/
  @ApiModelProperty(value = "")
  public LocalDateTime getInvoiceDate() {
    return invoiceDate;
  }

  public void setInvoiceDate(LocalDateTime invoiceDate) {
    this.invoiceDate = invoiceDate;
  }

  public SalesOrderDto terms(CreditTermsDto terms) {
    this.terms = terms;
    return this;
  }

   /**
   * Get terms
   * @return terms
  **/
  @ApiModelProperty(value = "")
  public CreditTermsDto getTerms() {
    return terms;
  }

  public void setTerms(CreditTermsDto terms) {
    this.terms = terms;
  }

  public SalesOrderDto dueDate(LocalDateTime dueDate) {
    this.dueDate = dueDate;
    return this;
  }

   /**
   * Get dueDate
   * @return dueDate
  **/
  @ApiModelProperty(value = "")
  public LocalDateTime getDueDate() {
    return dueDate;
  }

  public void setDueDate(LocalDateTime dueDate) {
    this.dueDate = dueDate;
  }

  public SalesOrderDto cashDiscountDate(LocalDateTime cashDiscountDate) {
    this.cashDiscountDate = cashDiscountDate;
    return this;
  }

   /**
   * Get cashDiscountDate
   * @return cashDiscountDate
  **/
  @ApiModelProperty(value = "")
  public LocalDateTime getCashDiscountDate() {
    return cashDiscountDate;
  }

  public void setCashDiscountDate(LocalDateTime cashDiscountDate) {
    this.cashDiscountDate = cashDiscountDate;
  }

  public SalesOrderDto postPeriod(String postPeriod) {
    this.postPeriod = postPeriod;
    return this;
  }

   /**
   * The financial period to which the transactions recorded in the document should be posted. Format MMYYYY.
   * @return postPeriod
  **/
  @ApiModelProperty(value = "The financial period to which the transactions recorded in the document should be posted. Format MMYYYY.")
  public String getPostPeriod() {
    return postPeriod;
  }

  public void setPostPeriod(String postPeriod) {
    this.postPeriod = postPeriod;
  }

  public SalesOrderDto salesPerson(SalesPersonDto salesPerson) {
    this.salesPerson = salesPerson;
    return this;
  }

   /**
   * Get salesPerson
   * @return salesPerson
  **/
  @ApiModelProperty(value = "")
  public SalesPersonDto getSalesPerson() {
    return salesPerson;
  }

  public void setSalesPerson(SalesPersonDto salesPerson) {
    this.salesPerson = salesPerson;
  }

  public SalesOrderDto owner(UserDescriptionDto owner) {
    this.owner = owner;
    return this;
  }

   /**
   * Get owner
   * @return owner
  **/
  @ApiModelProperty(value = "")
  public UserDescriptionDto getOwner() {
    return owner;
  }

  public void setOwner(UserDescriptionDto owner) {
    this.owner = owner;
  }

  public SalesOrderDto origOrderType(String origOrderType) {
    this.origOrderType = origOrderType;
    return this;
  }

   /**
   * Get origOrderType
   * @return origOrderType
  **/
  @ApiModelProperty(value = "")
  public String getOrigOrderType() {
    return origOrderType;
  }

  public void setOrigOrderType(String origOrderType) {
    this.origOrderType = origOrderType;
  }

  public SalesOrderDto origOrderNbr(String origOrderNbr) {
    this.origOrderNbr = origOrderNbr;
    return this;
  }

   /**
   * Get origOrderNbr
   * @return origOrderNbr
  **/
  @ApiModelProperty(value = "")
  public String getOrigOrderNbr() {
    return origOrderNbr;
  }

  public void setOrigOrderNbr(String origOrderNbr) {
    this.origOrderNbr = origOrderNbr;
  }

  public SalesOrderDto soShippingContact(SalesOrderContactDto soShippingContact) {
    this.soShippingContact = soShippingContact;
    return this;
  }

   /**
   * Get soShippingContact
   * @return soShippingContact
  **/
  @ApiModelProperty(value = "")
  public SalesOrderContactDto getSoShippingContact() {
    return soShippingContact;
  }

  public void setSoShippingContact(SalesOrderContactDto soShippingContact) {
    this.soShippingContact = soShippingContact;
  }

  public SalesOrderDto soShippingAddress(SalesOrderAddressDto soShippingAddress) {
    this.soShippingAddress = soShippingAddress;
    return this;
  }

   /**
   * Get soShippingAddress
   * @return soShippingAddress
  **/
  @ApiModelProperty(value = "")
  public SalesOrderAddressDto getSoShippingAddress() {
    return soShippingAddress;
  }

  public void setSoShippingAddress(SalesOrderAddressDto soShippingAddress) {
    this.soShippingAddress = soShippingAddress;
  }

  public SalesOrderDto schedShipment(LocalDateTime schedShipment) {
    this.schedShipment = schedShipment;
    return this;
  }

   /**
   * Get schedShipment
   * @return schedShipment
  **/
  @ApiModelProperty(value = "")
  public LocalDateTime getSchedShipment() {
    return schedShipment;
  }

  public void setSchedShipment(LocalDateTime schedShipment) {
    this.schedShipment = schedShipment;
  }

  public SalesOrderDto shipSeparately(Boolean shipSeparately) {
    this.shipSeparately = shipSeparately;
    return this;
  }

   /**
   * Get shipSeparately
   * @return shipSeparately
  **/
  @ApiModelProperty(value = "")
  public Boolean isShipSeparately() {
    return shipSeparately;
  }

  public void setShipSeparately(Boolean shipSeparately) {
    this.shipSeparately = shipSeparately;
  }

  public SalesOrderDto shipComplete(ShipCompleteEnum shipComplete) {
    this.shipComplete = shipComplete;
    return this;
  }

   /**
   * Get shipComplete
   * @return shipComplete
  **/
  @ApiModelProperty(value = "")
  public ShipCompleteEnum getShipComplete() {
    return shipComplete;
  }

  public void setShipComplete(ShipCompleteEnum shipComplete) {
    this.shipComplete = shipComplete;
  }

  public SalesOrderDto cancelBy(LocalDateTime cancelBy) {
    this.cancelBy = cancelBy;
    return this;
  }

   /**
   * Get cancelBy
   * @return cancelBy
  **/
  @ApiModelProperty(value = "")
  public LocalDateTime getCancelBy() {
    return cancelBy;
  }

  public void setCancelBy(LocalDateTime cancelBy) {
    this.cancelBy = cancelBy;
  }

  public SalesOrderDto canceled(Boolean canceled) {
    this.canceled = canceled;
    return this;
  }

   /**
   * Get canceled
   * @return canceled
  **/
  @ApiModelProperty(value = "")
  public Boolean isCanceled() {
    return canceled;
  }

  public void setCanceled(Boolean canceled) {
    this.canceled = canceled;
  }

  public SalesOrderDto preferredWarehouse(WarehouseIdDescriptionDto preferredWarehouse) {
    this.preferredWarehouse = preferredWarehouse;
    return this;
  }

   /**
   * Get preferredWarehouse
   * @return preferredWarehouse
  **/
  @ApiModelProperty(value = "")
  public WarehouseIdDescriptionDto getPreferredWarehouse() {
    return preferredWarehouse;
  }

  public void setPreferredWarehouse(WarehouseIdDescriptionDto preferredWarehouse) {
    this.preferredWarehouse = preferredWarehouse;
  }

  public SalesOrderDto shipVia(CarrierDescriptionDto shipVia) {
    this.shipVia = shipVia;
    return this;
  }

   /**
   * Get shipVia
   * @return shipVia
  **/
  @ApiModelProperty(value = "")
  public CarrierDescriptionDto getShipVia() {
    return shipVia;
  }

  public void setShipVia(CarrierDescriptionDto shipVia) {
    this.shipVia = shipVia;
  }

  public SalesOrderDto fobPoint(FOBPointDescriptionDto fobPoint) {
    this.fobPoint = fobPoint;
    return this;
  }

   /**
   * Get fobPoint
   * @return fobPoint
  **/
  @ApiModelProperty(value = "")
  public FOBPointDescriptionDto getFobPoint() {
    return fobPoint;
  }

  public void setFobPoint(FOBPointDescriptionDto fobPoint) {
    this.fobPoint = fobPoint;
  }

  public SalesOrderDto priority(Integer priority) {
    this.priority = priority;
    return this;
  }

   /**
   * Get priority
   * @return priority
  **/
  @ApiModelProperty(value = "")
  public Integer getPriority() {
    return priority;
  }

  public void setPriority(Integer priority) {
    this.priority = priority;
  }

  public SalesOrderDto shippingTerms(ShippingTermsDescriptionDto shippingTerms) {
    this.shippingTerms = shippingTerms;
    return this;
  }

   /**
   * Get shippingTerms
   * @return shippingTerms
  **/
  @ApiModelProperty(value = "")
  public ShippingTermsDescriptionDto getShippingTerms() {
    return shippingTerms;
  }

  public void setShippingTerms(ShippingTermsDescriptionDto shippingTerms) {
    this.shippingTerms = shippingTerms;
  }

  public SalesOrderDto shippingZone(ShippingZoneDescriptionDto shippingZone) {
    this.shippingZone = shippingZone;
    return this;
  }

   /**
   * Get shippingZone
   * @return shippingZone
  **/
  @ApiModelProperty(value = "")
  public ShippingZoneDescriptionDto getShippingZone() {
    return shippingZone;
  }

  public void setShippingZone(ShippingZoneDescriptionDto shippingZone) {
    this.shippingZone = shippingZone;
  }

  public SalesOrderDto residentialDelivery(Boolean residentialDelivery) {
    this.residentialDelivery = residentialDelivery;
    return this;
  }

   /**
   * Get residentialDelivery
   * @return residentialDelivery
  **/
  @ApiModelProperty(value = "")
  public Boolean isResidentialDelivery() {
    return residentialDelivery;
  }

  public void setResidentialDelivery(Boolean residentialDelivery) {
    this.residentialDelivery = residentialDelivery;
  }

  public SalesOrderDto saturdayDelivery(Boolean saturdayDelivery) {
    this.saturdayDelivery = saturdayDelivery;
    return this;
  }

   /**
   * Get saturdayDelivery
   * @return saturdayDelivery
  **/
  @ApiModelProperty(value = "")
  public Boolean isSaturdayDelivery() {
    return saturdayDelivery;
  }

  public void setSaturdayDelivery(Boolean saturdayDelivery) {
    this.saturdayDelivery = saturdayDelivery;
  }

  public SalesOrderDto insurance(Boolean insurance) {
    this.insurance = insurance;
    return this;
  }

   /**
   * Get insurance
   * @return insurance
  **/
  @ApiModelProperty(value = "")
  public Boolean isInsurance() {
    return insurance;
  }

  public void setInsurance(Boolean insurance) {
    this.insurance = insurance;
  }

  public SalesOrderDto transactionType(SigmaIntrastatTransactionDescriptionDto transactionType) {
    this.transactionType = transactionType;
    return this;
  }

   /**
   * Get transactionType
   * @return transactionType
  **/
  @ApiModelProperty(value = "")
  public SigmaIntrastatTransactionDescriptionDto getTransactionType() {
    return transactionType;
  }

  public void setTransactionType(SigmaIntrastatTransactionDescriptionDto transactionType) {
    this.transactionType = transactionType;
  }

  public SalesOrderDto lines(List<SalesOrderLineDto> lines) {
    this.lines = lines;
    return this;
  }

  public SalesOrderDto addLinesItem(SalesOrderLineDto linesItem) {
    if (this.lines == null) {
      this.lines = new ArrayList<>();
    }
    this.lines.add(linesItem);
    return this;
  }

   /**
   * Get lines
   * @return lines
  **/
  @ApiModelProperty(value = "")
  public List<SalesOrderLineDto> getLines() {
    return lines;
  }

  public void setLines(List<SalesOrderLineDto> lines) {
    this.lines = lines;
  }

  public SalesOrderDto orderType(String orderType) {
    this.orderType = orderType;
    return this;
  }

   /**
   * Get orderType
   * @return orderType
  **/
  @ApiModelProperty(value = "")
  public String getOrderType() {
    return orderType;
  }

  public void setOrderType(String orderType) {
    this.orderType = orderType;
  }

  public SalesOrderDto orderNo(String orderNo) {
    this.orderNo = orderNo;
    return this;
  }

   /**
   * Get orderNo
   * @return orderNo
  **/
  @ApiModelProperty(value = "")
  public String getOrderNo() {
    return orderNo;
  }

  public void setOrderNo(String orderNo) {
    this.orderNo = orderNo;
  }

  public SalesOrderDto status(StatusEnum status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @ApiModelProperty(value = "")
  public StatusEnum getStatus() {
    return status;
  }

  public void setStatus(StatusEnum status) {
    this.status = status;
  }

  public SalesOrderDto hold(Boolean hold) {
    this.hold = hold;
    return this;
  }

   /**
   * Get hold
   * @return hold
  **/
  @ApiModelProperty(value = "")
  public Boolean isHold() {
    return hold;
  }

  public void setHold(Boolean hold) {
    this.hold = hold;
  }

  public SalesOrderDto date(LocalDateTime date) {
    this.date = date;
    return this;
  }

   /**
   * Get date
   * @return date
  **/
  @ApiModelProperty(value = "")
  public LocalDateTime getDate() {
    return date;
  }

  public void setDate(LocalDateTime date) {
    this.date = date;
  }

  public SalesOrderDto requestOn(LocalDateTime requestOn) {
    this.requestOn = requestOn;
    return this;
  }

   /**
   * Get requestOn
   * @return requestOn
  **/
  @ApiModelProperty(value = "")
  public LocalDateTime getRequestOn() {
    return requestOn;
  }

  public void setRequestOn(LocalDateTime requestOn) {
    this.requestOn = requestOn;
  }

  public SalesOrderDto customerOrder(String customerOrder) {
    this.customerOrder = customerOrder;
    return this;
  }

   /**
   * Get customerOrder
   * @return customerOrder
  **/
  @ApiModelProperty(value = "")
  public String getCustomerOrder() {
    return customerOrder;
  }

  public void setCustomerOrder(String customerOrder) {
    this.customerOrder = customerOrder;
  }

  public SalesOrderDto customerRefNo(String customerRefNo) {
    this.customerRefNo = customerRefNo;
    return this;
  }

   /**
   * Get customerRefNo
   * @return customerRefNo
  **/
  @ApiModelProperty(value = "")
  public String getCustomerRefNo() {
    return customerRefNo;
  }

  public void setCustomerRefNo(String customerRefNo) {
    this.customerRefNo = customerRefNo;
  }

  public SalesOrderDto customer(CustomerDescriptionDto customer) {
    this.customer = customer;
    return this;
  }

   /**
   * Get customer
   * @return customer
  **/
  @ApiModelProperty(value = "")
  public CustomerDescriptionDto getCustomer() {
    return customer;
  }

  public void setCustomer(CustomerDescriptionDto customer) {
    this.customer = customer;
  }

  public SalesOrderDto location(LocationDescriptionDto location) {
    this.location = location;
    return this;
  }

   /**
   * Get location
   * @return location
  **/
  @ApiModelProperty(value = "")
  public LocationDescriptionDto getLocation() {
    return location;
  }

  public void setLocation(LocationDescriptionDto location) {
    this.location = location;
  }

  public SalesOrderDto currency(String currency) {
    this.currency = currency;
    return this;
  }

   /**
   * Get currency
   * @return currency
  **/
  @ApiModelProperty(value = "")
  public String getCurrency() {
    return currency;
  }

  public void setCurrency(String currency) {
    this.currency = currency;
  }

  public SalesOrderDto description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @ApiModelProperty(value = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public SalesOrderDto orderTotal(Double orderTotal) {
    this.orderTotal = orderTotal;
    return this;
  }

   /**
   * Get orderTotal
   * @return orderTotal
  **/
  @ApiModelProperty(value = "")
  public Double getOrderTotal() {
    return orderTotal;
  }

  public void setOrderTotal(Double orderTotal) {
    this.orderTotal = orderTotal;
  }

  public SalesOrderDto vatTaxableTotal(Double vatTaxableTotal) {
    this.vatTaxableTotal = vatTaxableTotal;
    return this;
  }

   /**
   * Get vatTaxableTotal
   * @return vatTaxableTotal
  **/
  @ApiModelProperty(value = "")
  public Double getVatTaxableTotal() {
    return vatTaxableTotal;
  }

  public void setVatTaxableTotal(Double vatTaxableTotal) {
    this.vatTaxableTotal = vatTaxableTotal;
  }

  public SalesOrderDto vatExemptTotal(Double vatExemptTotal) {
    this.vatExemptTotal = vatExemptTotal;
    return this;
  }

   /**
   * Get vatExemptTotal
   * @return vatExemptTotal
  **/
  @ApiModelProperty(value = "")
  public Double getVatExemptTotal() {
    return vatExemptTotal;
  }

  public void setVatExemptTotal(Double vatExemptTotal) {
    this.vatExemptTotal = vatExemptTotal;
  }

  public SalesOrderDto taxTotal(Double taxTotal) {
    this.taxTotal = taxTotal;
    return this;
  }

   /**
   * Get taxTotal
   * @return taxTotal
  **/
  @ApiModelProperty(value = "")
  public Double getTaxTotal() {
    return taxTotal;
  }

  public void setTaxTotal(Double taxTotal) {
    this.taxTotal = taxTotal;
  }

  public SalesOrderDto lastModifiedDateTime(LocalDateTime lastModifiedDateTime) {
    this.lastModifiedDateTime = lastModifiedDateTime;
    return this;
  }

   /**
   * Get lastModifiedDateTime
   * @return lastModifiedDateTime
  **/
  @ApiModelProperty(value = "")
  public LocalDateTime getLastModifiedDateTime() {
    return lastModifiedDateTime;
  }

  public void setLastModifiedDateTime(LocalDateTime lastModifiedDateTime) {
    this.lastModifiedDateTime = lastModifiedDateTime;
  }

  public SalesOrderDto branchNumber(BranchNumberDto branchNumber) {
    this.branchNumber = branchNumber;
    return this;
  }

   /**
   * Get branchNumber
   * @return branchNumber
  **/
  @ApiModelProperty(value = "")
  public BranchNumberDto getBranchNumber() {
    return branchNumber;
  }

  public void setBranchNumber(BranchNumberDto branchNumber) {
    this.branchNumber = branchNumber;
  }

  public SalesOrderDto note(String note) {
    this.note = note;
    return this;
  }

   /**
   * Get note
   * @return note
  **/
  @ApiModelProperty(value = "")
  public String getNote() {
    return note;
  }

  public void setNote(String note) {
    this.note = note;
  }

  public SalesOrderDto attachments(List<AttachmentDto> attachments) {
    this.attachments = attachments;
    return this;
  }

  public SalesOrderDto addAttachmentsItem(AttachmentDto attachmentsItem) {
    if (this.attachments == null) {
      this.attachments = new ArrayList<>();
    }
    this.attachments.add(attachmentsItem);
    return this;
  }

   /**
   * The data containing information about the document attachments
   * @return attachments
  **/
  @ApiModelProperty(value = "The data containing information about the document attachments")
  public List<AttachmentDto> getAttachments() {
    return attachments;
  }

  public void setAttachments(List<AttachmentDto> attachments) {
    this.attachments = attachments;
  }

  public SalesOrderDto extras(Map<String, Object> extras) {
    this.extras = extras;
    return this;
  }

  public SalesOrderDto putExtrasItem(String key, Object extrasItem) {
    if (this.extras == null) {
      this.extras = new HashMap<>();
    }
    this.extras.put(key, extrasItem);
    return this;
  }

   /**
   * Get extras
   * @return extras
  **/
  @ApiModelProperty(value = "")
  public Map<String, Object> getExtras() {
    return extras;
  }

  public void setExtras(Map<String, Object> extras) {
    this.extras = extras;
  }

  public SalesOrderDto errorInfo(String errorInfo) {
    this.errorInfo = errorInfo;
    return this;
  }

   /**
   * Get errorInfo
   * @return errorInfo
  **/
  @ApiModelProperty(value = "")
  public String getErrorInfo() {
    return errorInfo;
  }

  public void setErrorInfo(String errorInfo) {
    this.errorInfo = errorInfo;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SalesOrderDto salesOrderDto = (SalesOrderDto) o;
    return Objects.equals(this.project, salesOrderDto.project) &&
        Objects.equals(this.printDescriptionOnInvoice, salesOrderDto.printDescriptionOnInvoice) &&
        Objects.equals(this.printNoteOnExternalDocuments, salesOrderDto.printNoteOnExternalDocuments) &&
        Objects.equals(this.printNoteOnInternalDocuments, salesOrderDto.printNoteOnInternalDocuments) &&
        Objects.equals(this.soBillingContact, salesOrderDto.soBillingContact) &&
        Objects.equals(this.soBillingAddress, salesOrderDto.soBillingAddress) &&
        Objects.equals(this.customerVATZone, salesOrderDto.customerVATZone) &&
        Objects.equals(this.invoiceSeparately, salesOrderDto.invoiceSeparately) &&
        Objects.equals(this.invoiceNbr, salesOrderDto.invoiceNbr) &&
        Objects.equals(this.invoiceDate, salesOrderDto.invoiceDate) &&
        Objects.equals(this.terms, salesOrderDto.terms) &&
        Objects.equals(this.dueDate, salesOrderDto.dueDate) &&
        Objects.equals(this.cashDiscountDate, salesOrderDto.cashDiscountDate) &&
        Objects.equals(this.postPeriod, salesOrderDto.postPeriod) &&
        Objects.equals(this.salesPerson, salesOrderDto.salesPerson) &&
        Objects.equals(this.owner, salesOrderDto.owner) &&
        Objects.equals(this.origOrderType, salesOrderDto.origOrderType) &&
        Objects.equals(this.origOrderNbr, salesOrderDto.origOrderNbr) &&
        Objects.equals(this.soShippingContact, salesOrderDto.soShippingContact) &&
        Objects.equals(this.soShippingAddress, salesOrderDto.soShippingAddress) &&
        Objects.equals(this.schedShipment, salesOrderDto.schedShipment) &&
        Objects.equals(this.shipSeparately, salesOrderDto.shipSeparately) &&
        Objects.equals(this.shipComplete, salesOrderDto.shipComplete) &&
        Objects.equals(this.cancelBy, salesOrderDto.cancelBy) &&
        Objects.equals(this.canceled, salesOrderDto.canceled) &&
        Objects.equals(this.preferredWarehouse, salesOrderDto.preferredWarehouse) &&
        Objects.equals(this.shipVia, salesOrderDto.shipVia) &&
        Objects.equals(this.fobPoint, salesOrderDto.fobPoint) &&
        Objects.equals(this.priority, salesOrderDto.priority) &&
        Objects.equals(this.shippingTerms, salesOrderDto.shippingTerms) &&
        Objects.equals(this.shippingZone, salesOrderDto.shippingZone) &&
        Objects.equals(this.residentialDelivery, salesOrderDto.residentialDelivery) &&
        Objects.equals(this.saturdayDelivery, salesOrderDto.saturdayDelivery) &&
        Objects.equals(this.insurance, salesOrderDto.insurance) &&
        Objects.equals(this.transactionType, salesOrderDto.transactionType) &&
        Objects.equals(this.lines, salesOrderDto.lines) &&
        Objects.equals(this.orderType, salesOrderDto.orderType) &&
        Objects.equals(this.orderNo, salesOrderDto.orderNo) &&
        Objects.equals(this.status, salesOrderDto.status) &&
        Objects.equals(this.hold, salesOrderDto.hold) &&
        Objects.equals(this.date, salesOrderDto.date) &&
        Objects.equals(this.requestOn, salesOrderDto.requestOn) &&
        Objects.equals(this.customerOrder, salesOrderDto.customerOrder) &&
        Objects.equals(this.customerRefNo, salesOrderDto.customerRefNo) &&
        Objects.equals(this.customer, salesOrderDto.customer) &&
        Objects.equals(this.location, salesOrderDto.location) &&
        Objects.equals(this.currency, salesOrderDto.currency) &&
        Objects.equals(this.description, salesOrderDto.description) &&
        Objects.equals(this.orderTotal, salesOrderDto.orderTotal) &&
        Objects.equals(this.vatTaxableTotal, salesOrderDto.vatTaxableTotal) &&
        Objects.equals(this.vatExemptTotal, salesOrderDto.vatExemptTotal) &&
        Objects.equals(this.taxTotal, salesOrderDto.taxTotal) &&
        Objects.equals(this.lastModifiedDateTime, salesOrderDto.lastModifiedDateTime) &&
        Objects.equals(this.branchNumber, salesOrderDto.branchNumber) &&
        Objects.equals(this.note, salesOrderDto.note) &&
        Objects.equals(this.attachments, salesOrderDto.attachments) &&
        Objects.equals(this.extras, salesOrderDto.extras) &&
        Objects.equals(this.errorInfo, salesOrderDto.errorInfo);
  }

  @Override
  public int hashCode() {
    return Objects.hash(project, printDescriptionOnInvoice, printNoteOnExternalDocuments, printNoteOnInternalDocuments, soBillingContact, soBillingAddress, customerVATZone, invoiceSeparately, invoiceNbr, invoiceDate, terms, dueDate, cashDiscountDate, postPeriod, salesPerson, owner, origOrderType, origOrderNbr, soShippingContact, soShippingAddress, schedShipment, shipSeparately, shipComplete, cancelBy, canceled, preferredWarehouse, shipVia, fobPoint, priority, shippingTerms, shippingZone, residentialDelivery, saturdayDelivery, insurance, transactionType, lines, orderType, orderNo, status, hold, date, requestOn, customerOrder, customerRefNo, customer, location, currency, description, orderTotal, vatTaxableTotal, vatExemptTotal, taxTotal, lastModifiedDateTime, branchNumber, note, attachments, extras, errorInfo);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SalesOrderDto {\n");
    
    sb.append("    project: ").append(toIndentedString(project)).append("\n");
    sb.append("    printDescriptionOnInvoice: ").append(toIndentedString(printDescriptionOnInvoice)).append("\n");
    sb.append("    printNoteOnExternalDocuments: ").append(toIndentedString(printNoteOnExternalDocuments)).append("\n");
    sb.append("    printNoteOnInternalDocuments: ").append(toIndentedString(printNoteOnInternalDocuments)).append("\n");
    sb.append("    soBillingContact: ").append(toIndentedString(soBillingContact)).append("\n");
    sb.append("    soBillingAddress: ").append(toIndentedString(soBillingAddress)).append("\n");
    sb.append("    customerVATZone: ").append(toIndentedString(customerVATZone)).append("\n");
    sb.append("    invoiceSeparately: ").append(toIndentedString(invoiceSeparately)).append("\n");
    sb.append("    invoiceNbr: ").append(toIndentedString(invoiceNbr)).append("\n");
    sb.append("    invoiceDate: ").append(toIndentedString(invoiceDate)).append("\n");
    sb.append("    terms: ").append(toIndentedString(terms)).append("\n");
    sb.append("    dueDate: ").append(toIndentedString(dueDate)).append("\n");
    sb.append("    cashDiscountDate: ").append(toIndentedString(cashDiscountDate)).append("\n");
    sb.append("    postPeriod: ").append(toIndentedString(postPeriod)).append("\n");
    sb.append("    salesPerson: ").append(toIndentedString(salesPerson)).append("\n");
    sb.append("    owner: ").append(toIndentedString(owner)).append("\n");
    sb.append("    origOrderType: ").append(toIndentedString(origOrderType)).append("\n");
    sb.append("    origOrderNbr: ").append(toIndentedString(origOrderNbr)).append("\n");
    sb.append("    soShippingContact: ").append(toIndentedString(soShippingContact)).append("\n");
    sb.append("    soShippingAddress: ").append(toIndentedString(soShippingAddress)).append("\n");
    sb.append("    schedShipment: ").append(toIndentedString(schedShipment)).append("\n");
    sb.append("    shipSeparately: ").append(toIndentedString(shipSeparately)).append("\n");
    sb.append("    shipComplete: ").append(toIndentedString(shipComplete)).append("\n");
    sb.append("    cancelBy: ").append(toIndentedString(cancelBy)).append("\n");
    sb.append("    canceled: ").append(toIndentedString(canceled)).append("\n");
    sb.append("    preferredWarehouse: ").append(toIndentedString(preferredWarehouse)).append("\n");
    sb.append("    shipVia: ").append(toIndentedString(shipVia)).append("\n");
    sb.append("    fobPoint: ").append(toIndentedString(fobPoint)).append("\n");
    sb.append("    priority: ").append(toIndentedString(priority)).append("\n");
    sb.append("    shippingTerms: ").append(toIndentedString(shippingTerms)).append("\n");
    sb.append("    shippingZone: ").append(toIndentedString(shippingZone)).append("\n");
    sb.append("    residentialDelivery: ").append(toIndentedString(residentialDelivery)).append("\n");
    sb.append("    saturdayDelivery: ").append(toIndentedString(saturdayDelivery)).append("\n");
    sb.append("    insurance: ").append(toIndentedString(insurance)).append("\n");
    sb.append("    transactionType: ").append(toIndentedString(transactionType)).append("\n");
    sb.append("    lines: ").append(toIndentedString(lines)).append("\n");
    sb.append("    orderType: ").append(toIndentedString(orderType)).append("\n");
    sb.append("    orderNo: ").append(toIndentedString(orderNo)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    hold: ").append(toIndentedString(hold)).append("\n");
    sb.append("    date: ").append(toIndentedString(date)).append("\n");
    sb.append("    requestOn: ").append(toIndentedString(requestOn)).append("\n");
    sb.append("    customerOrder: ").append(toIndentedString(customerOrder)).append("\n");
    sb.append("    customerRefNo: ").append(toIndentedString(customerRefNo)).append("\n");
    sb.append("    customer: ").append(toIndentedString(customer)).append("\n");
    sb.append("    location: ").append(toIndentedString(location)).append("\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    orderTotal: ").append(toIndentedString(orderTotal)).append("\n");
    sb.append("    vatTaxableTotal: ").append(toIndentedString(vatTaxableTotal)).append("\n");
    sb.append("    vatExemptTotal: ").append(toIndentedString(vatExemptTotal)).append("\n");
    sb.append("    taxTotal: ").append(toIndentedString(taxTotal)).append("\n");
    sb.append("    lastModifiedDateTime: ").append(toIndentedString(lastModifiedDateTime)).append("\n");
    sb.append("    branchNumber: ").append(toIndentedString(branchNumber)).append("\n");
    sb.append("    note: ").append(toIndentedString(note)).append("\n");
    sb.append("    attachments: ").append(toIndentedString(attachments)).append("\n");
    sb.append("    extras: ").append(toIndentedString(extras)).append("\n");
    sb.append("    errorInfo: ").append(toIndentedString(errorInfo)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

