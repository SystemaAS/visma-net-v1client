/*
 * Visma Net API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 6.13.03.0008
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package no.systema.visma.v1client.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.List;
import no.systema.visma.v1client.model.AttributeIdValueDto;
import no.systema.visma.v1client.model.ContractTemplateIdDescriptionDto;
import no.systema.visma.v1client.model.CustomerContractDetailsDto;
import no.systema.visma.v1client.model.CustomerContractSummaryDto;
import no.systema.visma.v1client.model.CustomerNumberDto;
import no.systema.visma.v1client.model.LocationNameDescriptionDto;

/**
 * This class represents a CustomerContract in CustomerContractController. Used for getting data.
 */
@ApiModel(description = "This class represents a CustomerContract in CustomerContractController. Used for getting data.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-04-16T15:04:09.234+02:00")
public class CustomerContractDto {
  @JsonProperty("contractId")
  private String contractId = null;

  @JsonProperty("contractTemplate")
  private ContractTemplateIdDescriptionDto contractTemplate = null;

  /**
   * Gets or Sets status
   */
  public enum StatusEnum {
    DRAFT("Draft"),
    
    INAPPROVAL("InApproval"),
    
    ACTIVE("Active"),
    
    EXPIRED("Expired"),
    
    CANCELED("Canceled"),
    
    COMPLETED("Completed"),
    
    INUPGRADE("InUpgrade"),
    
    PENDINGACTIVATION("PendingActivation");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static StatusEnum fromValue(String text) {
      for (StatusEnum b : StatusEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("status")
  private StatusEnum status = null;

  @JsonProperty("customer")
  private CustomerNumberDto customer = null;

  @JsonProperty("location")
  private LocationNameDescriptionDto location = null;

  @JsonProperty("description")
  private String description = null;

  @JsonProperty("balance")
  private Double balance = null;

  @JsonProperty("lastModifiedDateTime")
  private LocalDateTime lastModifiedDateTime = null;

  @JsonProperty("summary")
  private CustomerContractSummaryDto summary = null;

  @JsonProperty("details")
  private CustomerContractDetailsDto details = null;

  @JsonProperty("attributes")
  private List<AttributeIdValueDto> attributes = null;

  public CustomerContractDto contractId(String contractId) {
    this.contractId = contractId;
    return this;
  }

   /**
   * Get contractId
   * @return contractId
  **/
  @ApiModelProperty(value = "")
  public String getContractId() {
    return contractId;
  }

  public void setContractId(String contractId) {
    this.contractId = contractId;
  }

  public CustomerContractDto contractTemplate(ContractTemplateIdDescriptionDto contractTemplate) {
    this.contractTemplate = contractTemplate;
    return this;
  }

   /**
   * Get contractTemplate
   * @return contractTemplate
  **/
  @ApiModelProperty(value = "")
  public ContractTemplateIdDescriptionDto getContractTemplate() {
    return contractTemplate;
  }

  public void setContractTemplate(ContractTemplateIdDescriptionDto contractTemplate) {
    this.contractTemplate = contractTemplate;
  }

  public CustomerContractDto status(StatusEnum status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @ApiModelProperty(value = "")
  public StatusEnum getStatus() {
    return status;
  }

  public void setStatus(StatusEnum status) {
    this.status = status;
  }

  public CustomerContractDto customer(CustomerNumberDto customer) {
    this.customer = customer;
    return this;
  }

   /**
   * Get customer
   * @return customer
  **/
  @ApiModelProperty(value = "")
  public CustomerNumberDto getCustomer() {
    return customer;
  }

  public void setCustomer(CustomerNumberDto customer) {
    this.customer = customer;
  }

  public CustomerContractDto location(LocationNameDescriptionDto location) {
    this.location = location;
    return this;
  }

   /**
   * Get location
   * @return location
  **/
  @ApiModelProperty(value = "")
  public LocationNameDescriptionDto getLocation() {
    return location;
  }

  public void setLocation(LocationNameDescriptionDto location) {
    this.location = location;
  }

  public CustomerContractDto description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @ApiModelProperty(value = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public CustomerContractDto balance(Double balance) {
    this.balance = balance;
    return this;
  }

   /**
   * Get balance
   * @return balance
  **/
  @ApiModelProperty(value = "")
  public Double getBalance() {
    return balance;
  }

  public void setBalance(Double balance) {
    this.balance = balance;
  }

  public CustomerContractDto lastModifiedDateTime(LocalDateTime lastModifiedDateTime) {
    this.lastModifiedDateTime = lastModifiedDateTime;
    return this;
  }

   /**
   * Get lastModifiedDateTime
   * @return lastModifiedDateTime
  **/
  @ApiModelProperty(value = "")
  public LocalDateTime getLastModifiedDateTime() {
    return lastModifiedDateTime;
  }

  public void setLastModifiedDateTime(LocalDateTime lastModifiedDateTime) {
    this.lastModifiedDateTime = lastModifiedDateTime;
  }

  public CustomerContractDto summary(CustomerContractSummaryDto summary) {
    this.summary = summary;
    return this;
  }

   /**
   * Get summary
   * @return summary
  **/
  @ApiModelProperty(value = "")
  public CustomerContractSummaryDto getSummary() {
    return summary;
  }

  public void setSummary(CustomerContractSummaryDto summary) {
    this.summary = summary;
  }

  public CustomerContractDto details(CustomerContractDetailsDto details) {
    this.details = details;
    return this;
  }

   /**
   * Get details
   * @return details
  **/
  @ApiModelProperty(value = "")
  public CustomerContractDetailsDto getDetails() {
    return details;
  }

  public void setDetails(CustomerContractDetailsDto details) {
    this.details = details;
  }

  public CustomerContractDto attributes(List<AttributeIdValueDto> attributes) {
    this.attributes = attributes;
    return this;
  }

  public CustomerContractDto addAttributesItem(AttributeIdValueDto attributesItem) {
    if (this.attributes == null) {
      this.attributes = new ArrayList<>();
    }
    this.attributes.add(attributesItem);
    return this;
  }

   /**
   * Get attributes
   * @return attributes
  **/
  @ApiModelProperty(value = "")
  public List<AttributeIdValueDto> getAttributes() {
    return attributes;
  }

  public void setAttributes(List<AttributeIdValueDto> attributes) {
    this.attributes = attributes;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CustomerContractDto customerContractDto = (CustomerContractDto) o;
    return Objects.equals(this.contractId, customerContractDto.contractId) &&
        Objects.equals(this.contractTemplate, customerContractDto.contractTemplate) &&
        Objects.equals(this.status, customerContractDto.status) &&
        Objects.equals(this.customer, customerContractDto.customer) &&
        Objects.equals(this.location, customerContractDto.location) &&
        Objects.equals(this.description, customerContractDto.description) &&
        Objects.equals(this.balance, customerContractDto.balance) &&
        Objects.equals(this.lastModifiedDateTime, customerContractDto.lastModifiedDateTime) &&
        Objects.equals(this.summary, customerContractDto.summary) &&
        Objects.equals(this.details, customerContractDto.details) &&
        Objects.equals(this.attributes, customerContractDto.attributes);
  }

  @Override
  public int hashCode() {
    return Objects.hash(contractId, contractTemplate, status, customer, location, description, balance, lastModifiedDateTime, summary, details, attributes);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CustomerContractDto {\n");
    
    sb.append("    contractId: ").append(toIndentedString(contractId)).append("\n");
    sb.append("    contractTemplate: ").append(toIndentedString(contractTemplate)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    customer: ").append(toIndentedString(customer)).append("\n");
    sb.append("    location: ").append(toIndentedString(location)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    balance: ").append(toIndentedString(balance)).append("\n");
    sb.append("    lastModifiedDateTime: ").append(toIndentedString(lastModifiedDateTime)).append("\n");
    sb.append("    summary: ").append(toIndentedString(summary)).append("\n");
    sb.append("    details: ").append(toIndentedString(details)).append("\n");
    sb.append("    attributes: ").append(toIndentedString(attributes)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

