/*
 * Visma Net API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 6.13.03.0008
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package no.systema.visma.v1client.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.time.LocalDateTime;
import no.systema.visma.v1client.model.CustomerNumberDto;
import no.systema.visma.v1client.model.EmployeeNumberNameDto;
import no.systema.visma.v1client.model.InventoryNumberDescriptionDto;
import no.systema.visma.v1client.model.LocationNameDescriptionDto;
import no.systema.visma.v1client.model.SalesPersonDto;

/**
 * This class represents the CustomerContractSummary in CustomerContractController. Used for getting data.
 */
@ApiModel(description = "This class represents the CustomerContractSummary in CustomerContractController. Used for getting data.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-04-16T15:04:09.234+02:00")
public class CustomerContractSummaryDto {
  @JsonProperty("setupDate")
  private LocalDateTime setupDate = null;

  @JsonProperty("activationDate")
  private LocalDateTime activationDate = null;

  @JsonProperty("expirationDate")
  private LocalDateTime expirationDate = null;

  @JsonProperty("terminationDate")
  private LocalDateTime terminationDate = null;

  @JsonProperty("massRenewal")
  private Boolean massRenewal = null;

  @JsonProperty("renewalPoint")
  private Integer renewalPoint = null;

  @JsonProperty("gracePeriod")
  private Integer gracePeriod = null;

  @JsonProperty("currency")
  private String currency = null;

  @JsonProperty("invoicingScheduleStartsOn")
  private LocalDateTime invoicingScheduleStartsOn = null;

  /**
   * Gets or Sets invoicingPeriod
   */
  public enum InvoicingPeriodEnum {
    STATEMENT("Statement"),
    
    QUARTERLY("Quarterly"),
    
    MONTHLY("Monthly"),
    
    ANNUAL("Annual"),
    
    SEMIANNUAL("SemiAnnual"),
    
    WEEKLY("Weekly"),
    
    ONDEMAND("OnDemand");

    private String value;

    InvoicingPeriodEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static InvoicingPeriodEnum fromValue(String text) {
      for (InvoicingPeriodEnum b : InvoicingPeriodEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("invoicingPeriod")
  private InvoicingPeriodEnum invoicingPeriod = null;

  @JsonProperty("lastInvoicingDate")
  private LocalDateTime lastInvoicingDate = null;

  @JsonProperty("nextInvoicingDate")
  private LocalDateTime nextInvoicingDate = null;

  /**
   * Gets or Sets invoiceTo
   */
  public enum InvoiceToEnum {
    PARENTACCOUNT("ParentAccount"),
    
    CUSTOMERACCOUNT("CustomerAccount"),
    
    SPECIFICACCOUNT("SpecificAccount");

    private String value;

    InvoiceToEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static InvoiceToEnum fromValue(String text) {
      for (InvoiceToEnum b : InvoiceToEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("invoiceTo")
  private InvoiceToEnum invoiceTo = null;

  @JsonProperty("invoiceAccount")
  private CustomerNumberDto invoiceAccount = null;

  @JsonProperty("invoiceLocation")
  private LocationNameDescriptionDto invoiceLocation = null;

  @JsonProperty("owner")
  private EmployeeNumberNameDto owner = null;

  @JsonProperty("salesPerson")
  private SalesPersonDto salesPerson = null;

  @JsonProperty("caseCountItem")
  private InventoryNumberDescriptionDto caseCountItem = null;

  public CustomerContractSummaryDto setupDate(LocalDateTime setupDate) {
    this.setupDate = setupDate;
    return this;
  }

   /**
   * Get setupDate
   * @return setupDate
  **/
  @ApiModelProperty(value = "")
  public LocalDateTime getSetupDate() {
    return setupDate;
  }

  public void setSetupDate(LocalDateTime setupDate) {
    this.setupDate = setupDate;
  }

  public CustomerContractSummaryDto activationDate(LocalDateTime activationDate) {
    this.activationDate = activationDate;
    return this;
  }

   /**
   * Get activationDate
   * @return activationDate
  **/
  @ApiModelProperty(value = "")
  public LocalDateTime getActivationDate() {
    return activationDate;
  }

  public void setActivationDate(LocalDateTime activationDate) {
    this.activationDate = activationDate;
  }

  public CustomerContractSummaryDto expirationDate(LocalDateTime expirationDate) {
    this.expirationDate = expirationDate;
    return this;
  }

   /**
   * Get expirationDate
   * @return expirationDate
  **/
  @ApiModelProperty(value = "")
  public LocalDateTime getExpirationDate() {
    return expirationDate;
  }

  public void setExpirationDate(LocalDateTime expirationDate) {
    this.expirationDate = expirationDate;
  }

  public CustomerContractSummaryDto terminationDate(LocalDateTime terminationDate) {
    this.terminationDate = terminationDate;
    return this;
  }

   /**
   * Get terminationDate
   * @return terminationDate
  **/
  @ApiModelProperty(value = "")
  public LocalDateTime getTerminationDate() {
    return terminationDate;
  }

  public void setTerminationDate(LocalDateTime terminationDate) {
    this.terminationDate = terminationDate;
  }

  public CustomerContractSummaryDto massRenewal(Boolean massRenewal) {
    this.massRenewal = massRenewal;
    return this;
  }

   /**
   * Get massRenewal
   * @return massRenewal
  **/
  @ApiModelProperty(value = "")
  public Boolean isMassRenewal() {
    return massRenewal;
  }

  public void setMassRenewal(Boolean massRenewal) {
    this.massRenewal = massRenewal;
  }

  public CustomerContractSummaryDto renewalPoint(Integer renewalPoint) {
    this.renewalPoint = renewalPoint;
    return this;
  }

   /**
   * Get renewalPoint
   * @return renewalPoint
  **/
  @ApiModelProperty(value = "")
  public Integer getRenewalPoint() {
    return renewalPoint;
  }

  public void setRenewalPoint(Integer renewalPoint) {
    this.renewalPoint = renewalPoint;
  }

  public CustomerContractSummaryDto gracePeriod(Integer gracePeriod) {
    this.gracePeriod = gracePeriod;
    return this;
  }

   /**
   * Get gracePeriod
   * @return gracePeriod
  **/
  @ApiModelProperty(value = "")
  public Integer getGracePeriod() {
    return gracePeriod;
  }

  public void setGracePeriod(Integer gracePeriod) {
    this.gracePeriod = gracePeriod;
  }

  public CustomerContractSummaryDto currency(String currency) {
    this.currency = currency;
    return this;
  }

   /**
   * Get currency
   * @return currency
  **/
  @ApiModelProperty(value = "")
  public String getCurrency() {
    return currency;
  }

  public void setCurrency(String currency) {
    this.currency = currency;
  }

  public CustomerContractSummaryDto invoicingScheduleStartsOn(LocalDateTime invoicingScheduleStartsOn) {
    this.invoicingScheduleStartsOn = invoicingScheduleStartsOn;
    return this;
  }

   /**
   * Get invoicingScheduleStartsOn
   * @return invoicingScheduleStartsOn
  **/
  @ApiModelProperty(value = "")
  public LocalDateTime getInvoicingScheduleStartsOn() {
    return invoicingScheduleStartsOn;
  }

  public void setInvoicingScheduleStartsOn(LocalDateTime invoicingScheduleStartsOn) {
    this.invoicingScheduleStartsOn = invoicingScheduleStartsOn;
  }

  public CustomerContractSummaryDto invoicingPeriod(InvoicingPeriodEnum invoicingPeriod) {
    this.invoicingPeriod = invoicingPeriod;
    return this;
  }

   /**
   * Get invoicingPeriod
   * @return invoicingPeriod
  **/
  @ApiModelProperty(value = "")
  public InvoicingPeriodEnum getInvoicingPeriod() {
    return invoicingPeriod;
  }

  public void setInvoicingPeriod(InvoicingPeriodEnum invoicingPeriod) {
    this.invoicingPeriod = invoicingPeriod;
  }

  public CustomerContractSummaryDto lastInvoicingDate(LocalDateTime lastInvoicingDate) {
    this.lastInvoicingDate = lastInvoicingDate;
    return this;
  }

   /**
   * Get lastInvoicingDate
   * @return lastInvoicingDate
  **/
  @ApiModelProperty(value = "")
  public LocalDateTime getLastInvoicingDate() {
    return lastInvoicingDate;
  }

  public void setLastInvoicingDate(LocalDateTime lastInvoicingDate) {
    this.lastInvoicingDate = lastInvoicingDate;
  }

  public CustomerContractSummaryDto nextInvoicingDate(LocalDateTime nextInvoicingDate) {
    this.nextInvoicingDate = nextInvoicingDate;
    return this;
  }

   /**
   * Get nextInvoicingDate
   * @return nextInvoicingDate
  **/
  @ApiModelProperty(value = "")
  public LocalDateTime getNextInvoicingDate() {
    return nextInvoicingDate;
  }

  public void setNextInvoicingDate(LocalDateTime nextInvoicingDate) {
    this.nextInvoicingDate = nextInvoicingDate;
  }

  public CustomerContractSummaryDto invoiceTo(InvoiceToEnum invoiceTo) {
    this.invoiceTo = invoiceTo;
    return this;
  }

   /**
   * Get invoiceTo
   * @return invoiceTo
  **/
  @ApiModelProperty(value = "")
  public InvoiceToEnum getInvoiceTo() {
    return invoiceTo;
  }

  public void setInvoiceTo(InvoiceToEnum invoiceTo) {
    this.invoiceTo = invoiceTo;
  }

  public CustomerContractSummaryDto invoiceAccount(CustomerNumberDto invoiceAccount) {
    this.invoiceAccount = invoiceAccount;
    return this;
  }

   /**
   * Get invoiceAccount
   * @return invoiceAccount
  **/
  @ApiModelProperty(value = "")
  public CustomerNumberDto getInvoiceAccount() {
    return invoiceAccount;
  }

  public void setInvoiceAccount(CustomerNumberDto invoiceAccount) {
    this.invoiceAccount = invoiceAccount;
  }

  public CustomerContractSummaryDto invoiceLocation(LocationNameDescriptionDto invoiceLocation) {
    this.invoiceLocation = invoiceLocation;
    return this;
  }

   /**
   * Get invoiceLocation
   * @return invoiceLocation
  **/
  @ApiModelProperty(value = "")
  public LocationNameDescriptionDto getInvoiceLocation() {
    return invoiceLocation;
  }

  public void setInvoiceLocation(LocationNameDescriptionDto invoiceLocation) {
    this.invoiceLocation = invoiceLocation;
  }

  public CustomerContractSummaryDto owner(EmployeeNumberNameDto owner) {
    this.owner = owner;
    return this;
  }

   /**
   * Get owner
   * @return owner
  **/
  @ApiModelProperty(value = "")
  public EmployeeNumberNameDto getOwner() {
    return owner;
  }

  public void setOwner(EmployeeNumberNameDto owner) {
    this.owner = owner;
  }

  public CustomerContractSummaryDto salesPerson(SalesPersonDto salesPerson) {
    this.salesPerson = salesPerson;
    return this;
  }

   /**
   * Get salesPerson
   * @return salesPerson
  **/
  @ApiModelProperty(value = "")
  public SalesPersonDto getSalesPerson() {
    return salesPerson;
  }

  public void setSalesPerson(SalesPersonDto salesPerson) {
    this.salesPerson = salesPerson;
  }

  public CustomerContractSummaryDto caseCountItem(InventoryNumberDescriptionDto caseCountItem) {
    this.caseCountItem = caseCountItem;
    return this;
  }

   /**
   * Get caseCountItem
   * @return caseCountItem
  **/
  @ApiModelProperty(value = "")
  public InventoryNumberDescriptionDto getCaseCountItem() {
    return caseCountItem;
  }

  public void setCaseCountItem(InventoryNumberDescriptionDto caseCountItem) {
    this.caseCountItem = caseCountItem;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CustomerContractSummaryDto customerContractSummaryDto = (CustomerContractSummaryDto) o;
    return Objects.equals(this.setupDate, customerContractSummaryDto.setupDate) &&
        Objects.equals(this.activationDate, customerContractSummaryDto.activationDate) &&
        Objects.equals(this.expirationDate, customerContractSummaryDto.expirationDate) &&
        Objects.equals(this.terminationDate, customerContractSummaryDto.terminationDate) &&
        Objects.equals(this.massRenewal, customerContractSummaryDto.massRenewal) &&
        Objects.equals(this.renewalPoint, customerContractSummaryDto.renewalPoint) &&
        Objects.equals(this.gracePeriod, customerContractSummaryDto.gracePeriod) &&
        Objects.equals(this.currency, customerContractSummaryDto.currency) &&
        Objects.equals(this.invoicingScheduleStartsOn, customerContractSummaryDto.invoicingScheduleStartsOn) &&
        Objects.equals(this.invoicingPeriod, customerContractSummaryDto.invoicingPeriod) &&
        Objects.equals(this.lastInvoicingDate, customerContractSummaryDto.lastInvoicingDate) &&
        Objects.equals(this.nextInvoicingDate, customerContractSummaryDto.nextInvoicingDate) &&
        Objects.equals(this.invoiceTo, customerContractSummaryDto.invoiceTo) &&
        Objects.equals(this.invoiceAccount, customerContractSummaryDto.invoiceAccount) &&
        Objects.equals(this.invoiceLocation, customerContractSummaryDto.invoiceLocation) &&
        Objects.equals(this.owner, customerContractSummaryDto.owner) &&
        Objects.equals(this.salesPerson, customerContractSummaryDto.salesPerson) &&
        Objects.equals(this.caseCountItem, customerContractSummaryDto.caseCountItem);
  }

  @Override
  public int hashCode() {
    return Objects.hash(setupDate, activationDate, expirationDate, terminationDate, massRenewal, renewalPoint, gracePeriod, currency, invoicingScheduleStartsOn, invoicingPeriod, lastInvoicingDate, nextInvoicingDate, invoiceTo, invoiceAccount, invoiceLocation, owner, salesPerson, caseCountItem);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CustomerContractSummaryDto {\n");
    
    sb.append("    setupDate: ").append(toIndentedString(setupDate)).append("\n");
    sb.append("    activationDate: ").append(toIndentedString(activationDate)).append("\n");
    sb.append("    expirationDate: ").append(toIndentedString(expirationDate)).append("\n");
    sb.append("    terminationDate: ").append(toIndentedString(terminationDate)).append("\n");
    sb.append("    massRenewal: ").append(toIndentedString(massRenewal)).append("\n");
    sb.append("    renewalPoint: ").append(toIndentedString(renewalPoint)).append("\n");
    sb.append("    gracePeriod: ").append(toIndentedString(gracePeriod)).append("\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    invoicingScheduleStartsOn: ").append(toIndentedString(invoicingScheduleStartsOn)).append("\n");
    sb.append("    invoicingPeriod: ").append(toIndentedString(invoicingPeriod)).append("\n");
    sb.append("    lastInvoicingDate: ").append(toIndentedString(lastInvoicingDate)).append("\n");
    sb.append("    nextInvoicingDate: ").append(toIndentedString(nextInvoicingDate)).append("\n");
    sb.append("    invoiceTo: ").append(toIndentedString(invoiceTo)).append("\n");
    sb.append("    invoiceAccount: ").append(toIndentedString(invoiceAccount)).append("\n");
    sb.append("    invoiceLocation: ").append(toIndentedString(invoiceLocation)).append("\n");
    sb.append("    owner: ").append(toIndentedString(owner)).append("\n");
    sb.append("    salesPerson: ").append(toIndentedString(salesPerson)).append("\n");
    sb.append("    caseCountItem: ").append(toIndentedString(caseCountItem)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

