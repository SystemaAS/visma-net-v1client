/*
 * Visma Net API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 6.13.03.0008
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package no.systema.visma.v1client.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import no.systema.visma.v1client.model.AccountNumberDto;
import no.systema.visma.v1client.model.AttachmentDto;
import no.systema.visma.v1client.model.BranchNumberDto;
import no.systema.visma.v1client.model.SubAccountDto;
import no.systema.visma.v1client.model.VatCodeDto;

/**
 * CustomerOverdueChargeLineDto
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-04-16T15:04:09.234+02:00")
public class CustomerOverdueChargeLineDto {
  @JsonProperty("attachments")
  private List<AttachmentDto> attachments = null;

  @JsonProperty("lineNumber")
  private Integer lineNumber = null;

  @JsonProperty("inventoryNumber")
  private String inventoryNumber = null;

  @JsonProperty("description")
  private String description = null;

  @JsonProperty("quantity")
  private Double quantity = null;

  @JsonProperty("unitPrice")
  private Double unitPrice = null;

  @JsonProperty("unitPriceInCurrency")
  private Double unitPriceInCurrency = null;

  @JsonProperty("manualAmount")
  private Double manualAmount = null;

  @JsonProperty("manualAmountInCurrency")
  private Double manualAmountInCurrency = null;

  @JsonProperty("amount")
  private Double amount = null;

  @JsonProperty("amountInCurrency")
  private Double amountInCurrency = null;

  @JsonProperty("account")
  private AccountNumberDto account = null;

  @JsonProperty("vatCode")
  private VatCodeDto vatCode = null;

  @JsonProperty("uom")
  private String uom = null;

  @JsonProperty("discountPercent")
  private Double discountPercent = null;

  @JsonProperty("discountAmount")
  private Double discountAmount = null;

  @JsonProperty("discountAmountInCurrency")
  private Double discountAmountInCurrency = null;

  @JsonProperty("manualDiscount")
  private Boolean manualDiscount = null;

  @JsonProperty("subaccount")
  private SubAccountDto subaccount = null;

  @JsonProperty("salesperson")
  private String salesperson = null;

  @JsonProperty("deferralSchedule")
  private Integer deferralSchedule = null;

  @JsonProperty("deferralCode")
  private String deferralCode = null;

  @JsonProperty("discountCode")
  private String discountCode = null;

  @JsonProperty("note")
  private String note = null;

  @JsonProperty("branchNumber")
  private BranchNumberDto branchNumber = null;

  public CustomerOverdueChargeLineDto attachments(List<AttachmentDto> attachments) {
    this.attachments = attachments;
    return this;
  }

  public CustomerOverdueChargeLineDto addAttachmentsItem(AttachmentDto attachmentsItem) {
    if (this.attachments == null) {
      this.attachments = new ArrayList<>();
    }
    this.attachments.add(attachmentsItem);
    return this;
  }

   /**
   * Get attachments
   * @return attachments
  **/
  @ApiModelProperty(value = "")
  public List<AttachmentDto> getAttachments() {
    return attachments;
  }

  public void setAttachments(List<AttachmentDto> attachments) {
    this.attachments = attachments;
  }

  public CustomerOverdueChargeLineDto lineNumber(Integer lineNumber) {
    this.lineNumber = lineNumber;
    return this;
  }

   /**
   * Get lineNumber
   * @return lineNumber
  **/
  @ApiModelProperty(value = "")
  public Integer getLineNumber() {
    return lineNumber;
  }

  public void setLineNumber(Integer lineNumber) {
    this.lineNumber = lineNumber;
  }

  public CustomerOverdueChargeLineDto inventoryNumber(String inventoryNumber) {
    this.inventoryNumber = inventoryNumber;
    return this;
  }

   /**
   * Get inventoryNumber
   * @return inventoryNumber
  **/
  @ApiModelProperty(value = "")
  public String getInventoryNumber() {
    return inventoryNumber;
  }

  public void setInventoryNumber(String inventoryNumber) {
    this.inventoryNumber = inventoryNumber;
  }

  public CustomerOverdueChargeLineDto description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Any comments relevant to the transaction. The alphanumeric string may contain up to 30 characters.
   * @return description
  **/
  @ApiModelProperty(value = "Any comments relevant to the transaction. The alphanumeric string may contain up to 30 characters.")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public CustomerOverdueChargeLineDto quantity(Double quantity) {
    this.quantity = quantity;
    return this;
  }

   /**
   * Get quantity
   * @return quantity
  **/
  @ApiModelProperty(value = "")
  public Double getQuantity() {
    return quantity;
  }

  public void setQuantity(Double quantity) {
    this.quantity = quantity;
  }

  public CustomerOverdueChargeLineDto unitPrice(Double unitPrice) {
    this.unitPrice = unitPrice;
    return this;
  }

   /**
   * The unit price set for the item or service. If you want to update the unit price  automatically to the current value(that is, the applicable sales or default price),  you can use the Recalculate Prices and Discounts action.If you have modified  the unit price and saved the document, the value will not be updated by the  system if you change the document date.
   * @return unitPrice
  **/
  @ApiModelProperty(value = "The unit price set for the item or service. If you want to update the unit price  automatically to the current value(that is, the applicable sales or default price),  you can use the Recalculate Prices and Discounts action.If you have modified  the unit price and saved the document, the value will not be updated by the  system if you change the document date.")
  public Double getUnitPrice() {
    return unitPrice;
  }

  public void setUnitPrice(Double unitPrice) {
    this.unitPrice = unitPrice;
  }

  public CustomerOverdueChargeLineDto unitPriceInCurrency(Double unitPriceInCurrency) {
    this.unitPriceInCurrency = unitPriceInCurrency;
    return this;
  }

   /**
   * Get unitPriceInCurrency
   * @return unitPriceInCurrency
  **/
  @ApiModelProperty(value = "")
  public Double getUnitPriceInCurrency() {
    return unitPriceInCurrency;
  }

  public void setUnitPriceInCurrency(Double unitPriceInCurrency) {
    this.unitPriceInCurrency = unitPriceInCurrency;
  }

  public CustomerOverdueChargeLineDto manualAmount(Double manualAmount) {
    this.manualAmount = manualAmount;
    return this;
  }

   /**
   * Get manualAmount
   * @return manualAmount
  **/
  @ApiModelProperty(value = "")
  public Double getManualAmount() {
    return manualAmount;
  }

  public void setManualAmount(Double manualAmount) {
    this.manualAmount = manualAmount;
  }

  public CustomerOverdueChargeLineDto manualAmountInCurrency(Double manualAmountInCurrency) {
    this.manualAmountInCurrency = manualAmountInCurrency;
    return this;
  }

   /**
   * Get manualAmountInCurrency
   * @return manualAmountInCurrency
  **/
  @ApiModelProperty(value = "")
  public Double getManualAmountInCurrency() {
    return manualAmountInCurrency;
  }

  public void setManualAmountInCurrency(Double manualAmountInCurrency) {
    this.manualAmountInCurrency = manualAmountInCurrency;
  }

  public CustomerOverdueChargeLineDto amount(Double amount) {
    this.amount = amount;
    return this;
  }

   /**
   * The amount after the discount has been applied. The value of this read-only box  is calculated automatically by deducting the discount amount from the extended price.
   * @return amount
  **/
  @ApiModelProperty(value = "The amount after the discount has been applied. The value of this read-only box  is calculated automatically by deducting the discount amount from the extended price.")
  public Double getAmount() {
    return amount;
  }

  public void setAmount(Double amount) {
    this.amount = amount;
  }

  public CustomerOverdueChargeLineDto amountInCurrency(Double amountInCurrency) {
    this.amountInCurrency = amountInCurrency;
    return this;
  }

   /**
   * Get amountInCurrency
   * @return amountInCurrency
  **/
  @ApiModelProperty(value = "")
  public Double getAmountInCurrency() {
    return amountInCurrency;
  }

  public void setAmountInCurrency(Double amountInCurrency) {
    this.amountInCurrency = amountInCurrency;
  }

  public CustomerOverdueChargeLineDto account(AccountNumberDto account) {
    this.account = account;
    return this;
  }

   /**
   * Get account
   * @return account
  **/
  @ApiModelProperty(value = "")
  public AccountNumberDto getAccount() {
    return account;
  }

  public void setAccount(AccountNumberDto account) {
    this.account = account;
  }

  public CustomerOverdueChargeLineDto vatCode(VatCodeDto vatCode) {
    this.vatCode = vatCode;
    return this;
  }

   /**
   * Get vatCode
   * @return vatCode
  **/
  @ApiModelProperty(value = "")
  public VatCodeDto getVatCode() {
    return vatCode;
  }

  public void setVatCode(VatCodeDto vatCode) {
    this.vatCode = vatCode;
  }

  public CustomerOverdueChargeLineDto uom(String uom) {
    this.uom = uom;
    return this;
  }

   /**
   * Get uom
   * @return uom
  **/
  @ApiModelProperty(value = "")
  public String getUom() {
    return uom;
  }

  public void setUom(String uom) {
    this.uom = uom;
  }

  public CustomerOverdueChargeLineDto discountPercent(Double discountPercent) {
    this.discountPercent = discountPercent;
    return this;
  }

   /**
   * The percent of the line-level discount that has been applied manually or  automatically.The system selects the Manual Discount check box and  calculates the discount amount after you have entered the percent manually and  saved your changes or added a new line.
   * @return discountPercent
  **/
  @ApiModelProperty(value = "The percent of the line-level discount that has been applied manually or  automatically.The system selects the Manual Discount check box and  calculates the discount amount after you have entered the percent manually and  saved your changes or added a new line.")
  public Double getDiscountPercent() {
    return discountPercent;
  }

  public void setDiscountPercent(Double discountPercent) {
    this.discountPercent = discountPercent;
  }

  public CustomerOverdueChargeLineDto discountAmount(Double discountAmount) {
    this.discountAmount = discountAmount;
    return this;
  }

   /**
   * The amount of the line-level discount that has been applied manually or  automatically to this line.The system selects the Manual Discount check box  and calculates the line amount after you have entered the discount amount  manually and save your changes or added a new line.
   * @return discountAmount
  **/
  @ApiModelProperty(value = "The amount of the line-level discount that has been applied manually or  automatically to this line.The system selects the Manual Discount check box  and calculates the line amount after you have entered the discount amount  manually and save your changes or added a new line.")
  public Double getDiscountAmount() {
    return discountAmount;
  }

  public void setDiscountAmount(Double discountAmount) {
    this.discountAmount = discountAmount;
  }

  public CustomerOverdueChargeLineDto discountAmountInCurrency(Double discountAmountInCurrency) {
    this.discountAmountInCurrency = discountAmountInCurrency;
    return this;
  }

   /**
   * Get discountAmountInCurrency
   * @return discountAmountInCurrency
  **/
  @ApiModelProperty(value = "")
  public Double getDiscountAmountInCurrency() {
    return discountAmountInCurrency;
  }

  public void setDiscountAmountInCurrency(Double discountAmountInCurrency) {
    this.discountAmountInCurrency = discountAmountInCurrency;
  }

  public CustomerOverdueChargeLineDto manualDiscount(Boolean manualDiscount) {
    this.manualDiscount = manualDiscount;
    return this;
  }

   /**
   * A check box that indicates (if selected) that the discount has been applied  manually.If you clear the check box, the system clears entered discount percent,  or discount amount, or selected discount code.
   * @return manualDiscount
  **/
  @ApiModelProperty(value = "A check box that indicates (if selected) that the discount has been applied  manually.If you clear the check box, the system clears entered discount percent,  or discount amount, or selected discount code.")
  public Boolean isManualDiscount() {
    return manualDiscount;
  }

  public void setManualDiscount(Boolean manualDiscount) {
    this.manualDiscount = manualDiscount;
  }

  public CustomerOverdueChargeLineDto subaccount(SubAccountDto subaccount) {
    this.subaccount = subaccount;
    return this;
  }

   /**
   * Get subaccount
   * @return subaccount
  **/
  @ApiModelProperty(value = "")
  public SubAccountDto getSubaccount() {
    return subaccount;
  }

  public void setSubaccount(SubAccountDto subaccount) {
    this.subaccount = subaccount;
  }

  public CustomerOverdueChargeLineDto salesperson(String salesperson) {
    this.salesperson = salesperson;
    return this;
  }

   /**
   * Get salesperson
   * @return salesperson
  **/
  @ApiModelProperty(value = "")
  public String getSalesperson() {
    return salesperson;
  }

  public void setSalesperson(String salesperson) {
    this.salesperson = salesperson;
  }

  public CustomerOverdueChargeLineDto deferralSchedule(Integer deferralSchedule) {
    this.deferralSchedule = deferralSchedule;
    return this;
  }

   /**
   * Get deferralSchedule
   * @return deferralSchedule
  **/
  @ApiModelProperty(value = "")
  public Integer getDeferralSchedule() {
    return deferralSchedule;
  }

  public void setDeferralSchedule(Integer deferralSchedule) {
    this.deferralSchedule = deferralSchedule;
  }

  public CustomerOverdueChargeLineDto deferralCode(String deferralCode) {
    this.deferralCode = deferralCode;
    return this;
  }

   /**
   * The deferral code assigned to the stock item or non-stock item specified in this  document line.Upon release of the document, the system generates a deferral  schedule (or schedules) based on the settings defined in this deferral code.
   * @return deferralCode
  **/
  @ApiModelProperty(value = "The deferral code assigned to the stock item or non-stock item specified in this  document line.Upon release of the document, the system generates a deferral  schedule (or schedules) based on the settings defined in this deferral code.")
  public String getDeferralCode() {
    return deferralCode;
  }

  public void setDeferralCode(String deferralCode) {
    this.deferralCode = deferralCode;
  }

  public CustomerOverdueChargeLineDto discountCode(String discountCode) {
    this.discountCode = discountCode;
    return this;
  }

   /**
   * The code of the line discount that has been applied to this line automatically or manually.
   * @return discountCode
  **/
  @ApiModelProperty(value = "The code of the line discount that has been applied to this line automatically or manually.")
  public String getDiscountCode() {
    return discountCode;
  }

  public void setDiscountCode(String discountCode) {
    this.discountCode = discountCode;
  }

  public CustomerOverdueChargeLineDto note(String note) {
    this.note = note;
    return this;
  }

   /**
   * Get note
   * @return note
  **/
  @ApiModelProperty(value = "")
  public String getNote() {
    return note;
  }

  public void setNote(String note) {
    this.note = note;
  }

  public CustomerOverdueChargeLineDto branchNumber(BranchNumberDto branchNumber) {
    this.branchNumber = branchNumber;
    return this;
  }

   /**
   * Get branchNumber
   * @return branchNumber
  **/
  @ApiModelProperty(value = "")
  public BranchNumberDto getBranchNumber() {
    return branchNumber;
  }

  public void setBranchNumber(BranchNumberDto branchNumber) {
    this.branchNumber = branchNumber;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CustomerOverdueChargeLineDto customerOverdueChargeLineDto = (CustomerOverdueChargeLineDto) o;
    return Objects.equals(this.attachments, customerOverdueChargeLineDto.attachments) &&
        Objects.equals(this.lineNumber, customerOverdueChargeLineDto.lineNumber) &&
        Objects.equals(this.inventoryNumber, customerOverdueChargeLineDto.inventoryNumber) &&
        Objects.equals(this.description, customerOverdueChargeLineDto.description) &&
        Objects.equals(this.quantity, customerOverdueChargeLineDto.quantity) &&
        Objects.equals(this.unitPrice, customerOverdueChargeLineDto.unitPrice) &&
        Objects.equals(this.unitPriceInCurrency, customerOverdueChargeLineDto.unitPriceInCurrency) &&
        Objects.equals(this.manualAmount, customerOverdueChargeLineDto.manualAmount) &&
        Objects.equals(this.manualAmountInCurrency, customerOverdueChargeLineDto.manualAmountInCurrency) &&
        Objects.equals(this.amount, customerOverdueChargeLineDto.amount) &&
        Objects.equals(this.amountInCurrency, customerOverdueChargeLineDto.amountInCurrency) &&
        Objects.equals(this.account, customerOverdueChargeLineDto.account) &&
        Objects.equals(this.vatCode, customerOverdueChargeLineDto.vatCode) &&
        Objects.equals(this.uom, customerOverdueChargeLineDto.uom) &&
        Objects.equals(this.discountPercent, customerOverdueChargeLineDto.discountPercent) &&
        Objects.equals(this.discountAmount, customerOverdueChargeLineDto.discountAmount) &&
        Objects.equals(this.discountAmountInCurrency, customerOverdueChargeLineDto.discountAmountInCurrency) &&
        Objects.equals(this.manualDiscount, customerOverdueChargeLineDto.manualDiscount) &&
        Objects.equals(this.subaccount, customerOverdueChargeLineDto.subaccount) &&
        Objects.equals(this.salesperson, customerOverdueChargeLineDto.salesperson) &&
        Objects.equals(this.deferralSchedule, customerOverdueChargeLineDto.deferralSchedule) &&
        Objects.equals(this.deferralCode, customerOverdueChargeLineDto.deferralCode) &&
        Objects.equals(this.discountCode, customerOverdueChargeLineDto.discountCode) &&
        Objects.equals(this.note, customerOverdueChargeLineDto.note) &&
        Objects.equals(this.branchNumber, customerOverdueChargeLineDto.branchNumber);
  }

  @Override
  public int hashCode() {
    return Objects.hash(attachments, lineNumber, inventoryNumber, description, quantity, unitPrice, unitPriceInCurrency, manualAmount, manualAmountInCurrency, amount, amountInCurrency, account, vatCode, uom, discountPercent, discountAmount, discountAmountInCurrency, manualDiscount, subaccount, salesperson, deferralSchedule, deferralCode, discountCode, note, branchNumber);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CustomerOverdueChargeLineDto {\n");
    
    sb.append("    attachments: ").append(toIndentedString(attachments)).append("\n");
    sb.append("    lineNumber: ").append(toIndentedString(lineNumber)).append("\n");
    sb.append("    inventoryNumber: ").append(toIndentedString(inventoryNumber)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    quantity: ").append(toIndentedString(quantity)).append("\n");
    sb.append("    unitPrice: ").append(toIndentedString(unitPrice)).append("\n");
    sb.append("    unitPriceInCurrency: ").append(toIndentedString(unitPriceInCurrency)).append("\n");
    sb.append("    manualAmount: ").append(toIndentedString(manualAmount)).append("\n");
    sb.append("    manualAmountInCurrency: ").append(toIndentedString(manualAmountInCurrency)).append("\n");
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("    amountInCurrency: ").append(toIndentedString(amountInCurrency)).append("\n");
    sb.append("    account: ").append(toIndentedString(account)).append("\n");
    sb.append("    vatCode: ").append(toIndentedString(vatCode)).append("\n");
    sb.append("    uom: ").append(toIndentedString(uom)).append("\n");
    sb.append("    discountPercent: ").append(toIndentedString(discountPercent)).append("\n");
    sb.append("    discountAmount: ").append(toIndentedString(discountAmount)).append("\n");
    sb.append("    discountAmountInCurrency: ").append(toIndentedString(discountAmountInCurrency)).append("\n");
    sb.append("    manualDiscount: ").append(toIndentedString(manualDiscount)).append("\n");
    sb.append("    subaccount: ").append(toIndentedString(subaccount)).append("\n");
    sb.append("    salesperson: ").append(toIndentedString(salesperson)).append("\n");
    sb.append("    deferralSchedule: ").append(toIndentedString(deferralSchedule)).append("\n");
    sb.append("    deferralCode: ").append(toIndentedString(deferralCode)).append("\n");
    sb.append("    discountCode: ").append(toIndentedString(discountCode)).append("\n");
    sb.append("    note: ").append(toIndentedString(note)).append("\n");
    sb.append("    branchNumber: ").append(toIndentedString(branchNumber)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

