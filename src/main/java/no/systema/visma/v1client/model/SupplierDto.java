/*
 * Visma Net API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 6.13.03.0008
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package no.systema.visma.v1client.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.List;
import no.systema.visma.v1client.model.AddressDto;
import no.systema.visma.v1client.model.AttributeIdValueDto;
import no.systema.visma.v1client.model.ClassDescriptionDto;
import no.systema.visma.v1client.model.ContactInfoDto;
import no.systema.visma.v1client.model.CreditTermsDto;
import no.systema.visma.v1client.model.LocationDescriptionDto;
import no.systema.visma.v1client.model.ParentRecordDto;
import no.systema.visma.v1client.model.PaymentMethodIdDescriptionDto;
import no.systema.visma.v1client.model.SupplierPaymentMethodDetailDto;
import no.systema.visma.v1client.model.VatZoneDto;

/**
 * This class represents a supplier in SupplierController. Used by getting data.
 */
@ApiModel(description = "This class represents a supplier in SupplierController. Used by getting data.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-04-16T15:04:09.234+02:00")
public class SupplierDto {
  @JsonProperty("internalId")
  private Integer internalId = null;

  @JsonProperty("number")
  private String number = null;

  @JsonProperty("name")
  private String name = null;

  /**
   * Gets or Sets status
   */
  public enum StatusEnum {
    ACTIVE("Active"),
    
    ONHOLD("OnHold"),
    
    HOLDPAYMENTS("HoldPayments"),
    
    INACTIVE("Inactive"),
    
    ONETIME("OneTime");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static StatusEnum fromValue(String text) {
      for (StatusEnum b : StatusEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("status")
  private StatusEnum status = null;

  @JsonProperty("mainAddress")
  private AddressDto mainAddress = null;

  @JsonProperty("mainContact")
  private ContactInfoDto mainContact = null;

  @JsonProperty("accountReference")
  private String accountReference = null;

  @JsonProperty("parentRecord")
  private ParentRecordDto parentRecord = null;

  @JsonProperty("supplierClass")
  private ClassDescriptionDto supplierClass = null;

  @JsonProperty("creditTerms")
  private CreditTermsDto creditTerms = null;

  @JsonProperty("documentLanguage")
  private String documentLanguage = null;

  @JsonProperty("currencyId")
  private String currencyId = null;

  @JsonProperty("remitAddress")
  private AddressDto remitAddress = null;

  @JsonProperty("remitContact")
  private ContactInfoDto remitContact = null;

  @JsonProperty("paymentMethod")
  private PaymentMethodIdDescriptionDto paymentMethod = null;

  @JsonProperty("cashAccount")
  private String cashAccount = null;

  /**
   * Gets or Sets chargeBearer
   */
  public enum ChargeBearerEnum {
    PAYER("Payer"),
    
    BENEFICIARY("Beneficiary"),
    
    SHARED("Shared"),
    
    SERVICELEVEL("ServiceLevel");

    private String value;

    ChargeBearerEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static ChargeBearerEnum fromValue(String text) {
      for (ChargeBearerEnum b : ChargeBearerEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("chargeBearer")
  private ChargeBearerEnum chargeBearer = null;

  /**
   * Gets or Sets accountUsedForPayment
   */
  public enum AccountUsedForPaymentEnum {
    IBAN("IBAN"),
    
    BBAN("BBAN"),
    
    BANKGIRO("BANKGIRO"),
    
    PLUSGIRO("PLUSGIRO");

    private String value;

    AccountUsedForPaymentEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static AccountUsedForPaymentEnum fromValue(String text) {
      for (AccountUsedForPaymentEnum b : AccountUsedForPaymentEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("accountUsedForPayment")
  private AccountUsedForPaymentEnum accountUsedForPayment = null;

  /**
   * Gets or Sets paymentBy
   */
  public enum PaymentByEnum {
    DUEDATE("DueDate"),
    
    DISCOUNTDATE("DiscountDate");

    private String value;

    PaymentByEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static PaymentByEnum fromValue(String text) {
      for (PaymentByEnum b : PaymentByEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("paymentBy")
  private PaymentByEnum paymentBy = null;

  @JsonProperty("paymentLeadTime")
  private Integer paymentLeadTime = null;

  @JsonProperty("paymentRefDisplayMask")
  private String paymentRefDisplayMask = null;

  @JsonProperty("paySeparately")
  private Boolean paySeparately = null;

  @JsonProperty("supplierAddress")
  private AddressDto supplierAddress = null;

  @JsonProperty("supplierContact")
  private ContactInfoDto supplierContact = null;

  @JsonProperty("location")
  private LocationDescriptionDto location = null;

  @JsonProperty("vatRegistrationId")
  private String vatRegistrationId = null;

  @JsonProperty("corporateId")
  private String corporateId = null;

  @JsonProperty("vatZone")
  private VatZoneDto vatZone = null;

  @JsonProperty("attributes")
  private List<AttributeIdValueDto> attributes = null;

  @JsonProperty("lastModifiedDateTime")
  private LocalDateTime lastModifiedDateTime = null;

  @JsonProperty("supplierPaymentMethodDetails")
  private List<SupplierPaymentMethodDetailDto> supplierPaymentMethodDetails = null;

  public SupplierDto internalId(Integer internalId) {
    this.internalId = internalId;
    return this;
  }

   /**
   * Get internalId
   * @return internalId
  **/
  @ApiModelProperty(value = "")
  public Integer getInternalId() {
    return internalId;
  }

  public void setInternalId(Integer internalId) {
    this.internalId = internalId;
  }

  public SupplierDto number(String number) {
    this.number = number;
    return this;
  }

   /**
   * Get number
   * @return number
  **/
  @ApiModelProperty(value = "")
  public String getNumber() {
    return number;
  }

  public void setNumber(String number) {
    this.number = number;
  }

  public SupplierDto name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @ApiModelProperty(value = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public SupplierDto status(StatusEnum status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @ApiModelProperty(value = "")
  public StatusEnum getStatus() {
    return status;
  }

  public void setStatus(StatusEnum status) {
    this.status = status;
  }

  public SupplierDto mainAddress(AddressDto mainAddress) {
    this.mainAddress = mainAddress;
    return this;
  }

   /**
   * Get mainAddress
   * @return mainAddress
  **/
  @ApiModelProperty(value = "")
  public AddressDto getMainAddress() {
    return mainAddress;
  }

  public void setMainAddress(AddressDto mainAddress) {
    this.mainAddress = mainAddress;
  }

  public SupplierDto mainContact(ContactInfoDto mainContact) {
    this.mainContact = mainContact;
    return this;
  }

   /**
   * Get mainContact
   * @return mainContact
  **/
  @ApiModelProperty(value = "")
  public ContactInfoDto getMainContact() {
    return mainContact;
  }

  public void setMainContact(ContactInfoDto mainContact) {
    this.mainContact = mainContact;
  }

  public SupplierDto accountReference(String accountReference) {
    this.accountReference = accountReference;
    return this;
  }

   /**
   * Get accountReference
   * @return accountReference
  **/
  @ApiModelProperty(value = "")
  public String getAccountReference() {
    return accountReference;
  }

  public void setAccountReference(String accountReference) {
    this.accountReference = accountReference;
  }

  public SupplierDto parentRecord(ParentRecordDto parentRecord) {
    this.parentRecord = parentRecord;
    return this;
  }

   /**
   * Get parentRecord
   * @return parentRecord
  **/
  @ApiModelProperty(value = "")
  public ParentRecordDto getParentRecord() {
    return parentRecord;
  }

  public void setParentRecord(ParentRecordDto parentRecord) {
    this.parentRecord = parentRecord;
  }

  public SupplierDto supplierClass(ClassDescriptionDto supplierClass) {
    this.supplierClass = supplierClass;
    return this;
  }

   /**
   * Get supplierClass
   * @return supplierClass
  **/
  @ApiModelProperty(value = "")
  public ClassDescriptionDto getSupplierClass() {
    return supplierClass;
  }

  public void setSupplierClass(ClassDescriptionDto supplierClass) {
    this.supplierClass = supplierClass;
  }

  public SupplierDto creditTerms(CreditTermsDto creditTerms) {
    this.creditTerms = creditTerms;
    return this;
  }

   /**
   * Get creditTerms
   * @return creditTerms
  **/
  @ApiModelProperty(value = "")
  public CreditTermsDto getCreditTerms() {
    return creditTerms;
  }

  public void setCreditTerms(CreditTermsDto creditTerms) {
    this.creditTerms = creditTerms;
  }

  public SupplierDto documentLanguage(String documentLanguage) {
    this.documentLanguage = documentLanguage;
    return this;
  }

   /**
   * Get documentLanguage
   * @return documentLanguage
  **/
  @ApiModelProperty(value = "")
  public String getDocumentLanguage() {
    return documentLanguage;
  }

  public void setDocumentLanguage(String documentLanguage) {
    this.documentLanguage = documentLanguage;
  }

  public SupplierDto currencyId(String currencyId) {
    this.currencyId = currencyId;
    return this;
  }

   /**
   * Get currencyId
   * @return currencyId
  **/
  @ApiModelProperty(value = "")
  public String getCurrencyId() {
    return currencyId;
  }

  public void setCurrencyId(String currencyId) {
    this.currencyId = currencyId;
  }

  public SupplierDto remitAddress(AddressDto remitAddress) {
    this.remitAddress = remitAddress;
    return this;
  }

   /**
   * Get remitAddress
   * @return remitAddress
  **/
  @ApiModelProperty(value = "")
  public AddressDto getRemitAddress() {
    return remitAddress;
  }

  public void setRemitAddress(AddressDto remitAddress) {
    this.remitAddress = remitAddress;
  }

  public SupplierDto remitContact(ContactInfoDto remitContact) {
    this.remitContact = remitContact;
    return this;
  }

   /**
   * Get remitContact
   * @return remitContact
  **/
  @ApiModelProperty(value = "")
  public ContactInfoDto getRemitContact() {
    return remitContact;
  }

  public void setRemitContact(ContactInfoDto remitContact) {
    this.remitContact = remitContact;
  }

  public SupplierDto paymentMethod(PaymentMethodIdDescriptionDto paymentMethod) {
    this.paymentMethod = paymentMethod;
    return this;
  }

   /**
   * Get paymentMethod
   * @return paymentMethod
  **/
  @ApiModelProperty(value = "")
  public PaymentMethodIdDescriptionDto getPaymentMethod() {
    return paymentMethod;
  }

  public void setPaymentMethod(PaymentMethodIdDescriptionDto paymentMethod) {
    this.paymentMethod = paymentMethod;
  }

  public SupplierDto cashAccount(String cashAccount) {
    this.cashAccount = cashAccount;
    return this;
  }

   /**
   * Get cashAccount
   * @return cashAccount
  **/
  @ApiModelProperty(value = "")
  public String getCashAccount() {
    return cashAccount;
  }

  public void setCashAccount(String cashAccount) {
    this.cashAccount = cashAccount;
  }

  public SupplierDto chargeBearer(ChargeBearerEnum chargeBearer) {
    this.chargeBearer = chargeBearer;
    return this;
  }

   /**
   * Get chargeBearer
   * @return chargeBearer
  **/
  @ApiModelProperty(value = "")
  public ChargeBearerEnum getChargeBearer() {
    return chargeBearer;
  }

  public void setChargeBearer(ChargeBearerEnum chargeBearer) {
    this.chargeBearer = chargeBearer;
  }

  public SupplierDto accountUsedForPayment(AccountUsedForPaymentEnum accountUsedForPayment) {
    this.accountUsedForPayment = accountUsedForPayment;
    return this;
  }

   /**
   * Get accountUsedForPayment
   * @return accountUsedForPayment
  **/
  @ApiModelProperty(value = "")
  public AccountUsedForPaymentEnum getAccountUsedForPayment() {
    return accountUsedForPayment;
  }

  public void setAccountUsedForPayment(AccountUsedForPaymentEnum accountUsedForPayment) {
    this.accountUsedForPayment = accountUsedForPayment;
  }

  public SupplierDto paymentBy(PaymentByEnum paymentBy) {
    this.paymentBy = paymentBy;
    return this;
  }

   /**
   * Get paymentBy
   * @return paymentBy
  **/
  @ApiModelProperty(value = "")
  public PaymentByEnum getPaymentBy() {
    return paymentBy;
  }

  public void setPaymentBy(PaymentByEnum paymentBy) {
    this.paymentBy = paymentBy;
  }

  public SupplierDto paymentLeadTime(Integer paymentLeadTime) {
    this.paymentLeadTime = paymentLeadTime;
    return this;
  }

   /**
   * Get paymentLeadTime
   * @return paymentLeadTime
  **/
  @ApiModelProperty(value = "")
  public Integer getPaymentLeadTime() {
    return paymentLeadTime;
  }

  public void setPaymentLeadTime(Integer paymentLeadTime) {
    this.paymentLeadTime = paymentLeadTime;
  }

  public SupplierDto paymentRefDisplayMask(String paymentRefDisplayMask) {
    this.paymentRefDisplayMask = paymentRefDisplayMask;
    return this;
  }

   /**
   * Get paymentRefDisplayMask
   * @return paymentRefDisplayMask
  **/
  @ApiModelProperty(value = "")
  public String getPaymentRefDisplayMask() {
    return paymentRefDisplayMask;
  }

  public void setPaymentRefDisplayMask(String paymentRefDisplayMask) {
    this.paymentRefDisplayMask = paymentRefDisplayMask;
  }

  public SupplierDto paySeparately(Boolean paySeparately) {
    this.paySeparately = paySeparately;
    return this;
  }

   /**
   * Get paySeparately
   * @return paySeparately
  **/
  @ApiModelProperty(value = "")
  public Boolean isPaySeparately() {
    return paySeparately;
  }

  public void setPaySeparately(Boolean paySeparately) {
    this.paySeparately = paySeparately;
  }

  public SupplierDto supplierAddress(AddressDto supplierAddress) {
    this.supplierAddress = supplierAddress;
    return this;
  }

   /**
   * Get supplierAddress
   * @return supplierAddress
  **/
  @ApiModelProperty(value = "")
  public AddressDto getSupplierAddress() {
    return supplierAddress;
  }

  public void setSupplierAddress(AddressDto supplierAddress) {
    this.supplierAddress = supplierAddress;
  }

  public SupplierDto supplierContact(ContactInfoDto supplierContact) {
    this.supplierContact = supplierContact;
    return this;
  }

   /**
   * Get supplierContact
   * @return supplierContact
  **/
  @ApiModelProperty(value = "")
  public ContactInfoDto getSupplierContact() {
    return supplierContact;
  }

  public void setSupplierContact(ContactInfoDto supplierContact) {
    this.supplierContact = supplierContact;
  }

  public SupplierDto location(LocationDescriptionDto location) {
    this.location = location;
    return this;
  }

   /**
   * Get location
   * @return location
  **/
  @ApiModelProperty(value = "")
  public LocationDescriptionDto getLocation() {
    return location;
  }

  public void setLocation(LocationDescriptionDto location) {
    this.location = location;
  }

  public SupplierDto vatRegistrationId(String vatRegistrationId) {
    this.vatRegistrationId = vatRegistrationId;
    return this;
  }

   /**
   * Get vatRegistrationId
   * @return vatRegistrationId
  **/
  @ApiModelProperty(value = "")
  public String getVatRegistrationId() {
    return vatRegistrationId;
  }

  public void setVatRegistrationId(String vatRegistrationId) {
    this.vatRegistrationId = vatRegistrationId;
  }

  public SupplierDto corporateId(String corporateId) {
    this.corporateId = corporateId;
    return this;
  }

   /**
   * Get corporateId
   * @return corporateId
  **/
  @ApiModelProperty(value = "")
  public String getCorporateId() {
    return corporateId;
  }

  public void setCorporateId(String corporateId) {
    this.corporateId = corporateId;
  }

  public SupplierDto vatZone(VatZoneDto vatZone) {
    this.vatZone = vatZone;
    return this;
  }

   /**
   * Get vatZone
   * @return vatZone
  **/
  @ApiModelProperty(value = "")
  public VatZoneDto getVatZone() {
    return vatZone;
  }

  public void setVatZone(VatZoneDto vatZone) {
    this.vatZone = vatZone;
  }

  public SupplierDto attributes(List<AttributeIdValueDto> attributes) {
    this.attributes = attributes;
    return this;
  }

  public SupplierDto addAttributesItem(AttributeIdValueDto attributesItem) {
    if (this.attributes == null) {
      this.attributes = new ArrayList<>();
    }
    this.attributes.add(attributesItem);
    return this;
  }

   /**
   * Get attributes
   * @return attributes
  **/
  @ApiModelProperty(value = "")
  public List<AttributeIdValueDto> getAttributes() {
    return attributes;
  }

  public void setAttributes(List<AttributeIdValueDto> attributes) {
    this.attributes = attributes;
  }

  public SupplierDto lastModifiedDateTime(LocalDateTime lastModifiedDateTime) {
    this.lastModifiedDateTime = lastModifiedDateTime;
    return this;
  }

   /**
   * Get lastModifiedDateTime
   * @return lastModifiedDateTime
  **/
  @ApiModelProperty(value = "")
  public LocalDateTime getLastModifiedDateTime() {
    return lastModifiedDateTime;
  }

  public void setLastModifiedDateTime(LocalDateTime lastModifiedDateTime) {
    this.lastModifiedDateTime = lastModifiedDateTime;
  }

  public SupplierDto supplierPaymentMethodDetails(List<SupplierPaymentMethodDetailDto> supplierPaymentMethodDetails) {
    this.supplierPaymentMethodDetails = supplierPaymentMethodDetails;
    return this;
  }

  public SupplierDto addSupplierPaymentMethodDetailsItem(SupplierPaymentMethodDetailDto supplierPaymentMethodDetailsItem) {
    if (this.supplierPaymentMethodDetails == null) {
      this.supplierPaymentMethodDetails = new ArrayList<>();
    }
    this.supplierPaymentMethodDetails.add(supplierPaymentMethodDetailsItem);
    return this;
  }

   /**
   * Get supplierPaymentMethodDetails
   * @return supplierPaymentMethodDetails
  **/
  @ApiModelProperty(value = "")
  public List<SupplierPaymentMethodDetailDto> getSupplierPaymentMethodDetails() {
    return supplierPaymentMethodDetails;
  }

  public void setSupplierPaymentMethodDetails(List<SupplierPaymentMethodDetailDto> supplierPaymentMethodDetails) {
    this.supplierPaymentMethodDetails = supplierPaymentMethodDetails;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SupplierDto supplierDto = (SupplierDto) o;
    return Objects.equals(this.internalId, supplierDto.internalId) &&
        Objects.equals(this.number, supplierDto.number) &&
        Objects.equals(this.name, supplierDto.name) &&
        Objects.equals(this.status, supplierDto.status) &&
        Objects.equals(this.mainAddress, supplierDto.mainAddress) &&
        Objects.equals(this.mainContact, supplierDto.mainContact) &&
        Objects.equals(this.accountReference, supplierDto.accountReference) &&
        Objects.equals(this.parentRecord, supplierDto.parentRecord) &&
        Objects.equals(this.supplierClass, supplierDto.supplierClass) &&
        Objects.equals(this.creditTerms, supplierDto.creditTerms) &&
        Objects.equals(this.documentLanguage, supplierDto.documentLanguage) &&
        Objects.equals(this.currencyId, supplierDto.currencyId) &&
        Objects.equals(this.remitAddress, supplierDto.remitAddress) &&
        Objects.equals(this.remitContact, supplierDto.remitContact) &&
        Objects.equals(this.paymentMethod, supplierDto.paymentMethod) &&
        Objects.equals(this.cashAccount, supplierDto.cashAccount) &&
        Objects.equals(this.chargeBearer, supplierDto.chargeBearer) &&
        Objects.equals(this.accountUsedForPayment, supplierDto.accountUsedForPayment) &&
        Objects.equals(this.paymentBy, supplierDto.paymentBy) &&
        Objects.equals(this.paymentLeadTime, supplierDto.paymentLeadTime) &&
        Objects.equals(this.paymentRefDisplayMask, supplierDto.paymentRefDisplayMask) &&
        Objects.equals(this.paySeparately, supplierDto.paySeparately) &&
        Objects.equals(this.supplierAddress, supplierDto.supplierAddress) &&
        Objects.equals(this.supplierContact, supplierDto.supplierContact) &&
        Objects.equals(this.location, supplierDto.location) &&
        Objects.equals(this.vatRegistrationId, supplierDto.vatRegistrationId) &&
        Objects.equals(this.corporateId, supplierDto.corporateId) &&
        Objects.equals(this.vatZone, supplierDto.vatZone) &&
        Objects.equals(this.attributes, supplierDto.attributes) &&
        Objects.equals(this.lastModifiedDateTime, supplierDto.lastModifiedDateTime) &&
        Objects.equals(this.supplierPaymentMethodDetails, supplierDto.supplierPaymentMethodDetails);
  }

  @Override
  public int hashCode() {
    return Objects.hash(internalId, number, name, status, mainAddress, mainContact, accountReference, parentRecord, supplierClass, creditTerms, documentLanguage, currencyId, remitAddress, remitContact, paymentMethod, cashAccount, chargeBearer, accountUsedForPayment, paymentBy, paymentLeadTime, paymentRefDisplayMask, paySeparately, supplierAddress, supplierContact, location, vatRegistrationId, corporateId, vatZone, attributes, lastModifiedDateTime, supplierPaymentMethodDetails);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SupplierDto {\n");
    
    sb.append("    internalId: ").append(toIndentedString(internalId)).append("\n");
    sb.append("    number: ").append(toIndentedString(number)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    mainAddress: ").append(toIndentedString(mainAddress)).append("\n");
    sb.append("    mainContact: ").append(toIndentedString(mainContact)).append("\n");
    sb.append("    accountReference: ").append(toIndentedString(accountReference)).append("\n");
    sb.append("    parentRecord: ").append(toIndentedString(parentRecord)).append("\n");
    sb.append("    supplierClass: ").append(toIndentedString(supplierClass)).append("\n");
    sb.append("    creditTerms: ").append(toIndentedString(creditTerms)).append("\n");
    sb.append("    documentLanguage: ").append(toIndentedString(documentLanguage)).append("\n");
    sb.append("    currencyId: ").append(toIndentedString(currencyId)).append("\n");
    sb.append("    remitAddress: ").append(toIndentedString(remitAddress)).append("\n");
    sb.append("    remitContact: ").append(toIndentedString(remitContact)).append("\n");
    sb.append("    paymentMethod: ").append(toIndentedString(paymentMethod)).append("\n");
    sb.append("    cashAccount: ").append(toIndentedString(cashAccount)).append("\n");
    sb.append("    chargeBearer: ").append(toIndentedString(chargeBearer)).append("\n");
    sb.append("    accountUsedForPayment: ").append(toIndentedString(accountUsedForPayment)).append("\n");
    sb.append("    paymentBy: ").append(toIndentedString(paymentBy)).append("\n");
    sb.append("    paymentLeadTime: ").append(toIndentedString(paymentLeadTime)).append("\n");
    sb.append("    paymentRefDisplayMask: ").append(toIndentedString(paymentRefDisplayMask)).append("\n");
    sb.append("    paySeparately: ").append(toIndentedString(paySeparately)).append("\n");
    sb.append("    supplierAddress: ").append(toIndentedString(supplierAddress)).append("\n");
    sb.append("    supplierContact: ").append(toIndentedString(supplierContact)).append("\n");
    sb.append("    location: ").append(toIndentedString(location)).append("\n");
    sb.append("    vatRegistrationId: ").append(toIndentedString(vatRegistrationId)).append("\n");
    sb.append("    corporateId: ").append(toIndentedString(corporateId)).append("\n");
    sb.append("    vatZone: ").append(toIndentedString(vatZone)).append("\n");
    sb.append("    attributes: ").append(toIndentedString(attributes)).append("\n");
    sb.append("    lastModifiedDateTime: ").append(toIndentedString(lastModifiedDateTime)).append("\n");
    sb.append("    supplierPaymentMethodDetails: ").append(toIndentedString(supplierPaymentMethodDetails)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

