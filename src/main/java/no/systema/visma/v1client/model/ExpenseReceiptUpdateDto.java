/*
 * Visma Net API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 6.13.03.0008
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package no.systema.visma.v1client.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import no.systema.visma.v1client.model.DtoValueNullableBoolean;
import no.systema.visma.v1client.model.DtoValueNullableDateTime;
import no.systema.visma.v1client.model.DtoValueNullableDecimal;
import no.systema.visma.v1client.model.DtoValueString;

/**
 * This class represents a Expense Receipt in ExpenseReceiptController. Used to post data to server.
 */
@ApiModel(description = "This class represents a Expense Receipt in ExpenseReceiptController. Used to post data to server.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-04-16T15:04:09.234+02:00")
public class ExpenseReceiptUpdateDto {
  @JsonProperty("date")
  private DtoValueNullableDateTime date = null;

  @JsonProperty("currency")
  private DtoValueString currency = null;

  @JsonProperty("refNbr")
  private DtoValueString refNbr = null;

  @JsonProperty("inventory")
  private DtoValueString inventory = null;

  @JsonProperty("description")
  private DtoValueString description = null;

  @JsonProperty("uom")
  private DtoValueString uom = null;

  @JsonProperty("quantity")
  private DtoValueNullableDecimal quantity = null;

  @JsonProperty("unitCost")
  private DtoValueNullableDecimal unitCost = null;

  @JsonProperty("totalAmount")
  private DtoValueNullableDecimal totalAmount = null;

  @JsonProperty("employeePart")
  private DtoValueNullableDecimal employeePart = null;

  @JsonProperty("claimedBy")
  private DtoValueString claimedBy = null;

  @JsonProperty("branch")
  private DtoValueString branch = null;

  @JsonProperty("expenseClaim")
  private DtoValueString expenseClaim = null;

  @JsonProperty("invoiceable")
  private DtoValueNullableBoolean invoiceable = null;

  @JsonProperty("project")
  private DtoValueString project = null;

  @JsonProperty("projectTask")
  private DtoValueString projectTask = null;

  @JsonProperty("customer")
  private DtoValueString customer = null;

  @JsonProperty("location")
  private DtoValueString location = null;

  @JsonProperty("expenseAccount")
  private DtoValueString expenseAccount = null;

  @JsonProperty("expenseSub")
  private DtoValueString expenseSub = null;

  @JsonProperty("salesAccount")
  private DtoValueString salesAccount = null;

  @JsonProperty("salesSub")
  private DtoValueString salesSub = null;

  @JsonProperty("taxCategory")
  private DtoValueString taxCategory = null;

  public ExpenseReceiptUpdateDto date(DtoValueNullableDateTime date) {
    this.date = date;
    return this;
  }

   /**
   * Get date
   * @return date
  **/
  @ApiModelProperty(value = "")
  public DtoValueNullableDateTime getDate() {
    return date;
  }

  public void setDate(DtoValueNullableDateTime date) {
    this.date = date;
  }

  public ExpenseReceiptUpdateDto currency(DtoValueString currency) {
    this.currency = currency;
    return this;
  }

   /**
   * Get currency
   * @return currency
  **/
  @ApiModelProperty(value = "")
  public DtoValueString getCurrency() {
    return currency;
  }

  public void setCurrency(DtoValueString currency) {
    this.currency = currency;
  }

  public ExpenseReceiptUpdateDto refNbr(DtoValueString refNbr) {
    this.refNbr = refNbr;
    return this;
  }

   /**
   * Get refNbr
   * @return refNbr
  **/
  @ApiModelProperty(value = "")
  public DtoValueString getRefNbr() {
    return refNbr;
  }

  public void setRefNbr(DtoValueString refNbr) {
    this.refNbr = refNbr;
  }

  public ExpenseReceiptUpdateDto inventory(DtoValueString inventory) {
    this.inventory = inventory;
    return this;
  }

   /**
   * Get inventory
   * @return inventory
  **/
  @ApiModelProperty(value = "")
  public DtoValueString getInventory() {
    return inventory;
  }

  public void setInventory(DtoValueString inventory) {
    this.inventory = inventory;
  }

  public ExpenseReceiptUpdateDto description(DtoValueString description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @ApiModelProperty(value = "")
  public DtoValueString getDescription() {
    return description;
  }

  public void setDescription(DtoValueString description) {
    this.description = description;
  }

  public ExpenseReceiptUpdateDto uom(DtoValueString uom) {
    this.uom = uom;
    return this;
  }

   /**
   * Get uom
   * @return uom
  **/
  @ApiModelProperty(value = "")
  public DtoValueString getUom() {
    return uom;
  }

  public void setUom(DtoValueString uom) {
    this.uom = uom;
  }

  public ExpenseReceiptUpdateDto quantity(DtoValueNullableDecimal quantity) {
    this.quantity = quantity;
    return this;
  }

   /**
   * Get quantity
   * @return quantity
  **/
  @ApiModelProperty(value = "")
  public DtoValueNullableDecimal getQuantity() {
    return quantity;
  }

  public void setQuantity(DtoValueNullableDecimal quantity) {
    this.quantity = quantity;
  }

  public ExpenseReceiptUpdateDto unitCost(DtoValueNullableDecimal unitCost) {
    this.unitCost = unitCost;
    return this;
  }

   /**
   * Get unitCost
   * @return unitCost
  **/
  @ApiModelProperty(value = "")
  public DtoValueNullableDecimal getUnitCost() {
    return unitCost;
  }

  public void setUnitCost(DtoValueNullableDecimal unitCost) {
    this.unitCost = unitCost;
  }

  public ExpenseReceiptUpdateDto totalAmount(DtoValueNullableDecimal totalAmount) {
    this.totalAmount = totalAmount;
    return this;
  }

   /**
   * Get totalAmount
   * @return totalAmount
  **/
  @ApiModelProperty(value = "")
  public DtoValueNullableDecimal getTotalAmount() {
    return totalAmount;
  }

  public void setTotalAmount(DtoValueNullableDecimal totalAmount) {
    this.totalAmount = totalAmount;
  }

  public ExpenseReceiptUpdateDto employeePart(DtoValueNullableDecimal employeePart) {
    this.employeePart = employeePart;
    return this;
  }

   /**
   * Get employeePart
   * @return employeePart
  **/
  @ApiModelProperty(value = "")
  public DtoValueNullableDecimal getEmployeePart() {
    return employeePart;
  }

  public void setEmployeePart(DtoValueNullableDecimal employeePart) {
    this.employeePart = employeePart;
  }

  public ExpenseReceiptUpdateDto claimedBy(DtoValueString claimedBy) {
    this.claimedBy = claimedBy;
    return this;
  }

   /**
   * Get claimedBy
   * @return claimedBy
  **/
  @ApiModelProperty(value = "")
  public DtoValueString getClaimedBy() {
    return claimedBy;
  }

  public void setClaimedBy(DtoValueString claimedBy) {
    this.claimedBy = claimedBy;
  }

  public ExpenseReceiptUpdateDto branch(DtoValueString branch) {
    this.branch = branch;
    return this;
  }

   /**
   * Get branch
   * @return branch
  **/
  @ApiModelProperty(value = "")
  public DtoValueString getBranch() {
    return branch;
  }

  public void setBranch(DtoValueString branch) {
    this.branch = branch;
  }

  public ExpenseReceiptUpdateDto expenseClaim(DtoValueString expenseClaim) {
    this.expenseClaim = expenseClaim;
    return this;
  }

   /**
   * Get expenseClaim
   * @return expenseClaim
  **/
  @ApiModelProperty(value = "")
  public DtoValueString getExpenseClaim() {
    return expenseClaim;
  }

  public void setExpenseClaim(DtoValueString expenseClaim) {
    this.expenseClaim = expenseClaim;
  }

  public ExpenseReceiptUpdateDto invoiceable(DtoValueNullableBoolean invoiceable) {
    this.invoiceable = invoiceable;
    return this;
  }

   /**
   * Get invoiceable
   * @return invoiceable
  **/
  @ApiModelProperty(value = "")
  public DtoValueNullableBoolean getInvoiceable() {
    return invoiceable;
  }

  public void setInvoiceable(DtoValueNullableBoolean invoiceable) {
    this.invoiceable = invoiceable;
  }

  public ExpenseReceiptUpdateDto project(DtoValueString project) {
    this.project = project;
    return this;
  }

   /**
   * Get project
   * @return project
  **/
  @ApiModelProperty(value = "")
  public DtoValueString getProject() {
    return project;
  }

  public void setProject(DtoValueString project) {
    this.project = project;
  }

  public ExpenseReceiptUpdateDto projectTask(DtoValueString projectTask) {
    this.projectTask = projectTask;
    return this;
  }

   /**
   * Get projectTask
   * @return projectTask
  **/
  @ApiModelProperty(value = "")
  public DtoValueString getProjectTask() {
    return projectTask;
  }

  public void setProjectTask(DtoValueString projectTask) {
    this.projectTask = projectTask;
  }

  public ExpenseReceiptUpdateDto customer(DtoValueString customer) {
    this.customer = customer;
    return this;
  }

   /**
   * Get customer
   * @return customer
  **/
  @ApiModelProperty(value = "")
  public DtoValueString getCustomer() {
    return customer;
  }

  public void setCustomer(DtoValueString customer) {
    this.customer = customer;
  }

  public ExpenseReceiptUpdateDto location(DtoValueString location) {
    this.location = location;
    return this;
  }

   /**
   * Get location
   * @return location
  **/
  @ApiModelProperty(value = "")
  public DtoValueString getLocation() {
    return location;
  }

  public void setLocation(DtoValueString location) {
    this.location = location;
  }

  public ExpenseReceiptUpdateDto expenseAccount(DtoValueString expenseAccount) {
    this.expenseAccount = expenseAccount;
    return this;
  }

   /**
   * Get expenseAccount
   * @return expenseAccount
  **/
  @ApiModelProperty(value = "")
  public DtoValueString getExpenseAccount() {
    return expenseAccount;
  }

  public void setExpenseAccount(DtoValueString expenseAccount) {
    this.expenseAccount = expenseAccount;
  }

  public ExpenseReceiptUpdateDto expenseSub(DtoValueString expenseSub) {
    this.expenseSub = expenseSub;
    return this;
  }

   /**
   * Get expenseSub
   * @return expenseSub
  **/
  @ApiModelProperty(value = "")
  public DtoValueString getExpenseSub() {
    return expenseSub;
  }

  public void setExpenseSub(DtoValueString expenseSub) {
    this.expenseSub = expenseSub;
  }

  public ExpenseReceiptUpdateDto salesAccount(DtoValueString salesAccount) {
    this.salesAccount = salesAccount;
    return this;
  }

   /**
   * Get salesAccount
   * @return salesAccount
  **/
  @ApiModelProperty(value = "")
  public DtoValueString getSalesAccount() {
    return salesAccount;
  }

  public void setSalesAccount(DtoValueString salesAccount) {
    this.salesAccount = salesAccount;
  }

  public ExpenseReceiptUpdateDto salesSub(DtoValueString salesSub) {
    this.salesSub = salesSub;
    return this;
  }

   /**
   * Get salesSub
   * @return salesSub
  **/
  @ApiModelProperty(value = "")
  public DtoValueString getSalesSub() {
    return salesSub;
  }

  public void setSalesSub(DtoValueString salesSub) {
    this.salesSub = salesSub;
  }

  public ExpenseReceiptUpdateDto taxCategory(DtoValueString taxCategory) {
    this.taxCategory = taxCategory;
    return this;
  }

   /**
   * Get taxCategory
   * @return taxCategory
  **/
  @ApiModelProperty(value = "")
  public DtoValueString getTaxCategory() {
    return taxCategory;
  }

  public void setTaxCategory(DtoValueString taxCategory) {
    this.taxCategory = taxCategory;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ExpenseReceiptUpdateDto expenseReceiptUpdateDto = (ExpenseReceiptUpdateDto) o;
    return Objects.equals(this.date, expenseReceiptUpdateDto.date) &&
        Objects.equals(this.currency, expenseReceiptUpdateDto.currency) &&
        Objects.equals(this.refNbr, expenseReceiptUpdateDto.refNbr) &&
        Objects.equals(this.inventory, expenseReceiptUpdateDto.inventory) &&
        Objects.equals(this.description, expenseReceiptUpdateDto.description) &&
        Objects.equals(this.uom, expenseReceiptUpdateDto.uom) &&
        Objects.equals(this.quantity, expenseReceiptUpdateDto.quantity) &&
        Objects.equals(this.unitCost, expenseReceiptUpdateDto.unitCost) &&
        Objects.equals(this.totalAmount, expenseReceiptUpdateDto.totalAmount) &&
        Objects.equals(this.employeePart, expenseReceiptUpdateDto.employeePart) &&
        Objects.equals(this.claimedBy, expenseReceiptUpdateDto.claimedBy) &&
        Objects.equals(this.branch, expenseReceiptUpdateDto.branch) &&
        Objects.equals(this.expenseClaim, expenseReceiptUpdateDto.expenseClaim) &&
        Objects.equals(this.invoiceable, expenseReceiptUpdateDto.invoiceable) &&
        Objects.equals(this.project, expenseReceiptUpdateDto.project) &&
        Objects.equals(this.projectTask, expenseReceiptUpdateDto.projectTask) &&
        Objects.equals(this.customer, expenseReceiptUpdateDto.customer) &&
        Objects.equals(this.location, expenseReceiptUpdateDto.location) &&
        Objects.equals(this.expenseAccount, expenseReceiptUpdateDto.expenseAccount) &&
        Objects.equals(this.expenseSub, expenseReceiptUpdateDto.expenseSub) &&
        Objects.equals(this.salesAccount, expenseReceiptUpdateDto.salesAccount) &&
        Objects.equals(this.salesSub, expenseReceiptUpdateDto.salesSub) &&
        Objects.equals(this.taxCategory, expenseReceiptUpdateDto.taxCategory);
  }

  @Override
  public int hashCode() {
    return Objects.hash(date, currency, refNbr, inventory, description, uom, quantity, unitCost, totalAmount, employeePart, claimedBy, branch, expenseClaim, invoiceable, project, projectTask, customer, location, expenseAccount, expenseSub, salesAccount, salesSub, taxCategory);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ExpenseReceiptUpdateDto {\n");
    
    sb.append("    date: ").append(toIndentedString(date)).append("\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    refNbr: ").append(toIndentedString(refNbr)).append("\n");
    sb.append("    inventory: ").append(toIndentedString(inventory)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    uom: ").append(toIndentedString(uom)).append("\n");
    sb.append("    quantity: ").append(toIndentedString(quantity)).append("\n");
    sb.append("    unitCost: ").append(toIndentedString(unitCost)).append("\n");
    sb.append("    totalAmount: ").append(toIndentedString(totalAmount)).append("\n");
    sb.append("    employeePart: ").append(toIndentedString(employeePart)).append("\n");
    sb.append("    claimedBy: ").append(toIndentedString(claimedBy)).append("\n");
    sb.append("    branch: ").append(toIndentedString(branch)).append("\n");
    sb.append("    expenseClaim: ").append(toIndentedString(expenseClaim)).append("\n");
    sb.append("    invoiceable: ").append(toIndentedString(invoiceable)).append("\n");
    sb.append("    project: ").append(toIndentedString(project)).append("\n");
    sb.append("    projectTask: ").append(toIndentedString(projectTask)).append("\n");
    sb.append("    customer: ").append(toIndentedString(customer)).append("\n");
    sb.append("    location: ").append(toIndentedString(location)).append("\n");
    sb.append("    expenseAccount: ").append(toIndentedString(expenseAccount)).append("\n");
    sb.append("    expenseSub: ").append(toIndentedString(expenseSub)).append("\n");
    sb.append("    salesAccount: ").append(toIndentedString(salesAccount)).append("\n");
    sb.append("    salesSub: ").append(toIndentedString(salesSub)).append("\n");
    sb.append("    taxCategory: ").append(toIndentedString(taxCategory)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

