/*
 * Visma Net API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 6.13.03.0008
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package no.systema.visma.v1client.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.time.LocalDateTime;

/**
 * AccountDto
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-04-16T15:04:09.234+02:00")
public class AccountDto {
  @JsonProperty("accountID")
  private Integer accountID = null;

  @JsonProperty("accountCD")
  private String accountCD = null;

  @JsonProperty("accountClass")
  private String accountClass = null;

  /**
   * Gets or Sets type
   */
  public enum TypeEnum {
    ASSET("Asset"),
    
    LIABILITY("Liability"),
    
    INCOME("Income"),
    
    EXPENSE("Expense");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static TypeEnum fromValue(String text) {
      for (TypeEnum b : TypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("type")
  private TypeEnum type = null;

  @JsonProperty("active")
  private Boolean active = null;

  @JsonProperty("description")
  private String description = null;

  @JsonProperty("useDefaultSub")
  private Boolean useDefaultSub = null;

  @JsonProperty("postOption")
  private String postOption = null;

  @JsonProperty("currency")
  private String currency = null;

  @JsonProperty("taxCategory")
  private String taxCategory = null;

  @JsonProperty("cashAccount")
  private Boolean cashAccount = null;

  @JsonProperty("publicCode1")
  private Integer publicCode1 = null;

  @JsonProperty("externalCode1")
  private String externalCode1 = null;

  @JsonProperty("externalCode2")
  private String externalCode2 = null;

  @JsonProperty("analysisCode")
  private String analysisCode = null;

  @JsonProperty("lastModifiedDateTime")
  private LocalDateTime lastModifiedDateTime = null;

  public AccountDto accountID(Integer accountID) {
    this.accountID = accountID;
    return this;
  }

   /**
   * Get accountID
   * @return accountID
  **/
  @ApiModelProperty(value = "")
  public Integer getAccountID() {
    return accountID;
  }

  public void setAccountID(Integer accountID) {
    this.accountID = accountID;
  }

  public AccountDto accountCD(String accountCD) {
    this.accountCD = accountCD;
    return this;
  }

   /**
   * Get accountCD
   * @return accountCD
  **/
  @ApiModelProperty(value = "")
  public String getAccountCD() {
    return accountCD;
  }

  public void setAccountCD(String accountCD) {
    this.accountCD = accountCD;
  }

  public AccountDto accountClass(String accountClass) {
    this.accountClass = accountClass;
    return this;
  }

   /**
   * Get accountClass
   * @return accountClass
  **/
  @ApiModelProperty(value = "")
  public String getAccountClass() {
    return accountClass;
  }

  public void setAccountClass(String accountClass) {
    this.accountClass = accountClass;
  }

  public AccountDto type(TypeEnum type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @ApiModelProperty(value = "")
  public TypeEnum getType() {
    return type;
  }

  public void setType(TypeEnum type) {
    this.type = type;
  }

  public AccountDto active(Boolean active) {
    this.active = active;
    return this;
  }

   /**
   * Get active
   * @return active
  **/
  @ApiModelProperty(value = "")
  public Boolean isActive() {
    return active;
  }

  public void setActive(Boolean active) {
    this.active = active;
  }

  public AccountDto description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @ApiModelProperty(value = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public AccountDto useDefaultSub(Boolean useDefaultSub) {
    this.useDefaultSub = useDefaultSub;
    return this;
  }

   /**
   * Get useDefaultSub
   * @return useDefaultSub
  **/
  @ApiModelProperty(value = "")
  public Boolean isUseDefaultSub() {
    return useDefaultSub;
  }

  public void setUseDefaultSub(Boolean useDefaultSub) {
    this.useDefaultSub = useDefaultSub;
  }

  public AccountDto postOption(String postOption) {
    this.postOption = postOption;
    return this;
  }

   /**
   * Get postOption
   * @return postOption
  **/
  @ApiModelProperty(value = "")
  public String getPostOption() {
    return postOption;
  }

  public void setPostOption(String postOption) {
    this.postOption = postOption;
  }

  public AccountDto currency(String currency) {
    this.currency = currency;
    return this;
  }

   /**
   * Get currency
   * @return currency
  **/
  @ApiModelProperty(value = "")
  public String getCurrency() {
    return currency;
  }

  public void setCurrency(String currency) {
    this.currency = currency;
  }

  public AccountDto taxCategory(String taxCategory) {
    this.taxCategory = taxCategory;
    return this;
  }

   /**
   * Get taxCategory
   * @return taxCategory
  **/
  @ApiModelProperty(value = "")
  public String getTaxCategory() {
    return taxCategory;
  }

  public void setTaxCategory(String taxCategory) {
    this.taxCategory = taxCategory;
  }

  public AccountDto cashAccount(Boolean cashAccount) {
    this.cashAccount = cashAccount;
    return this;
  }

   /**
   * Get cashAccount
   * @return cashAccount
  **/
  @ApiModelProperty(value = "")
  public Boolean isCashAccount() {
    return cashAccount;
  }

  public void setCashAccount(Boolean cashAccount) {
    this.cashAccount = cashAccount;
  }

  public AccountDto publicCode1(Integer publicCode1) {
    this.publicCode1 = publicCode1;
    return this;
  }

   /**
   * Get publicCode1
   * @return publicCode1
  **/
  @ApiModelProperty(value = "")
  public Integer getPublicCode1() {
    return publicCode1;
  }

  public void setPublicCode1(Integer publicCode1) {
    this.publicCode1 = publicCode1;
  }

  public AccountDto externalCode1(String externalCode1) {
    this.externalCode1 = externalCode1;
    return this;
  }

   /**
   * Get externalCode1
   * @return externalCode1
  **/
  @ApiModelProperty(value = "")
  public String getExternalCode1() {
    return externalCode1;
  }

  public void setExternalCode1(String externalCode1) {
    this.externalCode1 = externalCode1;
  }

  public AccountDto externalCode2(String externalCode2) {
    this.externalCode2 = externalCode2;
    return this;
  }

   /**
   * Get externalCode2
   * @return externalCode2
  **/
  @ApiModelProperty(value = "")
  public String getExternalCode2() {
    return externalCode2;
  }

  public void setExternalCode2(String externalCode2) {
    this.externalCode2 = externalCode2;
  }

  public AccountDto analysisCode(String analysisCode) {
    this.analysisCode = analysisCode;
    return this;
  }

   /**
   * Get analysisCode
   * @return analysisCode
  **/
  @ApiModelProperty(value = "")
  public String getAnalysisCode() {
    return analysisCode;
  }

  public void setAnalysisCode(String analysisCode) {
    this.analysisCode = analysisCode;
  }

  public AccountDto lastModifiedDateTime(LocalDateTime lastModifiedDateTime) {
    this.lastModifiedDateTime = lastModifiedDateTime;
    return this;
  }

   /**
   * Get lastModifiedDateTime
   * @return lastModifiedDateTime
  **/
  @ApiModelProperty(value = "")
  public LocalDateTime getLastModifiedDateTime() {
    return lastModifiedDateTime;
  }

  public void setLastModifiedDateTime(LocalDateTime lastModifiedDateTime) {
    this.lastModifiedDateTime = lastModifiedDateTime;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AccountDto accountDto = (AccountDto) o;
    return Objects.equals(this.accountID, accountDto.accountID) &&
        Objects.equals(this.accountCD, accountDto.accountCD) &&
        Objects.equals(this.accountClass, accountDto.accountClass) &&
        Objects.equals(this.type, accountDto.type) &&
        Objects.equals(this.active, accountDto.active) &&
        Objects.equals(this.description, accountDto.description) &&
        Objects.equals(this.useDefaultSub, accountDto.useDefaultSub) &&
        Objects.equals(this.postOption, accountDto.postOption) &&
        Objects.equals(this.currency, accountDto.currency) &&
        Objects.equals(this.taxCategory, accountDto.taxCategory) &&
        Objects.equals(this.cashAccount, accountDto.cashAccount) &&
        Objects.equals(this.publicCode1, accountDto.publicCode1) &&
        Objects.equals(this.externalCode1, accountDto.externalCode1) &&
        Objects.equals(this.externalCode2, accountDto.externalCode2) &&
        Objects.equals(this.analysisCode, accountDto.analysisCode) &&
        Objects.equals(this.lastModifiedDateTime, accountDto.lastModifiedDateTime);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accountID, accountCD, accountClass, type, active, description, useDefaultSub, postOption, currency, taxCategory, cashAccount, publicCode1, externalCode1, externalCode2, analysisCode, lastModifiedDateTime);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AccountDto {\n");
    
    sb.append("    accountID: ").append(toIndentedString(accountID)).append("\n");
    sb.append("    accountCD: ").append(toIndentedString(accountCD)).append("\n");
    sb.append("    accountClass: ").append(toIndentedString(accountClass)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    active: ").append(toIndentedString(active)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    useDefaultSub: ").append(toIndentedString(useDefaultSub)).append("\n");
    sb.append("    postOption: ").append(toIndentedString(postOption)).append("\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    taxCategory: ").append(toIndentedString(taxCategory)).append("\n");
    sb.append("    cashAccount: ").append(toIndentedString(cashAccount)).append("\n");
    sb.append("    publicCode1: ").append(toIndentedString(publicCode1)).append("\n");
    sb.append("    externalCode1: ").append(toIndentedString(externalCode1)).append("\n");
    sb.append("    externalCode2: ").append(toIndentedString(externalCode2)).append("\n");
    sb.append("    analysisCode: ").append(toIndentedString(analysisCode)).append("\n");
    sb.append("    lastModifiedDateTime: ").append(toIndentedString(lastModifiedDateTime)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

