/*
 * Visma Net API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 6.13.03.0008
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package no.systema.visma.v1client.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

/**
 * VatCategoryLineDto
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-04-16T15:04:09.234+02:00")
public class VatCategoryLineDto {
  @JsonProperty("vatId")
  private String vatId = null;

  @JsonProperty("description")
  private String description = null;

  /**
   * Gets or Sets type
   */
  public enum TypeEnum {
    SALES("Sales"),
    
    USE("Use"),
    
    VAT("Vat"),
    
    WITHHOLDING("Withholding"),
    
    EXEMPTVAT("ExemptVat"),
    
    STATISTICALVAT("StatisticalVat"),
    
    DIRECTVAT("DirectVat"),
    
    PENDINGVAT("PendingVat"),
    
    REVERSEVAT("ReverseVat");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static TypeEnum fromValue(String text) {
      for (TypeEnum b : TypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("type")
  private TypeEnum type = null;

  /**
   * Gets or Sets calculateOn
   */
  public enum CalculateOnEnum {
    EXTRACTFROMITEMAMOUNT("ExtractFromItemAmount"),
    
    ITEMAMOUNT("ItemAmount"),
    
    ITEMTAXAMOUNT("ItemTaxAmount"),
    
    DOCUMENTAMOUNT("DocumentAmount"),
    
    DOCUMENTAXAMOUNT("DocumenTaxAmount");

    private String value;

    CalculateOnEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static CalculateOnEnum fromValue(String text) {
      for (CalculateOnEnum b : CalculateOnEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("calculateOn")
  private CalculateOnEnum calculateOn = null;

  /**
   * Gets or Sets cashDiscount
   */
  public enum CashDiscountEnum {
    TOTAXABLEAMOUNT("ToTaxableAmount"),
    
    TOPROMTPAYMENT("ToPromtPayment"),
    
    TOTAXAMOUNT("ToTaxAmount"),
    
    ADJUSTTAX("AdjustTax"),
    
    NOADJUST("NoAdjust");

    private String value;

    CashDiscountEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static CashDiscountEnum fromValue(String text) {
      for (CashDiscountEnum b : CashDiscountEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("cashDiscount")
  private CashDiscountEnum cashDiscount = null;

  public VatCategoryLineDto vatId(String vatId) {
    this.vatId = vatId;
    return this;
  }

   /**
   * Get vatId
   * @return vatId
  **/
  @ApiModelProperty(value = "")
  public String getVatId() {
    return vatId;
  }

  public void setVatId(String vatId) {
    this.vatId = vatId;
  }

  public VatCategoryLineDto description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @ApiModelProperty(value = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public VatCategoryLineDto type(TypeEnum type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @ApiModelProperty(value = "")
  public TypeEnum getType() {
    return type;
  }

  public void setType(TypeEnum type) {
    this.type = type;
  }

  public VatCategoryLineDto calculateOn(CalculateOnEnum calculateOn) {
    this.calculateOn = calculateOn;
    return this;
  }

   /**
   * Get calculateOn
   * @return calculateOn
  **/
  @ApiModelProperty(value = "")
  public CalculateOnEnum getCalculateOn() {
    return calculateOn;
  }

  public void setCalculateOn(CalculateOnEnum calculateOn) {
    this.calculateOn = calculateOn;
  }

  public VatCategoryLineDto cashDiscount(CashDiscountEnum cashDiscount) {
    this.cashDiscount = cashDiscount;
    return this;
  }

   /**
   * Get cashDiscount
   * @return cashDiscount
  **/
  @ApiModelProperty(value = "")
  public CashDiscountEnum getCashDiscount() {
    return cashDiscount;
  }

  public void setCashDiscount(CashDiscountEnum cashDiscount) {
    this.cashDiscount = cashDiscount;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    VatCategoryLineDto vatCategoryLineDto = (VatCategoryLineDto) o;
    return Objects.equals(this.vatId, vatCategoryLineDto.vatId) &&
        Objects.equals(this.description, vatCategoryLineDto.description) &&
        Objects.equals(this.type, vatCategoryLineDto.type) &&
        Objects.equals(this.calculateOn, vatCategoryLineDto.calculateOn) &&
        Objects.equals(this.cashDiscount, vatCategoryLineDto.cashDiscount);
  }

  @Override
  public int hashCode() {
    return Objects.hash(vatId, description, type, calculateOn, cashDiscount);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class VatCategoryLineDto {\n");
    
    sb.append("    vatId: ").append(toIndentedString(vatId)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    calculateOn: ").append(toIndentedString(calculateOn)).append("\n");
    sb.append("    cashDiscount: ").append(toIndentedString(cashDiscount)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

