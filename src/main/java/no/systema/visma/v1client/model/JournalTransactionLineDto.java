/*
 * Visma Net API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 6.13.03.0008
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package no.systema.visma.v1client.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import no.systema.visma.v1client.model.AttachmentDto;
import no.systema.visma.v1client.model.ProjectIdDescriptionDto;
import no.systema.visma.v1client.model.ProjectTaskIdDescriptionDto;
import no.systema.visma.v1client.model.SubAccountDto;
import no.systema.visma.v1client.model.VatCodeDto;
import no.systema.visma.v1client.model.VatDto;

/**
 * JournalTransactionLineDto
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-04-16T15:04:09.234+02:00")
public class JournalTransactionLineDto {
  @JsonProperty("lineNumber")
  private Integer lineNumber = null;

  @JsonProperty("accountNumber")
  private String accountNumber = null;

  @JsonProperty("description")
  private String description = null;

  @JsonProperty("subaccount")
  private SubAccountDto subaccount = null;

  @JsonProperty("referenceNumber")
  private String referenceNumber = null;

  @JsonProperty("debitAmount")
  private Double debitAmount = null;

  @JsonProperty("debitAmountInCurrency")
  private Double debitAmountInCurrency = null;

  @JsonProperty("creditAmount")
  private Double creditAmount = null;

  @JsonProperty("creditAmountInCurrency")
  private Double creditAmountInCurrency = null;

  @JsonProperty("transactionDescription")
  private String transactionDescription = null;

  @JsonProperty("vatCode")
  private VatCodeDto vatCode = null;

  @JsonProperty("vat")
  private VatDto vat = null;

  @JsonProperty("branch")
  private String branch = null;

  @JsonProperty("customerSupplier")
  private String customerSupplier = null;

  @JsonProperty("transactionType")
  private String transactionType = null;

  /**
   * Gets or Sets module
   */
  public enum ModuleEnum {
    MODULEGL("ModuleGL"),
    
    MODULEAP("ModuleAP"),
    
    MODULEAR("ModuleAR"),
    
    MODULECA("ModuleCA"),
    
    MODULECM("ModuleCM"),
    
    MODULEIN("ModuleIN"),
    
    MODULESO("ModuleSO"),
    
    MODULEPO("ModulePO"),
    
    MODULEDR("ModuleDR"),
    
    MODULEFA("ModuleFA"),
    
    MODULEEP("ModuleEP"),
    
    MODULEPM("ModulePM"),
    
    MODULETX("ModuleTX"),
    
    MODULECR("ModuleCR");

    private String value;

    ModuleEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static ModuleEnum fromValue(String text) {
      for (ModuleEnum b : ModuleEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("module")
  private ModuleEnum module = null;

  @JsonProperty("uom")
  private String uom = null;

  @JsonProperty("project")
  private ProjectIdDescriptionDto project = null;

  @JsonProperty("projectTask")
  private ProjectTaskIdDescriptionDto projectTask = null;

  @JsonProperty("attachments")
  private List<AttachmentDto> attachments = null;

  public JournalTransactionLineDto lineNumber(Integer lineNumber) {
    this.lineNumber = lineNumber;
    return this;
  }

   /**
   * Get lineNumber
   * @return lineNumber
  **/
  @ApiModelProperty(value = "")
  public Integer getLineNumber() {
    return lineNumber;
  }

  public void setLineNumber(Integer lineNumber) {
    this.lineNumber = lineNumber;
  }

  public JournalTransactionLineDto accountNumber(String accountNumber) {
    this.accountNumber = accountNumber;
    return this;
  }

   /**
   * Get accountNumber
   * @return accountNumber
  **/
  @ApiModelProperty(value = "")
  public String getAccountNumber() {
    return accountNumber;
  }

  public void setAccountNumber(String accountNumber) {
    this.accountNumber = accountNumber;
  }

  public JournalTransactionLineDto description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @ApiModelProperty(value = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public JournalTransactionLineDto subaccount(SubAccountDto subaccount) {
    this.subaccount = subaccount;
    return this;
  }

   /**
   * Get subaccount
   * @return subaccount
  **/
  @ApiModelProperty(value = "")
  public SubAccountDto getSubaccount() {
    return subaccount;
  }

  public void setSubaccount(SubAccountDto subaccount) {
    this.subaccount = subaccount;
  }

  public JournalTransactionLineDto referenceNumber(String referenceNumber) {
    this.referenceNumber = referenceNumber;
    return this;
  }

   /**
   * Get referenceNumber
   * @return referenceNumber
  **/
  @ApiModelProperty(value = "")
  public String getReferenceNumber() {
    return referenceNumber;
  }

  public void setReferenceNumber(String referenceNumber) {
    this.referenceNumber = referenceNumber;
  }

  public JournalTransactionLineDto debitAmount(Double debitAmount) {
    this.debitAmount = debitAmount;
    return this;
  }

   /**
   * Get debitAmount
   * @return debitAmount
  **/
  @ApiModelProperty(value = "")
  public Double getDebitAmount() {
    return debitAmount;
  }

  public void setDebitAmount(Double debitAmount) {
    this.debitAmount = debitAmount;
  }

  public JournalTransactionLineDto debitAmountInCurrency(Double debitAmountInCurrency) {
    this.debitAmountInCurrency = debitAmountInCurrency;
    return this;
  }

   /**
   * Get debitAmountInCurrency
   * @return debitAmountInCurrency
  **/
  @ApiModelProperty(value = "")
  public Double getDebitAmountInCurrency() {
    return debitAmountInCurrency;
  }

  public void setDebitAmountInCurrency(Double debitAmountInCurrency) {
    this.debitAmountInCurrency = debitAmountInCurrency;
  }

  public JournalTransactionLineDto creditAmount(Double creditAmount) {
    this.creditAmount = creditAmount;
    return this;
  }

   /**
   * Get creditAmount
   * @return creditAmount
  **/
  @ApiModelProperty(value = "")
  public Double getCreditAmount() {
    return creditAmount;
  }

  public void setCreditAmount(Double creditAmount) {
    this.creditAmount = creditAmount;
  }

  public JournalTransactionLineDto creditAmountInCurrency(Double creditAmountInCurrency) {
    this.creditAmountInCurrency = creditAmountInCurrency;
    return this;
  }

   /**
   * Get creditAmountInCurrency
   * @return creditAmountInCurrency
  **/
  @ApiModelProperty(value = "")
  public Double getCreditAmountInCurrency() {
    return creditAmountInCurrency;
  }

  public void setCreditAmountInCurrency(Double creditAmountInCurrency) {
    this.creditAmountInCurrency = creditAmountInCurrency;
  }

  public JournalTransactionLineDto transactionDescription(String transactionDescription) {
    this.transactionDescription = transactionDescription;
    return this;
  }

   /**
   * Get transactionDescription
   * @return transactionDescription
  **/
  @ApiModelProperty(value = "")
  public String getTransactionDescription() {
    return transactionDescription;
  }

  public void setTransactionDescription(String transactionDescription) {
    this.transactionDescription = transactionDescription;
  }

  public JournalTransactionLineDto vatCode(VatCodeDto vatCode) {
    this.vatCode = vatCode;
    return this;
  }

   /**
   * Get vatCode
   * @return vatCode
  **/
  @ApiModelProperty(value = "")
  public VatCodeDto getVatCode() {
    return vatCode;
  }

  public void setVatCode(VatCodeDto vatCode) {
    this.vatCode = vatCode;
  }

  public JournalTransactionLineDto vat(VatDto vat) {
    this.vat = vat;
    return this;
  }

   /**
   * Get vat
   * @return vat
  **/
  @ApiModelProperty(value = "")
  public VatDto getVat() {
    return vat;
  }

  public void setVat(VatDto vat) {
    this.vat = vat;
  }

  public JournalTransactionLineDto branch(String branch) {
    this.branch = branch;
    return this;
  }

   /**
   * Get branch
   * @return branch
  **/
  @ApiModelProperty(value = "")
  public String getBranch() {
    return branch;
  }

  public void setBranch(String branch) {
    this.branch = branch;
  }

  public JournalTransactionLineDto customerSupplier(String customerSupplier) {
    this.customerSupplier = customerSupplier;
    return this;
  }

   /**
   * Get customerSupplier
   * @return customerSupplier
  **/
  @ApiModelProperty(value = "")
  public String getCustomerSupplier() {
    return customerSupplier;
  }

  public void setCustomerSupplier(String customerSupplier) {
    this.customerSupplier = customerSupplier;
  }

  public JournalTransactionLineDto transactionType(String transactionType) {
    this.transactionType = transactionType;
    return this;
  }

   /**
   * Get transactionType
   * @return transactionType
  **/
  @ApiModelProperty(value = "")
  public String getTransactionType() {
    return transactionType;
  }

  public void setTransactionType(String transactionType) {
    this.transactionType = transactionType;
  }

  public JournalTransactionLineDto module(ModuleEnum module) {
    this.module = module;
    return this;
  }

   /**
   * Get module
   * @return module
  **/
  @ApiModelProperty(value = "")
  public ModuleEnum getModule() {
    return module;
  }

  public void setModule(ModuleEnum module) {
    this.module = module;
  }

  public JournalTransactionLineDto uom(String uom) {
    this.uom = uom;
    return this;
  }

   /**
   * Get uom
   * @return uom
  **/
  @ApiModelProperty(value = "")
  public String getUom() {
    return uom;
  }

  public void setUom(String uom) {
    this.uom = uom;
  }

  public JournalTransactionLineDto project(ProjectIdDescriptionDto project) {
    this.project = project;
    return this;
  }

   /**
   * Get project
   * @return project
  **/
  @ApiModelProperty(value = "")
  public ProjectIdDescriptionDto getProject() {
    return project;
  }

  public void setProject(ProjectIdDescriptionDto project) {
    this.project = project;
  }

  public JournalTransactionLineDto projectTask(ProjectTaskIdDescriptionDto projectTask) {
    this.projectTask = projectTask;
    return this;
  }

   /**
   * Get projectTask
   * @return projectTask
  **/
  @ApiModelProperty(value = "")
  public ProjectTaskIdDescriptionDto getProjectTask() {
    return projectTask;
  }

  public void setProjectTask(ProjectTaskIdDescriptionDto projectTask) {
    this.projectTask = projectTask;
  }

  public JournalTransactionLineDto attachments(List<AttachmentDto> attachments) {
    this.attachments = attachments;
    return this;
  }

  public JournalTransactionLineDto addAttachmentsItem(AttachmentDto attachmentsItem) {
    if (this.attachments == null) {
      this.attachments = new ArrayList<>();
    }
    this.attachments.add(attachmentsItem);
    return this;
  }

   /**
   * Get attachments
   * @return attachments
  **/
  @ApiModelProperty(value = "")
  public List<AttachmentDto> getAttachments() {
    return attachments;
  }

  public void setAttachments(List<AttachmentDto> attachments) {
    this.attachments = attachments;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    JournalTransactionLineDto journalTransactionLineDto = (JournalTransactionLineDto) o;
    return Objects.equals(this.lineNumber, journalTransactionLineDto.lineNumber) &&
        Objects.equals(this.accountNumber, journalTransactionLineDto.accountNumber) &&
        Objects.equals(this.description, journalTransactionLineDto.description) &&
        Objects.equals(this.subaccount, journalTransactionLineDto.subaccount) &&
        Objects.equals(this.referenceNumber, journalTransactionLineDto.referenceNumber) &&
        Objects.equals(this.debitAmount, journalTransactionLineDto.debitAmount) &&
        Objects.equals(this.debitAmountInCurrency, journalTransactionLineDto.debitAmountInCurrency) &&
        Objects.equals(this.creditAmount, journalTransactionLineDto.creditAmount) &&
        Objects.equals(this.creditAmountInCurrency, journalTransactionLineDto.creditAmountInCurrency) &&
        Objects.equals(this.transactionDescription, journalTransactionLineDto.transactionDescription) &&
        Objects.equals(this.vatCode, journalTransactionLineDto.vatCode) &&
        Objects.equals(this.vat, journalTransactionLineDto.vat) &&
        Objects.equals(this.branch, journalTransactionLineDto.branch) &&
        Objects.equals(this.customerSupplier, journalTransactionLineDto.customerSupplier) &&
        Objects.equals(this.transactionType, journalTransactionLineDto.transactionType) &&
        Objects.equals(this.module, journalTransactionLineDto.module) &&
        Objects.equals(this.uom, journalTransactionLineDto.uom) &&
        Objects.equals(this.project, journalTransactionLineDto.project) &&
        Objects.equals(this.projectTask, journalTransactionLineDto.projectTask) &&
        Objects.equals(this.attachments, journalTransactionLineDto.attachments);
  }

  @Override
  public int hashCode() {
    return Objects.hash(lineNumber, accountNumber, description, subaccount, referenceNumber, debitAmount, debitAmountInCurrency, creditAmount, creditAmountInCurrency, transactionDescription, vatCode, vat, branch, customerSupplier, transactionType, module, uom, project, projectTask, attachments);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class JournalTransactionLineDto {\n");
    
    sb.append("    lineNumber: ").append(toIndentedString(lineNumber)).append("\n");
    sb.append("    accountNumber: ").append(toIndentedString(accountNumber)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    subaccount: ").append(toIndentedString(subaccount)).append("\n");
    sb.append("    referenceNumber: ").append(toIndentedString(referenceNumber)).append("\n");
    sb.append("    debitAmount: ").append(toIndentedString(debitAmount)).append("\n");
    sb.append("    debitAmountInCurrency: ").append(toIndentedString(debitAmountInCurrency)).append("\n");
    sb.append("    creditAmount: ").append(toIndentedString(creditAmount)).append("\n");
    sb.append("    creditAmountInCurrency: ").append(toIndentedString(creditAmountInCurrency)).append("\n");
    sb.append("    transactionDescription: ").append(toIndentedString(transactionDescription)).append("\n");
    sb.append("    vatCode: ").append(toIndentedString(vatCode)).append("\n");
    sb.append("    vat: ").append(toIndentedString(vat)).append("\n");
    sb.append("    branch: ").append(toIndentedString(branch)).append("\n");
    sb.append("    customerSupplier: ").append(toIndentedString(customerSupplier)).append("\n");
    sb.append("    transactionType: ").append(toIndentedString(transactionType)).append("\n");
    sb.append("    module: ").append(toIndentedString(module)).append("\n");
    sb.append("    uom: ").append(toIndentedString(uom)).append("\n");
    sb.append("    project: ").append(toIndentedString(project)).append("\n");
    sb.append("    projectTask: ").append(toIndentedString(projectTask)).append("\n");
    sb.append("    attachments: ").append(toIndentedString(attachments)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

