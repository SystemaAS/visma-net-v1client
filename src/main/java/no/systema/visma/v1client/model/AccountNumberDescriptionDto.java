/*
 * Visma Net API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 6.13.03.0008
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package no.systema.visma.v1client.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import no.systema.visma.v1client.model.ExternalCodeNumberDescriptionDto;

/**
 * AccountNumberDescriptionDto
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-04-16T15:04:09.234+02:00")
public class AccountNumberDescriptionDto {
  /**
   * Gets or Sets type
   */
  public enum TypeEnum {
    ASSET("Asset"),
    
    LIABILITY("Liability"),
    
    INCOME("Income"),
    
    EXPENSE("Expense");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static TypeEnum fromValue(String text) {
      for (TypeEnum b : TypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("type")
  private TypeEnum type = null;

  @JsonProperty("externalCode1")
  private String externalCode1 = null;

  @JsonProperty("externalCode2")
  private String externalCode2 = null;

  @JsonProperty("externalCode1Info")
  private ExternalCodeNumberDescriptionDto externalCode1Info = null;

  @JsonProperty("externalCode2Info")
  private ExternalCodeNumberDescriptionDto externalCode2Info = null;

  @JsonProperty("number")
  private String number = null;

  @JsonProperty("description")
  private String description = null;

  public AccountNumberDescriptionDto type(TypeEnum type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @ApiModelProperty(value = "")
  public TypeEnum getType() {
    return type;
  }

  public void setType(TypeEnum type) {
    this.type = type;
  }

  public AccountNumberDescriptionDto externalCode1(String externalCode1) {
    this.externalCode1 = externalCode1;
    return this;
  }

   /**
   * ExternalCode1 is deprecated, please use ExternalCode1Info instead.
   * @return externalCode1
  **/
  @ApiModelProperty(value = "ExternalCode1 is deprecated, please use ExternalCode1Info instead.")
  public String getExternalCode1() {
    return externalCode1;
  }

  public void setExternalCode1(String externalCode1) {
    this.externalCode1 = externalCode1;
  }

  public AccountNumberDescriptionDto externalCode2(String externalCode2) {
    this.externalCode2 = externalCode2;
    return this;
  }

   /**
   * ExternalCode2 is deprecated, please use ExternalCode2Info instead.
   * @return externalCode2
  **/
  @ApiModelProperty(value = "ExternalCode2 is deprecated, please use ExternalCode2Info instead.")
  public String getExternalCode2() {
    return externalCode2;
  }

  public void setExternalCode2(String externalCode2) {
    this.externalCode2 = externalCode2;
  }

  public AccountNumberDescriptionDto externalCode1Info(ExternalCodeNumberDescriptionDto externalCode1Info) {
    this.externalCode1Info = externalCode1Info;
    return this;
  }

   /**
   * Get externalCode1Info
   * @return externalCode1Info
  **/
  @ApiModelProperty(value = "")
  public ExternalCodeNumberDescriptionDto getExternalCode1Info() {
    return externalCode1Info;
  }

  public void setExternalCode1Info(ExternalCodeNumberDescriptionDto externalCode1Info) {
    this.externalCode1Info = externalCode1Info;
  }

  public AccountNumberDescriptionDto externalCode2Info(ExternalCodeNumberDescriptionDto externalCode2Info) {
    this.externalCode2Info = externalCode2Info;
    return this;
  }

   /**
   * Get externalCode2Info
   * @return externalCode2Info
  **/
  @ApiModelProperty(value = "")
  public ExternalCodeNumberDescriptionDto getExternalCode2Info() {
    return externalCode2Info;
  }

  public void setExternalCode2Info(ExternalCodeNumberDescriptionDto externalCode2Info) {
    this.externalCode2Info = externalCode2Info;
  }

  public AccountNumberDescriptionDto number(String number) {
    this.number = number;
    return this;
  }

   /**
   * Get number
   * @return number
  **/
  @ApiModelProperty(value = "")
  public String getNumber() {
    return number;
  }

  public void setNumber(String number) {
    this.number = number;
  }

  public AccountNumberDescriptionDto description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @ApiModelProperty(value = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AccountNumberDescriptionDto accountNumberDescriptionDto = (AccountNumberDescriptionDto) o;
    return Objects.equals(this.type, accountNumberDescriptionDto.type) &&
        Objects.equals(this.externalCode1, accountNumberDescriptionDto.externalCode1) &&
        Objects.equals(this.externalCode2, accountNumberDescriptionDto.externalCode2) &&
        Objects.equals(this.externalCode1Info, accountNumberDescriptionDto.externalCode1Info) &&
        Objects.equals(this.externalCode2Info, accountNumberDescriptionDto.externalCode2Info) &&
        Objects.equals(this.number, accountNumberDescriptionDto.number) &&
        Objects.equals(this.description, accountNumberDescriptionDto.description);
  }

  @Override
  public int hashCode() {
    return Objects.hash(type, externalCode1, externalCode2, externalCode1Info, externalCode2Info, number, description);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AccountNumberDescriptionDto {\n");
    
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    externalCode1: ").append(toIndentedString(externalCode1)).append("\n");
    sb.append("    externalCode2: ").append(toIndentedString(externalCode2)).append("\n");
    sb.append("    externalCode1Info: ").append(toIndentedString(externalCode1Info)).append("\n");
    sb.append("    externalCode2Info: ").append(toIndentedString(externalCode2Info)).append("\n");
    sb.append("    number: ").append(toIndentedString(number)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

