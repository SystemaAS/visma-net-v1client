/*
 * Visma Net API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 6.13.03.0008
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package no.systema.visma.v1client.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import no.systema.visma.v1client.model.PaymentMethodDetailDto;

/**
 * This class represents a Payment Method in PaymentMethodController. Used for getting data.
 */
@ApiModel(description = "This class represents a Payment Method in PaymentMethodController. Used for getting data.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-04-16T15:04:09.234+02:00")
public class PaymentMethodDto {
  @JsonProperty("paymentMethodID")
  private String paymentMethodID = null;

  @JsonProperty("active")
  private Boolean active = null;

  /**
   * Gets or Sets meansOfPayment
   */
  public enum MeansOfPaymentEnum {
    CREDITCARD("CreditCard"),
    
    CASHORCHECK("CashOrCheck"),
    
    DIRECTDEPOSIT("DirectDeposit");

    private String value;

    MeansOfPaymentEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static MeansOfPaymentEnum fromValue(String text) {
      for (MeansOfPaymentEnum b : MeansOfPaymentEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("meansOfPayment")
  private MeansOfPaymentEnum meansOfPayment = null;

  @JsonProperty("description")
  private String description = null;

  @JsonProperty("useInAP")
  private Boolean useInAP = null;

  @JsonProperty("details")
  private List<PaymentMethodDetailDto> details = null;

  public PaymentMethodDto paymentMethodID(String paymentMethodID) {
    this.paymentMethodID = paymentMethodID;
    return this;
  }

   /**
   * Get paymentMethodID
   * @return paymentMethodID
  **/
  @ApiModelProperty(value = "")
  public String getPaymentMethodID() {
    return paymentMethodID;
  }

  public void setPaymentMethodID(String paymentMethodID) {
    this.paymentMethodID = paymentMethodID;
  }

  public PaymentMethodDto active(Boolean active) {
    this.active = active;
    return this;
  }

   /**
   * Get active
   * @return active
  **/
  @ApiModelProperty(value = "")
  public Boolean isActive() {
    return active;
  }

  public void setActive(Boolean active) {
    this.active = active;
  }

  public PaymentMethodDto meansOfPayment(MeansOfPaymentEnum meansOfPayment) {
    this.meansOfPayment = meansOfPayment;
    return this;
  }

   /**
   * Get meansOfPayment
   * @return meansOfPayment
  **/
  @ApiModelProperty(value = "")
  public MeansOfPaymentEnum getMeansOfPayment() {
    return meansOfPayment;
  }

  public void setMeansOfPayment(MeansOfPaymentEnum meansOfPayment) {
    this.meansOfPayment = meansOfPayment;
  }

  public PaymentMethodDto description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @ApiModelProperty(value = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public PaymentMethodDto useInAP(Boolean useInAP) {
    this.useInAP = useInAP;
    return this;
  }

   /**
   * Get useInAP
   * @return useInAP
  **/
  @ApiModelProperty(value = "")
  public Boolean isUseInAP() {
    return useInAP;
  }

  public void setUseInAP(Boolean useInAP) {
    this.useInAP = useInAP;
  }

  public PaymentMethodDto details(List<PaymentMethodDetailDto> details) {
    this.details = details;
    return this;
  }

  public PaymentMethodDto addDetailsItem(PaymentMethodDetailDto detailsItem) {
    if (this.details == null) {
      this.details = new ArrayList<>();
    }
    this.details.add(detailsItem);
    return this;
  }

   /**
   * Get details
   * @return details
  **/
  @ApiModelProperty(value = "")
  public List<PaymentMethodDetailDto> getDetails() {
    return details;
  }

  public void setDetails(List<PaymentMethodDetailDto> details) {
    this.details = details;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PaymentMethodDto paymentMethodDto = (PaymentMethodDto) o;
    return Objects.equals(this.paymentMethodID, paymentMethodDto.paymentMethodID) &&
        Objects.equals(this.active, paymentMethodDto.active) &&
        Objects.equals(this.meansOfPayment, paymentMethodDto.meansOfPayment) &&
        Objects.equals(this.description, paymentMethodDto.description) &&
        Objects.equals(this.useInAP, paymentMethodDto.useInAP) &&
        Objects.equals(this.details, paymentMethodDto.details);
  }

  @Override
  public int hashCode() {
    return Objects.hash(paymentMethodID, active, meansOfPayment, description, useInAP, details);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PaymentMethodDto {\n");
    
    sb.append("    paymentMethodID: ").append(toIndentedString(paymentMethodID)).append("\n");
    sb.append("    active: ").append(toIndentedString(active)).append("\n");
    sb.append("    meansOfPayment: ").append(toIndentedString(meansOfPayment)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    useInAP: ").append(toIndentedString(useInAP)).append("\n");
    sb.append("    details: ").append(toIndentedString(details)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

