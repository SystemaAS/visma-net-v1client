/*
 * Visma Net API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 6.13.03.0008
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package no.systema.visma.v1client.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.UUID;
import no.systema.visma.v1client.model.DtoValueNullableBoolean;
import no.systema.visma.v1client.model.DtoValueNullableDateTime;
import no.systema.visma.v1client.model.DtoValueNullableDecimal;
import no.systema.visma.v1client.model.DtoValueString;

/**
 * CustomerDirectDebitUpdateDto
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-04-16T15:04:09.234+02:00")
public class CustomerDirectDebitUpdateDto {
  /**
   * Gets or Sets operation
   */
  public enum OperationEnum {
    INSERT("Insert"),
    
    UPDATE("Update"),
    
    DELETE("Delete");

    private String value;

    OperationEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static OperationEnum fromValue(String text) {
      for (OperationEnum b : OperationEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("operation")
  private OperationEnum operation = null;

  @JsonProperty("id")
  private UUID id = null;

  @JsonProperty("mandateId")
  private DtoValueString mandateId = null;

  @JsonProperty("mandateDescription")
  private DtoValueString mandateDescription = null;

  @JsonProperty("dateOfSignature")
  private DtoValueNullableDateTime dateOfSignature = null;

  @JsonProperty("isDefault")
  private DtoValueNullableBoolean isDefault = null;

  @JsonProperty("oneTime")
  private DtoValueNullableBoolean oneTime = null;

  @JsonProperty("bic")
  private DtoValueString bic = null;

  @JsonProperty("iban")
  private DtoValueString iban = null;

  @JsonProperty("lastCollectionDate")
  private DtoValueNullableDateTime lastCollectionDate = null;

  @JsonProperty("maxAmount")
  private DtoValueNullableDecimal maxAmount = null;

  @JsonProperty("expirationDate")
  private DtoValueNullableDateTime expirationDate = null;

  public CustomerDirectDebitUpdateDto operation(OperationEnum operation) {
    this.operation = operation;
    return this;
  }

   /**
   * Get operation
   * @return operation
  **/
  @ApiModelProperty(value = "")
  public OperationEnum getOperation() {
    return operation;
  }

  public void setOperation(OperationEnum operation) {
    this.operation = operation;
  }

  public CustomerDirectDebitUpdateDto id(UUID id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(value = "")
  public UUID getId() {
    return id;
  }

  public void setId(UUID id) {
    this.id = id;
  }

  public CustomerDirectDebitUpdateDto mandateId(DtoValueString mandateId) {
    this.mandateId = mandateId;
    return this;
  }

   /**
   * Get mandateId
   * @return mandateId
  **/
  @ApiModelProperty(value = "")
  public DtoValueString getMandateId() {
    return mandateId;
  }

  public void setMandateId(DtoValueString mandateId) {
    this.mandateId = mandateId;
  }

  public CustomerDirectDebitUpdateDto mandateDescription(DtoValueString mandateDescription) {
    this.mandateDescription = mandateDescription;
    return this;
  }

   /**
   * Get mandateDescription
   * @return mandateDescription
  **/
  @ApiModelProperty(value = "")
  public DtoValueString getMandateDescription() {
    return mandateDescription;
  }

  public void setMandateDescription(DtoValueString mandateDescription) {
    this.mandateDescription = mandateDescription;
  }

  public CustomerDirectDebitUpdateDto dateOfSignature(DtoValueNullableDateTime dateOfSignature) {
    this.dateOfSignature = dateOfSignature;
    return this;
  }

   /**
   * Get dateOfSignature
   * @return dateOfSignature
  **/
  @ApiModelProperty(value = "")
  public DtoValueNullableDateTime getDateOfSignature() {
    return dateOfSignature;
  }

  public void setDateOfSignature(DtoValueNullableDateTime dateOfSignature) {
    this.dateOfSignature = dateOfSignature;
  }

  public CustomerDirectDebitUpdateDto isDefault(DtoValueNullableBoolean isDefault) {
    this.isDefault = isDefault;
    return this;
  }

   /**
   * Get isDefault
   * @return isDefault
  **/
  @ApiModelProperty(value = "")
  public DtoValueNullableBoolean getIsDefault() {
    return isDefault;
  }

  public void setIsDefault(DtoValueNullableBoolean isDefault) {
    this.isDefault = isDefault;
  }

  public CustomerDirectDebitUpdateDto oneTime(DtoValueNullableBoolean oneTime) {
    this.oneTime = oneTime;
    return this;
  }

   /**
   * Get oneTime
   * @return oneTime
  **/
  @ApiModelProperty(value = "")
  public DtoValueNullableBoolean getOneTime() {
    return oneTime;
  }

  public void setOneTime(DtoValueNullableBoolean oneTime) {
    this.oneTime = oneTime;
  }

  public CustomerDirectDebitUpdateDto bic(DtoValueString bic) {
    this.bic = bic;
    return this;
  }

   /**
   * Get bic
   * @return bic
  **/
  @ApiModelProperty(value = "")
  public DtoValueString getBic() {
    return bic;
  }

  public void setBic(DtoValueString bic) {
    this.bic = bic;
  }

  public CustomerDirectDebitUpdateDto iban(DtoValueString iban) {
    this.iban = iban;
    return this;
  }

   /**
   * Get iban
   * @return iban
  **/
  @ApiModelProperty(value = "")
  public DtoValueString getIban() {
    return iban;
  }

  public void setIban(DtoValueString iban) {
    this.iban = iban;
  }

  public CustomerDirectDebitUpdateDto lastCollectionDate(DtoValueNullableDateTime lastCollectionDate) {
    this.lastCollectionDate = lastCollectionDate;
    return this;
  }

   /**
   * Get lastCollectionDate
   * @return lastCollectionDate
  **/
  @ApiModelProperty(value = "")
  public DtoValueNullableDateTime getLastCollectionDate() {
    return lastCollectionDate;
  }

  public void setLastCollectionDate(DtoValueNullableDateTime lastCollectionDate) {
    this.lastCollectionDate = lastCollectionDate;
  }

  public CustomerDirectDebitUpdateDto maxAmount(DtoValueNullableDecimal maxAmount) {
    this.maxAmount = maxAmount;
    return this;
  }

   /**
   * Get maxAmount
   * @return maxAmount
  **/
  @ApiModelProperty(value = "")
  public DtoValueNullableDecimal getMaxAmount() {
    return maxAmount;
  }

  public void setMaxAmount(DtoValueNullableDecimal maxAmount) {
    this.maxAmount = maxAmount;
  }

  public CustomerDirectDebitUpdateDto expirationDate(DtoValueNullableDateTime expirationDate) {
    this.expirationDate = expirationDate;
    return this;
  }

   /**
   * Get expirationDate
   * @return expirationDate
  **/
  @ApiModelProperty(value = "")
  public DtoValueNullableDateTime getExpirationDate() {
    return expirationDate;
  }

  public void setExpirationDate(DtoValueNullableDateTime expirationDate) {
    this.expirationDate = expirationDate;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CustomerDirectDebitUpdateDto customerDirectDebitUpdateDto = (CustomerDirectDebitUpdateDto) o;
    return Objects.equals(this.operation, customerDirectDebitUpdateDto.operation) &&
        Objects.equals(this.id, customerDirectDebitUpdateDto.id) &&
        Objects.equals(this.mandateId, customerDirectDebitUpdateDto.mandateId) &&
        Objects.equals(this.mandateDescription, customerDirectDebitUpdateDto.mandateDescription) &&
        Objects.equals(this.dateOfSignature, customerDirectDebitUpdateDto.dateOfSignature) &&
        Objects.equals(this.isDefault, customerDirectDebitUpdateDto.isDefault) &&
        Objects.equals(this.oneTime, customerDirectDebitUpdateDto.oneTime) &&
        Objects.equals(this.bic, customerDirectDebitUpdateDto.bic) &&
        Objects.equals(this.iban, customerDirectDebitUpdateDto.iban) &&
        Objects.equals(this.lastCollectionDate, customerDirectDebitUpdateDto.lastCollectionDate) &&
        Objects.equals(this.maxAmount, customerDirectDebitUpdateDto.maxAmount) &&
        Objects.equals(this.expirationDate, customerDirectDebitUpdateDto.expirationDate);
  }

  @Override
  public int hashCode() {
    return Objects.hash(operation, id, mandateId, mandateDescription, dateOfSignature, isDefault, oneTime, bic, iban, lastCollectionDate, maxAmount, expirationDate);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CustomerDirectDebitUpdateDto {\n");
    
    sb.append("    operation: ").append(toIndentedString(operation)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    mandateId: ").append(toIndentedString(mandateId)).append("\n");
    sb.append("    mandateDescription: ").append(toIndentedString(mandateDescription)).append("\n");
    sb.append("    dateOfSignature: ").append(toIndentedString(dateOfSignature)).append("\n");
    sb.append("    isDefault: ").append(toIndentedString(isDefault)).append("\n");
    sb.append("    oneTime: ").append(toIndentedString(oneTime)).append("\n");
    sb.append("    bic: ").append(toIndentedString(bic)).append("\n");
    sb.append("    iban: ").append(toIndentedString(iban)).append("\n");
    sb.append("    lastCollectionDate: ").append(toIndentedString(lastCollectionDate)).append("\n");
    sb.append("    maxAmount: ").append(toIndentedString(maxAmount)).append("\n");
    sb.append("    expirationDate: ").append(toIndentedString(expirationDate)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

