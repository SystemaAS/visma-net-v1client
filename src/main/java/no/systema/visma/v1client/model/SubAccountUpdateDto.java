/*
 * Visma Net API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 6.13.03.0008
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package no.systema.visma.v1client.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import no.systema.visma.v1client.model.DtoValueBoolean;
import no.systema.visma.v1client.model.DtoValueString;

/**
 * SubAccountUpdateDto
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-04-16T15:04:09.234+02:00")
public class SubAccountUpdateDto {
  @JsonProperty("subaccountId")
  private DtoValueString subaccountId = null;

  @JsonProperty("subaccountCd")
  private DtoValueString subaccountCd = null;

  @JsonProperty("description")
  private DtoValueString description = null;

  @JsonProperty("active")
  private DtoValueBoolean active = null;

  public SubAccountUpdateDto subaccountId(DtoValueString subaccountId) {
    this.subaccountId = subaccountId;
    return this;
  }

   /**
   * Mandatory field, identifies the subaccount to update.
   * @return subaccountId
  **/
  @ApiModelProperty(required = true, value = "Mandatory field, identifies the subaccount to update.")
  public DtoValueString getSubaccountId() {
    return subaccountId;
  }

  public void setSubaccountId(DtoValueString subaccountId) {
    this.subaccountId = subaccountId;
  }

  public SubAccountUpdateDto subaccountCd(DtoValueString subaccountCd) {
    this.subaccountCd = subaccountCd;
    return this;
  }

   /**
   * The property is now considered obsolete, use SubaccountId instead. If SubaccountId is specified in a request, this property is ignored.
   * @return subaccountCd
  **/
  @ApiModelProperty(value = "The property is now considered obsolete, use SubaccountId instead. If SubaccountId is specified in a request, this property is ignored.")
  public DtoValueString getSubaccountCd() {
    return subaccountCd;
  }

  public void setSubaccountCd(DtoValueString subaccountCd) {
    this.subaccountCd = subaccountCd;
  }

  public SubAccountUpdateDto description(DtoValueString description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @ApiModelProperty(value = "")
  public DtoValueString getDescription() {
    return description;
  }

  public void setDescription(DtoValueString description) {
    this.description = description;
  }

  public SubAccountUpdateDto active(DtoValueBoolean active) {
    this.active = active;
    return this;
  }

   /**
   * Get active
   * @return active
  **/
  @ApiModelProperty(value = "")
  public DtoValueBoolean getActive() {
    return active;
  }

  public void setActive(DtoValueBoolean active) {
    this.active = active;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SubAccountUpdateDto subAccountUpdateDto = (SubAccountUpdateDto) o;
    return Objects.equals(this.subaccountId, subAccountUpdateDto.subaccountId) &&
        Objects.equals(this.subaccountCd, subAccountUpdateDto.subaccountCd) &&
        Objects.equals(this.description, subAccountUpdateDto.description) &&
        Objects.equals(this.active, subAccountUpdateDto.active);
  }

  @Override
  public int hashCode() {
    return Objects.hash(subaccountId, subaccountCd, description, active);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SubAccountUpdateDto {\n");
    
    sb.append("    subaccountId: ").append(toIndentedString(subaccountId)).append("\n");
    sb.append("    subaccountCd: ").append(toIndentedString(subaccountCd)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    active: ").append(toIndentedString(active)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

