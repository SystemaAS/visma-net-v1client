/*
 * Visma Net API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 6.13.03.0008
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package no.systema.visma.v1client.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import no.systema.visma.v1client.model.AddressDto;
import no.systema.visma.v1client.model.AttributeIdValueDto;
import no.systema.visma.v1client.model.ClassDescriptionDto;
import no.systema.visma.v1client.model.ContactInfoDto;
import no.systema.visma.v1client.model.CreditTermsDto;
import no.systema.visma.v1client.model.CustomerDirectDebitDto;
import no.systema.visma.v1client.model.LocationDescriptionDto;
import no.systema.visma.v1client.model.ParentRecordDto;
import no.systema.visma.v1client.model.PriceClassDto;
import no.systema.visma.v1client.model.VatZoneDto;

/**
 * This class represents a customer in CustomerController. Used by getting data.
 */
@ApiModel(description = "This class represents a customer in CustomerController. Used by getting data.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-04-16T15:04:09.234+02:00")
public class CustomerDto {
  @JsonProperty("internalId")
  private Integer internalId = null;

  @JsonProperty("number")
  private String number = null;

  @JsonProperty("name")
  private String name = null;

  /**
   * Gets or Sets status
   */
  public enum StatusEnum {
    ACTIVE("Active"),
    
    ONHOLD("OnHold"),
    
    CREDITHOLD("CreditHold"),
    
    INACTIVE("Inactive"),
    
    ONETIME("OneTime");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static StatusEnum fromValue(String text) {
      for (StatusEnum b : StatusEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("status")
  private StatusEnum status = null;

  @JsonProperty("mainAddress")
  private AddressDto mainAddress = null;

  @JsonProperty("mainContact")
  private ContactInfoDto mainContact = null;

  @JsonProperty("accountReference")
  private String accountReference = null;

  @JsonProperty("parentRecord")
  private ParentRecordDto parentRecord = null;

  @JsonProperty("customerClass")
  private ClassDescriptionDto customerClass = null;

  @JsonProperty("creditTerms")
  private CreditTermsDto creditTerms = null;

  @JsonProperty("currencyId")
  private String currencyId = null;

  /**
   * Gets or Sets creditVerification
   */
  public enum CreditVerificationEnum {
    DISABLED("Disabled"),
    
    DAYSPASTDUE("DaysPastDue"),
    
    CREDITLIMIT("CreditLimit"),
    
    LIMITANDDAYSPASTDUE("LimitAndDaysPastDue");

    private String value;

    CreditVerificationEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static CreditVerificationEnum fromValue(String text) {
      for (CreditVerificationEnum b : CreditVerificationEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("creditVerification")
  private CreditVerificationEnum creditVerification = null;

  @JsonProperty("creditLimit")
  private Double creditLimit = null;

  @JsonProperty("creditDaysPastDue")
  private Integer creditDaysPastDue = null;

  @JsonProperty("invoiceAddress")
  private AddressDto invoiceAddress = null;

  @JsonProperty("invoiceContact")
  private ContactInfoDto invoiceContact = null;

  @JsonProperty("printInvoices")
  private Boolean printInvoices = null;

  @JsonProperty("acceptAutoInvoices")
  private Boolean acceptAutoInvoices = null;

  @JsonProperty("sendInvoicesByEmail")
  private Boolean sendInvoicesByEmail = null;

  @JsonProperty("printStatements")
  private Boolean printStatements = null;

  @JsonProperty("sendStatementsByEmail")
  private Boolean sendStatementsByEmail = null;

  @JsonProperty("printMultiCurrencyStatements")
  private Boolean printMultiCurrencyStatements = null;

  /**
   * Gets or Sets statementType
   */
  public enum StatementTypeEnum {
    OPENITEM("OpenItem"),
    
    BALANCEBROUGHTFORWARD("BalanceBroughtForward");

    private String value;

    StatementTypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static StatementTypeEnum fromValue(String text) {
      for (StatementTypeEnum b : StatementTypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("statementType")
  private StatementTypeEnum statementType = null;

  @JsonProperty("deliveryAddress")
  private AddressDto deliveryAddress = null;

  @JsonProperty("deliveryContact")
  private ContactInfoDto deliveryContact = null;

  @JsonProperty("vatRegistrationId")
  private String vatRegistrationId = null;

  @JsonProperty("corporateId")
  private String corporateId = null;

  @JsonProperty("vatZone")
  private VatZoneDto vatZone = null;

  @JsonProperty("location")
  private LocationDescriptionDto location = null;

  @JsonProperty("attributes")
  private List<AttributeIdValueDto> attributes = null;

  @JsonProperty("lastModifiedDateTime")
  private LocalDateTime lastModifiedDateTime = null;

  @JsonProperty("createdDateTime")
  private LocalDateTime createdDateTime = null;

  @JsonProperty("directDebitLines")
  private List<CustomerDirectDebitDto> directDebitLines = null;

  @JsonProperty("priceClass")
  private PriceClassDto priceClass = null;

  @JsonProperty("extras")
  private Map<String, Object> extras = null;

  @JsonProperty("errorInfo")
  private String errorInfo = null;

  public CustomerDto internalId(Integer internalId) {
    this.internalId = internalId;
    return this;
  }

   /**
   * Get internalId
   * @return internalId
  **/
  @ApiModelProperty(value = "")
  public Integer getInternalId() {
    return internalId;
  }

  public void setInternalId(Integer internalId) {
    this.internalId = internalId;
  }

  public CustomerDto number(String number) {
    this.number = number;
    return this;
  }

   /**
   * Get number
   * @return number
  **/
  @ApiModelProperty(value = "")
  public String getNumber() {
    return number;
  }

  public void setNumber(String number) {
    this.number = number;
  }

  public CustomerDto name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @ApiModelProperty(value = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public CustomerDto status(StatusEnum status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @ApiModelProperty(value = "")
  public StatusEnum getStatus() {
    return status;
  }

  public void setStatus(StatusEnum status) {
    this.status = status;
  }

  public CustomerDto mainAddress(AddressDto mainAddress) {
    this.mainAddress = mainAddress;
    return this;
  }

   /**
   * Get mainAddress
   * @return mainAddress
  **/
  @ApiModelProperty(value = "")
  public AddressDto getMainAddress() {
    return mainAddress;
  }

  public void setMainAddress(AddressDto mainAddress) {
    this.mainAddress = mainAddress;
  }

  public CustomerDto mainContact(ContactInfoDto mainContact) {
    this.mainContact = mainContact;
    return this;
  }

   /**
   * Get mainContact
   * @return mainContact
  **/
  @ApiModelProperty(value = "")
  public ContactInfoDto getMainContact() {
    return mainContact;
  }

  public void setMainContact(ContactInfoDto mainContact) {
    this.mainContact = mainContact;
  }

  public CustomerDto accountReference(String accountReference) {
    this.accountReference = accountReference;
    return this;
  }

   /**
   * Get accountReference
   * @return accountReference
  **/
  @ApiModelProperty(value = "")
  public String getAccountReference() {
    return accountReference;
  }

  public void setAccountReference(String accountReference) {
    this.accountReference = accountReference;
  }

  public CustomerDto parentRecord(ParentRecordDto parentRecord) {
    this.parentRecord = parentRecord;
    return this;
  }

   /**
   * Get parentRecord
   * @return parentRecord
  **/
  @ApiModelProperty(value = "")
  public ParentRecordDto getParentRecord() {
    return parentRecord;
  }

  public void setParentRecord(ParentRecordDto parentRecord) {
    this.parentRecord = parentRecord;
  }

  public CustomerDto customerClass(ClassDescriptionDto customerClass) {
    this.customerClass = customerClass;
    return this;
  }

   /**
   * Get customerClass
   * @return customerClass
  **/
  @ApiModelProperty(value = "")
  public ClassDescriptionDto getCustomerClass() {
    return customerClass;
  }

  public void setCustomerClass(ClassDescriptionDto customerClass) {
    this.customerClass = customerClass;
  }

  public CustomerDto creditTerms(CreditTermsDto creditTerms) {
    this.creditTerms = creditTerms;
    return this;
  }

   /**
   * Get creditTerms
   * @return creditTerms
  **/
  @ApiModelProperty(value = "")
  public CreditTermsDto getCreditTerms() {
    return creditTerms;
  }

  public void setCreditTerms(CreditTermsDto creditTerms) {
    this.creditTerms = creditTerms;
  }

  public CustomerDto currencyId(String currencyId) {
    this.currencyId = currencyId;
    return this;
  }

   /**
   * Get currencyId
   * @return currencyId
  **/
  @ApiModelProperty(value = "")
  public String getCurrencyId() {
    return currencyId;
  }

  public void setCurrencyId(String currencyId) {
    this.currencyId = currencyId;
  }

  public CustomerDto creditVerification(CreditVerificationEnum creditVerification) {
    this.creditVerification = creditVerification;
    return this;
  }

   /**
   * Get creditVerification
   * @return creditVerification
  **/
  @ApiModelProperty(value = "")
  public CreditVerificationEnum getCreditVerification() {
    return creditVerification;
  }

  public void setCreditVerification(CreditVerificationEnum creditVerification) {
    this.creditVerification = creditVerification;
  }

  public CustomerDto creditLimit(Double creditLimit) {
    this.creditLimit = creditLimit;
    return this;
  }

   /**
   * Get creditLimit
   * @return creditLimit
  **/
  @ApiModelProperty(value = "")
  public Double getCreditLimit() {
    return creditLimit;
  }

  public void setCreditLimit(Double creditLimit) {
    this.creditLimit = creditLimit;
  }

  public CustomerDto creditDaysPastDue(Integer creditDaysPastDue) {
    this.creditDaysPastDue = creditDaysPastDue;
    return this;
  }

   /**
   * Get creditDaysPastDue
   * @return creditDaysPastDue
  **/
  @ApiModelProperty(value = "")
  public Integer getCreditDaysPastDue() {
    return creditDaysPastDue;
  }

  public void setCreditDaysPastDue(Integer creditDaysPastDue) {
    this.creditDaysPastDue = creditDaysPastDue;
  }

  public CustomerDto invoiceAddress(AddressDto invoiceAddress) {
    this.invoiceAddress = invoiceAddress;
    return this;
  }

   /**
   * Get invoiceAddress
   * @return invoiceAddress
  **/
  @ApiModelProperty(value = "")
  public AddressDto getInvoiceAddress() {
    return invoiceAddress;
  }

  public void setInvoiceAddress(AddressDto invoiceAddress) {
    this.invoiceAddress = invoiceAddress;
  }

  public CustomerDto invoiceContact(ContactInfoDto invoiceContact) {
    this.invoiceContact = invoiceContact;
    return this;
  }

   /**
   * Get invoiceContact
   * @return invoiceContact
  **/
  @ApiModelProperty(value = "")
  public ContactInfoDto getInvoiceContact() {
    return invoiceContact;
  }

  public void setInvoiceContact(ContactInfoDto invoiceContact) {
    this.invoiceContact = invoiceContact;
  }

  public CustomerDto printInvoices(Boolean printInvoices) {
    this.printInvoices = printInvoices;
    return this;
  }

   /**
   * Get printInvoices
   * @return printInvoices
  **/
  @ApiModelProperty(value = "")
  public Boolean isPrintInvoices() {
    return printInvoices;
  }

  public void setPrintInvoices(Boolean printInvoices) {
    this.printInvoices = printInvoices;
  }

  public CustomerDto acceptAutoInvoices(Boolean acceptAutoInvoices) {
    this.acceptAutoInvoices = acceptAutoInvoices;
    return this;
  }

   /**
   * Get acceptAutoInvoices
   * @return acceptAutoInvoices
  **/
  @ApiModelProperty(value = "")
  public Boolean isAcceptAutoInvoices() {
    return acceptAutoInvoices;
  }

  public void setAcceptAutoInvoices(Boolean acceptAutoInvoices) {
    this.acceptAutoInvoices = acceptAutoInvoices;
  }

  public CustomerDto sendInvoicesByEmail(Boolean sendInvoicesByEmail) {
    this.sendInvoicesByEmail = sendInvoicesByEmail;
    return this;
  }

   /**
   * Get sendInvoicesByEmail
   * @return sendInvoicesByEmail
  **/
  @ApiModelProperty(value = "")
  public Boolean isSendInvoicesByEmail() {
    return sendInvoicesByEmail;
  }

  public void setSendInvoicesByEmail(Boolean sendInvoicesByEmail) {
    this.sendInvoicesByEmail = sendInvoicesByEmail;
  }

  public CustomerDto printStatements(Boolean printStatements) {
    this.printStatements = printStatements;
    return this;
  }

   /**
   * Get printStatements
   * @return printStatements
  **/
  @ApiModelProperty(value = "")
  public Boolean isPrintStatements() {
    return printStatements;
  }

  public void setPrintStatements(Boolean printStatements) {
    this.printStatements = printStatements;
  }

  public CustomerDto sendStatementsByEmail(Boolean sendStatementsByEmail) {
    this.sendStatementsByEmail = sendStatementsByEmail;
    return this;
  }

   /**
   * Get sendStatementsByEmail
   * @return sendStatementsByEmail
  **/
  @ApiModelProperty(value = "")
  public Boolean isSendStatementsByEmail() {
    return sendStatementsByEmail;
  }

  public void setSendStatementsByEmail(Boolean sendStatementsByEmail) {
    this.sendStatementsByEmail = sendStatementsByEmail;
  }

  public CustomerDto printMultiCurrencyStatements(Boolean printMultiCurrencyStatements) {
    this.printMultiCurrencyStatements = printMultiCurrencyStatements;
    return this;
  }

   /**
   * Get printMultiCurrencyStatements
   * @return printMultiCurrencyStatements
  **/
  @ApiModelProperty(value = "")
  public Boolean isPrintMultiCurrencyStatements() {
    return printMultiCurrencyStatements;
  }

  public void setPrintMultiCurrencyStatements(Boolean printMultiCurrencyStatements) {
    this.printMultiCurrencyStatements = printMultiCurrencyStatements;
  }

  public CustomerDto statementType(StatementTypeEnum statementType) {
    this.statementType = statementType;
    return this;
  }

   /**
   * Get statementType
   * @return statementType
  **/
  @ApiModelProperty(value = "")
  public StatementTypeEnum getStatementType() {
    return statementType;
  }

  public void setStatementType(StatementTypeEnum statementType) {
    this.statementType = statementType;
  }

  public CustomerDto deliveryAddress(AddressDto deliveryAddress) {
    this.deliveryAddress = deliveryAddress;
    return this;
  }

   /**
   * Get deliveryAddress
   * @return deliveryAddress
  **/
  @ApiModelProperty(value = "")
  public AddressDto getDeliveryAddress() {
    return deliveryAddress;
  }

  public void setDeliveryAddress(AddressDto deliveryAddress) {
    this.deliveryAddress = deliveryAddress;
  }

  public CustomerDto deliveryContact(ContactInfoDto deliveryContact) {
    this.deliveryContact = deliveryContact;
    return this;
  }

   /**
   * Get deliveryContact
   * @return deliveryContact
  **/
  @ApiModelProperty(value = "")
  public ContactInfoDto getDeliveryContact() {
    return deliveryContact;
  }

  public void setDeliveryContact(ContactInfoDto deliveryContact) {
    this.deliveryContact = deliveryContact;
  }

  public CustomerDto vatRegistrationId(String vatRegistrationId) {
    this.vatRegistrationId = vatRegistrationId;
    return this;
  }

   /**
   * Get vatRegistrationId
   * @return vatRegistrationId
  **/
  @ApiModelProperty(value = "")
  public String getVatRegistrationId() {
    return vatRegistrationId;
  }

  public void setVatRegistrationId(String vatRegistrationId) {
    this.vatRegistrationId = vatRegistrationId;
  }

  public CustomerDto corporateId(String corporateId) {
    this.corporateId = corporateId;
    return this;
  }

   /**
   * Get corporateId
   * @return corporateId
  **/
  @ApiModelProperty(value = "")
  public String getCorporateId() {
    return corporateId;
  }

  public void setCorporateId(String corporateId) {
    this.corporateId = corporateId;
  }

  public CustomerDto vatZone(VatZoneDto vatZone) {
    this.vatZone = vatZone;
    return this;
  }

   /**
   * Get vatZone
   * @return vatZone
  **/
  @ApiModelProperty(value = "")
  public VatZoneDto getVatZone() {
    return vatZone;
  }

  public void setVatZone(VatZoneDto vatZone) {
    this.vatZone = vatZone;
  }

  public CustomerDto location(LocationDescriptionDto location) {
    this.location = location;
    return this;
  }

   /**
   * Get location
   * @return location
  **/
  @ApiModelProperty(value = "")
  public LocationDescriptionDto getLocation() {
    return location;
  }

  public void setLocation(LocationDescriptionDto location) {
    this.location = location;
  }

  public CustomerDto attributes(List<AttributeIdValueDto> attributes) {
    this.attributes = attributes;
    return this;
  }

  public CustomerDto addAttributesItem(AttributeIdValueDto attributesItem) {
    if (this.attributes == null) {
      this.attributes = new ArrayList<>();
    }
    this.attributes.add(attributesItem);
    return this;
  }

   /**
   * Get attributes
   * @return attributes
  **/
  @ApiModelProperty(value = "")
  public List<AttributeIdValueDto> getAttributes() {
    return attributes;
  }

  public void setAttributes(List<AttributeIdValueDto> attributes) {
    this.attributes = attributes;
  }

  public CustomerDto lastModifiedDateTime(LocalDateTime lastModifiedDateTime) {
    this.lastModifiedDateTime = lastModifiedDateTime;
    return this;
  }

   /**
   * Get lastModifiedDateTime
   * @return lastModifiedDateTime
  **/
  @ApiModelProperty(value = "")
  public LocalDateTime getLastModifiedDateTime() {
    return lastModifiedDateTime;
  }

  public void setLastModifiedDateTime(LocalDateTime lastModifiedDateTime) {
    this.lastModifiedDateTime = lastModifiedDateTime;
  }

  public CustomerDto createdDateTime(LocalDateTime createdDateTime) {
    this.createdDateTime = createdDateTime;
    return this;
  }

   /**
   * Get createdDateTime
   * @return createdDateTime
  **/
  @ApiModelProperty(value = "")
  public LocalDateTime getCreatedDateTime() {
    return createdDateTime;
  }

  public void setCreatedDateTime(LocalDateTime createdDateTime) {
    this.createdDateTime = createdDateTime;
  }

  public CustomerDto directDebitLines(List<CustomerDirectDebitDto> directDebitLines) {
    this.directDebitLines = directDebitLines;
    return this;
  }

  public CustomerDto addDirectDebitLinesItem(CustomerDirectDebitDto directDebitLinesItem) {
    if (this.directDebitLines == null) {
      this.directDebitLines = new ArrayList<>();
    }
    this.directDebitLines.add(directDebitLinesItem);
    return this;
  }

   /**
   * Get directDebitLines
   * @return directDebitLines
  **/
  @ApiModelProperty(value = "")
  public List<CustomerDirectDebitDto> getDirectDebitLines() {
    return directDebitLines;
  }

  public void setDirectDebitLines(List<CustomerDirectDebitDto> directDebitLines) {
    this.directDebitLines = directDebitLines;
  }

  public CustomerDto priceClass(PriceClassDto priceClass) {
    this.priceClass = priceClass;
    return this;
  }

   /**
   * Get priceClass
   * @return priceClass
  **/
  @ApiModelProperty(value = "")
  public PriceClassDto getPriceClass() {
    return priceClass;
  }

  public void setPriceClass(PriceClassDto priceClass) {
    this.priceClass = priceClass;
  }

  public CustomerDto extras(Map<String, Object> extras) {
    this.extras = extras;
    return this;
  }

  public CustomerDto putExtrasItem(String key, Object extrasItem) {
    if (this.extras == null) {
      this.extras = new HashMap<>();
    }
    this.extras.put(key, extrasItem);
    return this;
  }

   /**
   * Get extras
   * @return extras
  **/
  @ApiModelProperty(value = "")
  public Map<String, Object> getExtras() {
    return extras;
  }

  public void setExtras(Map<String, Object> extras) {
    this.extras = extras;
  }

  public CustomerDto errorInfo(String errorInfo) {
    this.errorInfo = errorInfo;
    return this;
  }

   /**
   * Get errorInfo
   * @return errorInfo
  **/
  @ApiModelProperty(value = "")
  public String getErrorInfo() {
    return errorInfo;
  }

  public void setErrorInfo(String errorInfo) {
    this.errorInfo = errorInfo;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CustomerDto customerDto = (CustomerDto) o;
    return Objects.equals(this.internalId, customerDto.internalId) &&
        Objects.equals(this.number, customerDto.number) &&
        Objects.equals(this.name, customerDto.name) &&
        Objects.equals(this.status, customerDto.status) &&
        Objects.equals(this.mainAddress, customerDto.mainAddress) &&
        Objects.equals(this.mainContact, customerDto.mainContact) &&
        Objects.equals(this.accountReference, customerDto.accountReference) &&
        Objects.equals(this.parentRecord, customerDto.parentRecord) &&
        Objects.equals(this.customerClass, customerDto.customerClass) &&
        Objects.equals(this.creditTerms, customerDto.creditTerms) &&
        Objects.equals(this.currencyId, customerDto.currencyId) &&
        Objects.equals(this.creditVerification, customerDto.creditVerification) &&
        Objects.equals(this.creditLimit, customerDto.creditLimit) &&
        Objects.equals(this.creditDaysPastDue, customerDto.creditDaysPastDue) &&
        Objects.equals(this.invoiceAddress, customerDto.invoiceAddress) &&
        Objects.equals(this.invoiceContact, customerDto.invoiceContact) &&
        Objects.equals(this.printInvoices, customerDto.printInvoices) &&
        Objects.equals(this.acceptAutoInvoices, customerDto.acceptAutoInvoices) &&
        Objects.equals(this.sendInvoicesByEmail, customerDto.sendInvoicesByEmail) &&
        Objects.equals(this.printStatements, customerDto.printStatements) &&
        Objects.equals(this.sendStatementsByEmail, customerDto.sendStatementsByEmail) &&
        Objects.equals(this.printMultiCurrencyStatements, customerDto.printMultiCurrencyStatements) &&
        Objects.equals(this.statementType, customerDto.statementType) &&
        Objects.equals(this.deliveryAddress, customerDto.deliveryAddress) &&
        Objects.equals(this.deliveryContact, customerDto.deliveryContact) &&
        Objects.equals(this.vatRegistrationId, customerDto.vatRegistrationId) &&
        Objects.equals(this.corporateId, customerDto.corporateId) &&
        Objects.equals(this.vatZone, customerDto.vatZone) &&
        Objects.equals(this.location, customerDto.location) &&
        Objects.equals(this.attributes, customerDto.attributes) &&
        Objects.equals(this.lastModifiedDateTime, customerDto.lastModifiedDateTime) &&
        Objects.equals(this.createdDateTime, customerDto.createdDateTime) &&
        Objects.equals(this.directDebitLines, customerDto.directDebitLines) &&
        Objects.equals(this.priceClass, customerDto.priceClass) &&
        Objects.equals(this.extras, customerDto.extras) &&
        Objects.equals(this.errorInfo, customerDto.errorInfo);
  }

  @Override
  public int hashCode() {
    return Objects.hash(internalId, number, name, status, mainAddress, mainContact, accountReference, parentRecord, customerClass, creditTerms, currencyId, creditVerification, creditLimit, creditDaysPastDue, invoiceAddress, invoiceContact, printInvoices, acceptAutoInvoices, sendInvoicesByEmail, printStatements, sendStatementsByEmail, printMultiCurrencyStatements, statementType, deliveryAddress, deliveryContact, vatRegistrationId, corporateId, vatZone, location, attributes, lastModifiedDateTime, createdDateTime, directDebitLines, priceClass, extras, errorInfo);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CustomerDto {\n");
    
    sb.append("    internalId: ").append(toIndentedString(internalId)).append("\n");
    sb.append("    number: ").append(toIndentedString(number)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    mainAddress: ").append(toIndentedString(mainAddress)).append("\n");
    sb.append("    mainContact: ").append(toIndentedString(mainContact)).append("\n");
    sb.append("    accountReference: ").append(toIndentedString(accountReference)).append("\n");
    sb.append("    parentRecord: ").append(toIndentedString(parentRecord)).append("\n");
    sb.append("    customerClass: ").append(toIndentedString(customerClass)).append("\n");
    sb.append("    creditTerms: ").append(toIndentedString(creditTerms)).append("\n");
    sb.append("    currencyId: ").append(toIndentedString(currencyId)).append("\n");
    sb.append("    creditVerification: ").append(toIndentedString(creditVerification)).append("\n");
    sb.append("    creditLimit: ").append(toIndentedString(creditLimit)).append("\n");
    sb.append("    creditDaysPastDue: ").append(toIndentedString(creditDaysPastDue)).append("\n");
    sb.append("    invoiceAddress: ").append(toIndentedString(invoiceAddress)).append("\n");
    sb.append("    invoiceContact: ").append(toIndentedString(invoiceContact)).append("\n");
    sb.append("    printInvoices: ").append(toIndentedString(printInvoices)).append("\n");
    sb.append("    acceptAutoInvoices: ").append(toIndentedString(acceptAutoInvoices)).append("\n");
    sb.append("    sendInvoicesByEmail: ").append(toIndentedString(sendInvoicesByEmail)).append("\n");
    sb.append("    printStatements: ").append(toIndentedString(printStatements)).append("\n");
    sb.append("    sendStatementsByEmail: ").append(toIndentedString(sendStatementsByEmail)).append("\n");
    sb.append("    printMultiCurrencyStatements: ").append(toIndentedString(printMultiCurrencyStatements)).append("\n");
    sb.append("    statementType: ").append(toIndentedString(statementType)).append("\n");
    sb.append("    deliveryAddress: ").append(toIndentedString(deliveryAddress)).append("\n");
    sb.append("    deliveryContact: ").append(toIndentedString(deliveryContact)).append("\n");
    sb.append("    vatRegistrationId: ").append(toIndentedString(vatRegistrationId)).append("\n");
    sb.append("    corporateId: ").append(toIndentedString(corporateId)).append("\n");
    sb.append("    vatZone: ").append(toIndentedString(vatZone)).append("\n");
    sb.append("    location: ").append(toIndentedString(location)).append("\n");
    sb.append("    attributes: ").append(toIndentedString(attributes)).append("\n");
    sb.append("    lastModifiedDateTime: ").append(toIndentedString(lastModifiedDateTime)).append("\n");
    sb.append("    createdDateTime: ").append(toIndentedString(createdDateTime)).append("\n");
    sb.append("    directDebitLines: ").append(toIndentedString(directDebitLines)).append("\n");
    sb.append("    priceClass: ").append(toIndentedString(priceClass)).append("\n");
    sb.append("    extras: ").append(toIndentedString(extras)).append("\n");
    sb.append("    errorInfo: ").append(toIndentedString(errorInfo)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

