/*
 * Visma Net API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 6.13.03.0008
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package no.systema.visma.v1client.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import no.systema.visma.v1client.model.BAccountDescriptionDto;

/**
 * InventoryCrossReferenceDto
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-04-16T15:04:09.234+02:00")
public class InventoryCrossReferenceDto {
  /**
   * Gets or Sets alternateType
   */
  public enum AlternateTypeEnum {
    CPN("CPN"),
    
    VPN("VPN"),
    
    GLOBAL("Global"),
    
    BARCODE("Barcode");

    private String value;

    AlternateTypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static AlternateTypeEnum fromValue(String text) {
      for (AlternateTypeEnum b : AlternateTypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("alternateType")
  private AlternateTypeEnum alternateType = null;

  @JsonProperty("bAccount")
  private BAccountDescriptionDto bAccount = null;

  @JsonProperty("alternateID")
  private String alternateID = null;

  @JsonProperty("description")
  private String description = null;

  public InventoryCrossReferenceDto alternateType(AlternateTypeEnum alternateType) {
    this.alternateType = alternateType;
    return this;
  }

   /**
   * Get alternateType
   * @return alternateType
  **/
  @ApiModelProperty(value = "")
  public AlternateTypeEnum getAlternateType() {
    return alternateType;
  }

  public void setAlternateType(AlternateTypeEnum alternateType) {
    this.alternateType = alternateType;
  }

  public InventoryCrossReferenceDto bAccount(BAccountDescriptionDto bAccount) {
    this.bAccount = bAccount;
    return this;
  }

   /**
   * Get bAccount
   * @return bAccount
  **/
  @ApiModelProperty(value = "")
  public BAccountDescriptionDto getBAccount() {
    return bAccount;
  }

  public void setBAccount(BAccountDescriptionDto bAccount) {
    this.bAccount = bAccount;
  }

  public InventoryCrossReferenceDto alternateID(String alternateID) {
    this.alternateID = alternateID;
    return this;
  }

   /**
   * Get alternateID
   * @return alternateID
  **/
  @ApiModelProperty(value = "")
  public String getAlternateID() {
    return alternateID;
  }

  public void setAlternateID(String alternateID) {
    this.alternateID = alternateID;
  }

  public InventoryCrossReferenceDto description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @ApiModelProperty(value = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InventoryCrossReferenceDto inventoryCrossReferenceDto = (InventoryCrossReferenceDto) o;
    return Objects.equals(this.alternateType, inventoryCrossReferenceDto.alternateType) &&
        Objects.equals(this.bAccount, inventoryCrossReferenceDto.bAccount) &&
        Objects.equals(this.alternateID, inventoryCrossReferenceDto.alternateID) &&
        Objects.equals(this.description, inventoryCrossReferenceDto.description);
  }

  @Override
  public int hashCode() {
    return Objects.hash(alternateType, bAccount, alternateID, description);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InventoryCrossReferenceDto {\n");
    
    sb.append("    alternateType: ").append(toIndentedString(alternateType)).append("\n");
    sb.append("    bAccount: ").append(toIndentedString(bAccount)).append("\n");
    sb.append("    alternateID: ").append(toIndentedString(alternateID)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

