/*
 * Visma Net API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 6.13.03.0008
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package no.systema.visma.v1client.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import no.systema.visma.v1client.model.AttachmentDto;
import no.systema.visma.v1client.model.BranchNumberDto;
import no.systema.visma.v1client.model.CreditTermsDto;
import no.systema.visma.v1client.model.LocationDescriptionDto;
import no.systema.visma.v1client.model.PaymentMethodIdDescriptionDto;
import no.systema.visma.v1client.model.SupplierInvoiceLineDto;
import no.systema.visma.v1client.model.SupplierNumberDto;
import no.systema.visma.v1client.model.TaxDetailDto;

/**
 * This class represents a ApInvoice in SupplierInvoiceController. Used by getting data.
 */
@ApiModel(description = "This class represents a ApInvoice in SupplierInvoiceController. Used by getting data.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-04-16T15:04:09.234+02:00")
public class SupplierInvoiceDto {
  @JsonProperty("taxDetailLines")
  private List<TaxDetailDto> taxDetailLines = null;

  @JsonProperty("attachments")
  private List<AttachmentDto> attachments = null;

  @JsonProperty("invoiceLines")
  private List<SupplierInvoiceLineDto> invoiceLines = null;

  @JsonProperty("hold")
  private Boolean hold = null;

  @JsonProperty("exchangeRate")
  private Double exchangeRate = null;

  @JsonProperty("paymentRefNo")
  private String paymentRefNo = null;

  @JsonProperty("creditTerms")
  private CreditTermsDto creditTerms = null;

  @JsonProperty("cashDiscountDate")
  private LocalDateTime cashDiscountDate = null;

  @JsonProperty("detailTotal")
  private Double detailTotal = null;

  @JsonProperty("detailTotalInCurrency")
  private Double detailTotalInCurrency = null;

  @JsonProperty("vatTaxableTotal")
  private Double vatTaxableTotal = null;

  @JsonProperty("vatTaxableTotalInCurrency")
  private Double vatTaxableTotalInCurrency = null;

  @JsonProperty("vatExemptTotal")
  private Double vatExemptTotal = null;

  @JsonProperty("vatExemptTotalInCurrency")
  private Double vatExemptTotalInCurrency = null;

  @JsonProperty("withholdingTax")
  private Double withholdingTax = null;

  @JsonProperty("withholdingTaxInCurrency")
  private Double withholdingTaxInCurrency = null;

  @JsonProperty("buyerReference")
  private String buyerReference = null;

  @JsonProperty("supplier")
  private SupplierNumberDto supplier = null;

  /**
   * Gets or Sets documentType
   */
  public enum DocumentTypeEnum {
    CHECK("Check"),
    
    CREDITADJ("CreditAdj"),
    
    DEBITADJ("DebitAdj"),
    
    INVOICE("Invoice"),
    
    PREPAYMENT("Prepayment"),
    
    QUICKCHECK("QuickCheck"),
    
    REFUND("Refund"),
    
    VOIDCHECK("VoidCheck"),
    
    VOIDQUICKCHECK("VoidQuickCheck");

    private String value;

    DocumentTypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static DocumentTypeEnum fromValue(String text) {
      for (DocumentTypeEnum b : DocumentTypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("documentType")
  private DocumentTypeEnum documentType = null;

  @JsonProperty("referenceNumber")
  private String referenceNumber = null;

  @JsonProperty("postPeriod")
  private String postPeriod = null;

  @JsonProperty("financialPeriod")
  private String financialPeriod = null;

  @JsonProperty("date")
  private LocalDateTime date = null;

  @JsonProperty("dueDate")
  private LocalDateTime dueDate = null;

  /**
   * Gets or Sets approvalStatus
   */
  public enum ApprovalStatusEnum {
    NEW("New"),
    
    CANCELED("Canceled"),
    
    SENTTOAPPROVAL("SentToApproval"),
    
    RECEIVEDBYAPPROVAL("ReceivedByApproval"),
    
    INPROGRESSAPPROVAL("InProgressApproval"),
    
    REJECTEDINAPPROVAL("RejectedInApproval"),
    
    APPROVEDINAPPROVAL("ApprovedInApproval"),
    
    ACTIVEWORKFLOWAPPROVAL("ActiveWorkflowApproval");

    private String value;

    ApprovalStatusEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static ApprovalStatusEnum fromValue(String text) {
      for (ApprovalStatusEnum b : ApprovalStatusEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("approvalStatus")
  private ApprovalStatusEnum approvalStatus = null;

  /**
   * Gets or Sets status
   */
  public enum StatusEnum {
    HOLD("Hold"),
    
    BALANCED("Balanced"),
    
    VOIDED("Voided"),
    
    SCHEDULED("Scheduled"),
    
    OPEN("Open"),
    
    CLOSED("Closed"),
    
    PRINTED("Printed"),
    
    PREBOOKED("Prebooked"),
    
    RESERVED("Reserved");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static StatusEnum fromValue(String text) {
      for (StatusEnum b : StatusEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("status")
  private StatusEnum status = null;

  @JsonProperty("currencyId")
  private String currencyId = null;

  @JsonProperty("balance")
  private Double balance = null;

  @JsonProperty("balanceInCurrency")
  private Double balanceInCurrency = null;

  @JsonProperty("cashDiscount")
  private Double cashDiscount = null;

  @JsonProperty("cashDiscountInCurrency")
  private Double cashDiscountInCurrency = null;

  @JsonProperty("paymentMethod")
  private PaymentMethodIdDescriptionDto paymentMethod = null;

  @JsonProperty("supplierReference")
  private String supplierReference = null;

  @JsonProperty("description")
  private String description = null;

  @JsonProperty("createdDateTime")
  private LocalDateTime createdDateTime = null;

  @JsonProperty("lastModifiedDateTime")
  private LocalDateTime lastModifiedDateTime = null;

  @JsonProperty("note")
  private String note = null;

  @JsonProperty("closedFinancialPeriod")
  private String closedFinancialPeriod = null;

  @JsonProperty("location")
  private LocationDescriptionDto location = null;

  @JsonProperty("vatTotal")
  private Double vatTotal = null;

  @JsonProperty("vatTotalInCurrency")
  private Double vatTotalInCurrency = null;

  @JsonProperty("branchNumber")
  private BranchNumberDto branchNumber = null;

  @JsonProperty("extras")
  private Map<String, Object> extras = null;

  @JsonProperty("errorInfo")
  private String errorInfo = null;

  public SupplierInvoiceDto taxDetailLines(List<TaxDetailDto> taxDetailLines) {
    this.taxDetailLines = taxDetailLines;
    return this;
  }

  public SupplierInvoiceDto addTaxDetailLinesItem(TaxDetailDto taxDetailLinesItem) {
    if (this.taxDetailLines == null) {
      this.taxDetailLines = new ArrayList<>();
    }
    this.taxDetailLines.add(taxDetailLinesItem);
    return this;
  }

   /**
   * Get taxDetailLines
   * @return taxDetailLines
  **/
  @ApiModelProperty(value = "")
  public List<TaxDetailDto> getTaxDetailLines() {
    return taxDetailLines;
  }

  public void setTaxDetailLines(List<TaxDetailDto> taxDetailLines) {
    this.taxDetailLines = taxDetailLines;
  }

  public SupplierInvoiceDto attachments(List<AttachmentDto> attachments) {
    this.attachments = attachments;
    return this;
  }

  public SupplierInvoiceDto addAttachmentsItem(AttachmentDto attachmentsItem) {
    if (this.attachments == null) {
      this.attachments = new ArrayList<>();
    }
    this.attachments.add(attachmentsItem);
    return this;
  }

   /**
   * Get attachments
   * @return attachments
  **/
  @ApiModelProperty(value = "")
  public List<AttachmentDto> getAttachments() {
    return attachments;
  }

  public void setAttachments(List<AttachmentDto> attachments) {
    this.attachments = attachments;
  }

  public SupplierInvoiceDto invoiceLines(List<SupplierInvoiceLineDto> invoiceLines) {
    this.invoiceLines = invoiceLines;
    return this;
  }

  public SupplierInvoiceDto addInvoiceLinesItem(SupplierInvoiceLineDto invoiceLinesItem) {
    if (this.invoiceLines == null) {
      this.invoiceLines = new ArrayList<>();
    }
    this.invoiceLines.add(invoiceLinesItem);
    return this;
  }

   /**
   * Get invoiceLines
   * @return invoiceLines
  **/
  @ApiModelProperty(value = "")
  public List<SupplierInvoiceLineDto> getInvoiceLines() {
    return invoiceLines;
  }

  public void setInvoiceLines(List<SupplierInvoiceLineDto> invoiceLines) {
    this.invoiceLines = invoiceLines;
  }

  public SupplierInvoiceDto hold(Boolean hold) {
    this.hold = hold;
    return this;
  }

   /**
   * Get hold
   * @return hold
  **/
  @ApiModelProperty(value = "")
  public Boolean isHold() {
    return hold;
  }

  public void setHold(Boolean hold) {
    this.hold = hold;
  }

  public SupplierInvoiceDto exchangeRate(Double exchangeRate) {
    this.exchangeRate = exchangeRate;
    return this;
  }

   /**
   * Get exchangeRate
   * @return exchangeRate
  **/
  @ApiModelProperty(value = "")
  public Double getExchangeRate() {
    return exchangeRate;
  }

  public void setExchangeRate(Double exchangeRate) {
    this.exchangeRate = exchangeRate;
  }

  public SupplierInvoiceDto paymentRefNo(String paymentRefNo) {
    this.paymentRefNo = paymentRefNo;
    return this;
  }

   /**
   * Get paymentRefNo
   * @return paymentRefNo
  **/
  @ApiModelProperty(value = "")
  public String getPaymentRefNo() {
    return paymentRefNo;
  }

  public void setPaymentRefNo(String paymentRefNo) {
    this.paymentRefNo = paymentRefNo;
  }

  public SupplierInvoiceDto creditTerms(CreditTermsDto creditTerms) {
    this.creditTerms = creditTerms;
    return this;
  }

   /**
   * Get creditTerms
   * @return creditTerms
  **/
  @ApiModelProperty(value = "")
  public CreditTermsDto getCreditTerms() {
    return creditTerms;
  }

  public void setCreditTerms(CreditTermsDto creditTerms) {
    this.creditTerms = creditTerms;
  }

  public SupplierInvoiceDto cashDiscountDate(LocalDateTime cashDiscountDate) {
    this.cashDiscountDate = cashDiscountDate;
    return this;
  }

   /**
   * Get cashDiscountDate
   * @return cashDiscountDate
  **/
  @ApiModelProperty(value = "")
  public LocalDateTime getCashDiscountDate() {
    return cashDiscountDate;
  }

  public void setCashDiscountDate(LocalDateTime cashDiscountDate) {
    this.cashDiscountDate = cashDiscountDate;
  }

  public SupplierInvoiceDto detailTotal(Double detailTotal) {
    this.detailTotal = detailTotal;
    return this;
  }

   /**
   * Get detailTotal
   * @return detailTotal
  **/
  @ApiModelProperty(value = "")
  public Double getDetailTotal() {
    return detailTotal;
  }

  public void setDetailTotal(Double detailTotal) {
    this.detailTotal = detailTotal;
  }

  public SupplierInvoiceDto detailTotalInCurrency(Double detailTotalInCurrency) {
    this.detailTotalInCurrency = detailTotalInCurrency;
    return this;
  }

   /**
   * Get detailTotalInCurrency
   * @return detailTotalInCurrency
  **/
  @ApiModelProperty(value = "")
  public Double getDetailTotalInCurrency() {
    return detailTotalInCurrency;
  }

  public void setDetailTotalInCurrency(Double detailTotalInCurrency) {
    this.detailTotalInCurrency = detailTotalInCurrency;
  }

  public SupplierInvoiceDto vatTaxableTotal(Double vatTaxableTotal) {
    this.vatTaxableTotal = vatTaxableTotal;
    return this;
  }

   /**
   * Get vatTaxableTotal
   * @return vatTaxableTotal
  **/
  @ApiModelProperty(value = "")
  public Double getVatTaxableTotal() {
    return vatTaxableTotal;
  }

  public void setVatTaxableTotal(Double vatTaxableTotal) {
    this.vatTaxableTotal = vatTaxableTotal;
  }

  public SupplierInvoiceDto vatTaxableTotalInCurrency(Double vatTaxableTotalInCurrency) {
    this.vatTaxableTotalInCurrency = vatTaxableTotalInCurrency;
    return this;
  }

   /**
   * Get vatTaxableTotalInCurrency
   * @return vatTaxableTotalInCurrency
  **/
  @ApiModelProperty(value = "")
  public Double getVatTaxableTotalInCurrency() {
    return vatTaxableTotalInCurrency;
  }

  public void setVatTaxableTotalInCurrency(Double vatTaxableTotalInCurrency) {
    this.vatTaxableTotalInCurrency = vatTaxableTotalInCurrency;
  }

  public SupplierInvoiceDto vatExemptTotal(Double vatExemptTotal) {
    this.vatExemptTotal = vatExemptTotal;
    return this;
  }

   /**
   * Get vatExemptTotal
   * @return vatExemptTotal
  **/
  @ApiModelProperty(value = "")
  public Double getVatExemptTotal() {
    return vatExemptTotal;
  }

  public void setVatExemptTotal(Double vatExemptTotal) {
    this.vatExemptTotal = vatExemptTotal;
  }

  public SupplierInvoiceDto vatExemptTotalInCurrency(Double vatExemptTotalInCurrency) {
    this.vatExemptTotalInCurrency = vatExemptTotalInCurrency;
    return this;
  }

   /**
   * Get vatExemptTotalInCurrency
   * @return vatExemptTotalInCurrency
  **/
  @ApiModelProperty(value = "")
  public Double getVatExemptTotalInCurrency() {
    return vatExemptTotalInCurrency;
  }

  public void setVatExemptTotalInCurrency(Double vatExemptTotalInCurrency) {
    this.vatExemptTotalInCurrency = vatExemptTotalInCurrency;
  }

  public SupplierInvoiceDto withholdingTax(Double withholdingTax) {
    this.withholdingTax = withholdingTax;
    return this;
  }

   /**
   * Get withholdingTax
   * @return withholdingTax
  **/
  @ApiModelProperty(value = "")
  public Double getWithholdingTax() {
    return withholdingTax;
  }

  public void setWithholdingTax(Double withholdingTax) {
    this.withholdingTax = withholdingTax;
  }

  public SupplierInvoiceDto withholdingTaxInCurrency(Double withholdingTaxInCurrency) {
    this.withholdingTaxInCurrency = withholdingTaxInCurrency;
    return this;
  }

   /**
   * Get withholdingTaxInCurrency
   * @return withholdingTaxInCurrency
  **/
  @ApiModelProperty(value = "")
  public Double getWithholdingTaxInCurrency() {
    return withholdingTaxInCurrency;
  }

  public void setWithholdingTaxInCurrency(Double withholdingTaxInCurrency) {
    this.withholdingTaxInCurrency = withholdingTaxInCurrency;
  }

  public SupplierInvoiceDto buyerReference(String buyerReference) {
    this.buyerReference = buyerReference;
    return this;
  }

   /**
   * Get buyerReference
   * @return buyerReference
  **/
  @ApiModelProperty(value = "")
  public String getBuyerReference() {
    return buyerReference;
  }

  public void setBuyerReference(String buyerReference) {
    this.buyerReference = buyerReference;
  }

  public SupplierInvoiceDto supplier(SupplierNumberDto supplier) {
    this.supplier = supplier;
    return this;
  }

   /**
   * Get supplier
   * @return supplier
  **/
  @ApiModelProperty(value = "")
  public SupplierNumberDto getSupplier() {
    return supplier;
  }

  public void setSupplier(SupplierNumberDto supplier) {
    this.supplier = supplier;
  }

  public SupplierInvoiceDto documentType(DocumentTypeEnum documentType) {
    this.documentType = documentType;
    return this;
  }

   /**
   * Get documentType
   * @return documentType
  **/
  @ApiModelProperty(value = "")
  public DocumentTypeEnum getDocumentType() {
    return documentType;
  }

  public void setDocumentType(DocumentTypeEnum documentType) {
    this.documentType = documentType;
  }

  public SupplierInvoiceDto referenceNumber(String referenceNumber) {
    this.referenceNumber = referenceNumber;
    return this;
  }

   /**
   * Get referenceNumber
   * @return referenceNumber
  **/
  @ApiModelProperty(value = "")
  public String getReferenceNumber() {
    return referenceNumber;
  }

  public void setReferenceNumber(String referenceNumber) {
    this.referenceNumber = referenceNumber;
  }

  public SupplierInvoiceDto postPeriod(String postPeriod) {
    this.postPeriod = postPeriod;
    return this;
  }

   /**
   * The financial period to which the transactions recorded in the document should be posted. Format MMYYYY.
   * @return postPeriod
  **/
  @ApiModelProperty(value = "The financial period to which the transactions recorded in the document should be posted. Format MMYYYY.")
  public String getPostPeriod() {
    return postPeriod;
  }

  public void setPostPeriod(String postPeriod) {
    this.postPeriod = postPeriod;
  }

  public SupplierInvoiceDto financialPeriod(String financialPeriod) {
    this.financialPeriod = financialPeriod;
    return this;
  }

   /**
   * The financial period to which the transactions recorded in the document should be posted. Format YYYYMM.
   * @return financialPeriod
  **/
  @ApiModelProperty(value = "The financial period to which the transactions recorded in the document should be posted. Format YYYYMM.")
  public String getFinancialPeriod() {
    return financialPeriod;
  }

  public void setFinancialPeriod(String financialPeriod) {
    this.financialPeriod = financialPeriod;
  }

  public SupplierInvoiceDto date(LocalDateTime date) {
    this.date = date;
    return this;
  }

   /**
   * Get date
   * @return date
  **/
  @ApiModelProperty(value = "")
  public LocalDateTime getDate() {
    return date;
  }

  public void setDate(LocalDateTime date) {
    this.date = date;
  }

  public SupplierInvoiceDto dueDate(LocalDateTime dueDate) {
    this.dueDate = dueDate;
    return this;
  }

   /**
   * Get dueDate
   * @return dueDate
  **/
  @ApiModelProperty(value = "")
  public LocalDateTime getDueDate() {
    return dueDate;
  }

  public void setDueDate(LocalDateTime dueDate) {
    this.dueDate = dueDate;
  }

  public SupplierInvoiceDto approvalStatus(ApprovalStatusEnum approvalStatus) {
    this.approvalStatus = approvalStatus;
    return this;
  }

   /**
   * Get approvalStatus
   * @return approvalStatus
  **/
  @ApiModelProperty(value = "")
  public ApprovalStatusEnum getApprovalStatus() {
    return approvalStatus;
  }

  public void setApprovalStatus(ApprovalStatusEnum approvalStatus) {
    this.approvalStatus = approvalStatus;
  }

  public SupplierInvoiceDto status(StatusEnum status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @ApiModelProperty(value = "")
  public StatusEnum getStatus() {
    return status;
  }

  public void setStatus(StatusEnum status) {
    this.status = status;
  }

  public SupplierInvoiceDto currencyId(String currencyId) {
    this.currencyId = currencyId;
    return this;
  }

   /**
   * Get currencyId
   * @return currencyId
  **/
  @ApiModelProperty(value = "")
  public String getCurrencyId() {
    return currencyId;
  }

  public void setCurrencyId(String currencyId) {
    this.currencyId = currencyId;
  }

  public SupplierInvoiceDto balance(Double balance) {
    this.balance = balance;
    return this;
  }

   /**
   * Get balance
   * @return balance
  **/
  @ApiModelProperty(value = "")
  public Double getBalance() {
    return balance;
  }

  public void setBalance(Double balance) {
    this.balance = balance;
  }

  public SupplierInvoiceDto balanceInCurrency(Double balanceInCurrency) {
    this.balanceInCurrency = balanceInCurrency;
    return this;
  }

   /**
   * Get balanceInCurrency
   * @return balanceInCurrency
  **/
  @ApiModelProperty(value = "")
  public Double getBalanceInCurrency() {
    return balanceInCurrency;
  }

  public void setBalanceInCurrency(Double balanceInCurrency) {
    this.balanceInCurrency = balanceInCurrency;
  }

  public SupplierInvoiceDto cashDiscount(Double cashDiscount) {
    this.cashDiscount = cashDiscount;
    return this;
  }

   /**
   * Get cashDiscount
   * @return cashDiscount
  **/
  @ApiModelProperty(value = "")
  public Double getCashDiscount() {
    return cashDiscount;
  }

  public void setCashDiscount(Double cashDiscount) {
    this.cashDiscount = cashDiscount;
  }

  public SupplierInvoiceDto cashDiscountInCurrency(Double cashDiscountInCurrency) {
    this.cashDiscountInCurrency = cashDiscountInCurrency;
    return this;
  }

   /**
   * Get cashDiscountInCurrency
   * @return cashDiscountInCurrency
  **/
  @ApiModelProperty(value = "")
  public Double getCashDiscountInCurrency() {
    return cashDiscountInCurrency;
  }

  public void setCashDiscountInCurrency(Double cashDiscountInCurrency) {
    this.cashDiscountInCurrency = cashDiscountInCurrency;
  }

  public SupplierInvoiceDto paymentMethod(PaymentMethodIdDescriptionDto paymentMethod) {
    this.paymentMethod = paymentMethod;
    return this;
  }

   /**
   * Get paymentMethod
   * @return paymentMethod
  **/
  @ApiModelProperty(value = "")
  public PaymentMethodIdDescriptionDto getPaymentMethod() {
    return paymentMethod;
  }

  public void setPaymentMethod(PaymentMethodIdDescriptionDto paymentMethod) {
    this.paymentMethod = paymentMethod;
  }

  public SupplierInvoiceDto supplierReference(String supplierReference) {
    this.supplierReference = supplierReference;
    return this;
  }

   /**
   * Get supplierReference
   * @return supplierReference
  **/
  @ApiModelProperty(value = "")
  public String getSupplierReference() {
    return supplierReference;
  }

  public void setSupplierReference(String supplierReference) {
    this.supplierReference = supplierReference;
  }

  public SupplierInvoiceDto description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @ApiModelProperty(value = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public SupplierInvoiceDto createdDateTime(LocalDateTime createdDateTime) {
    this.createdDateTime = createdDateTime;
    return this;
  }

   /**
   * Get createdDateTime
   * @return createdDateTime
  **/
  @ApiModelProperty(value = "")
  public LocalDateTime getCreatedDateTime() {
    return createdDateTime;
  }

  public void setCreatedDateTime(LocalDateTime createdDateTime) {
    this.createdDateTime = createdDateTime;
  }

  public SupplierInvoiceDto lastModifiedDateTime(LocalDateTime lastModifiedDateTime) {
    this.lastModifiedDateTime = lastModifiedDateTime;
    return this;
  }

   /**
   * Get lastModifiedDateTime
   * @return lastModifiedDateTime
  **/
  @ApiModelProperty(value = "")
  public LocalDateTime getLastModifiedDateTime() {
    return lastModifiedDateTime;
  }

  public void setLastModifiedDateTime(LocalDateTime lastModifiedDateTime) {
    this.lastModifiedDateTime = lastModifiedDateTime;
  }

  public SupplierInvoiceDto note(String note) {
    this.note = note;
    return this;
  }

   /**
   * Get note
   * @return note
  **/
  @ApiModelProperty(value = "")
  public String getNote() {
    return note;
  }

  public void setNote(String note) {
    this.note = note;
  }

  public SupplierInvoiceDto closedFinancialPeriod(String closedFinancialPeriod) {
    this.closedFinancialPeriod = closedFinancialPeriod;
    return this;
  }

   /**
   * Format YYYYMM.
   * @return closedFinancialPeriod
  **/
  @ApiModelProperty(value = "Format YYYYMM.")
  public String getClosedFinancialPeriod() {
    return closedFinancialPeriod;
  }

  public void setClosedFinancialPeriod(String closedFinancialPeriod) {
    this.closedFinancialPeriod = closedFinancialPeriod;
  }

  public SupplierInvoiceDto location(LocationDescriptionDto location) {
    this.location = location;
    return this;
  }

   /**
   * Get location
   * @return location
  **/
  @ApiModelProperty(value = "")
  public LocationDescriptionDto getLocation() {
    return location;
  }

  public void setLocation(LocationDescriptionDto location) {
    this.location = location;
  }

  public SupplierInvoiceDto vatTotal(Double vatTotal) {
    this.vatTotal = vatTotal;
    return this;
  }

   /**
   * Get vatTotal
   * @return vatTotal
  **/
  @ApiModelProperty(value = "")
  public Double getVatTotal() {
    return vatTotal;
  }

  public void setVatTotal(Double vatTotal) {
    this.vatTotal = vatTotal;
  }

  public SupplierInvoiceDto vatTotalInCurrency(Double vatTotalInCurrency) {
    this.vatTotalInCurrency = vatTotalInCurrency;
    return this;
  }

   /**
   * Get vatTotalInCurrency
   * @return vatTotalInCurrency
  **/
  @ApiModelProperty(value = "")
  public Double getVatTotalInCurrency() {
    return vatTotalInCurrency;
  }

  public void setVatTotalInCurrency(Double vatTotalInCurrency) {
    this.vatTotalInCurrency = vatTotalInCurrency;
  }

  public SupplierInvoiceDto branchNumber(BranchNumberDto branchNumber) {
    this.branchNumber = branchNumber;
    return this;
  }

   /**
   * Get branchNumber
   * @return branchNumber
  **/
  @ApiModelProperty(value = "")
  public BranchNumberDto getBranchNumber() {
    return branchNumber;
  }

  public void setBranchNumber(BranchNumberDto branchNumber) {
    this.branchNumber = branchNumber;
  }

  public SupplierInvoiceDto extras(Map<String, Object> extras) {
    this.extras = extras;
    return this;
  }

  public SupplierInvoiceDto putExtrasItem(String key, Object extrasItem) {
    if (this.extras == null) {
      this.extras = new HashMap<>();
    }
    this.extras.put(key, extrasItem);
    return this;
  }

   /**
   * Get extras
   * @return extras
  **/
  @ApiModelProperty(value = "")
  public Map<String, Object> getExtras() {
    return extras;
  }

  public void setExtras(Map<String, Object> extras) {
    this.extras = extras;
  }

  public SupplierInvoiceDto errorInfo(String errorInfo) {
    this.errorInfo = errorInfo;
    return this;
  }

   /**
   * Get errorInfo
   * @return errorInfo
  **/
  @ApiModelProperty(value = "")
  public String getErrorInfo() {
    return errorInfo;
  }

  public void setErrorInfo(String errorInfo) {
    this.errorInfo = errorInfo;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SupplierInvoiceDto supplierInvoiceDto = (SupplierInvoiceDto) o;
    return Objects.equals(this.taxDetailLines, supplierInvoiceDto.taxDetailLines) &&
        Objects.equals(this.attachments, supplierInvoiceDto.attachments) &&
        Objects.equals(this.invoiceLines, supplierInvoiceDto.invoiceLines) &&
        Objects.equals(this.hold, supplierInvoiceDto.hold) &&
        Objects.equals(this.exchangeRate, supplierInvoiceDto.exchangeRate) &&
        Objects.equals(this.paymentRefNo, supplierInvoiceDto.paymentRefNo) &&
        Objects.equals(this.creditTerms, supplierInvoiceDto.creditTerms) &&
        Objects.equals(this.cashDiscountDate, supplierInvoiceDto.cashDiscountDate) &&
        Objects.equals(this.detailTotal, supplierInvoiceDto.detailTotal) &&
        Objects.equals(this.detailTotalInCurrency, supplierInvoiceDto.detailTotalInCurrency) &&
        Objects.equals(this.vatTaxableTotal, supplierInvoiceDto.vatTaxableTotal) &&
        Objects.equals(this.vatTaxableTotalInCurrency, supplierInvoiceDto.vatTaxableTotalInCurrency) &&
        Objects.equals(this.vatExemptTotal, supplierInvoiceDto.vatExemptTotal) &&
        Objects.equals(this.vatExemptTotalInCurrency, supplierInvoiceDto.vatExemptTotalInCurrency) &&
        Objects.equals(this.withholdingTax, supplierInvoiceDto.withholdingTax) &&
        Objects.equals(this.withholdingTaxInCurrency, supplierInvoiceDto.withholdingTaxInCurrency) &&
        Objects.equals(this.buyerReference, supplierInvoiceDto.buyerReference) &&
        Objects.equals(this.supplier, supplierInvoiceDto.supplier) &&
        Objects.equals(this.documentType, supplierInvoiceDto.documentType) &&
        Objects.equals(this.referenceNumber, supplierInvoiceDto.referenceNumber) &&
        Objects.equals(this.postPeriod, supplierInvoiceDto.postPeriod) &&
        Objects.equals(this.financialPeriod, supplierInvoiceDto.financialPeriod) &&
        Objects.equals(this.date, supplierInvoiceDto.date) &&
        Objects.equals(this.dueDate, supplierInvoiceDto.dueDate) &&
        Objects.equals(this.approvalStatus, supplierInvoiceDto.approvalStatus) &&
        Objects.equals(this.status, supplierInvoiceDto.status) &&
        Objects.equals(this.currencyId, supplierInvoiceDto.currencyId) &&
        Objects.equals(this.balance, supplierInvoiceDto.balance) &&
        Objects.equals(this.balanceInCurrency, supplierInvoiceDto.balanceInCurrency) &&
        Objects.equals(this.cashDiscount, supplierInvoiceDto.cashDiscount) &&
        Objects.equals(this.cashDiscountInCurrency, supplierInvoiceDto.cashDiscountInCurrency) &&
        Objects.equals(this.paymentMethod, supplierInvoiceDto.paymentMethod) &&
        Objects.equals(this.supplierReference, supplierInvoiceDto.supplierReference) &&
        Objects.equals(this.description, supplierInvoiceDto.description) &&
        Objects.equals(this.createdDateTime, supplierInvoiceDto.createdDateTime) &&
        Objects.equals(this.lastModifiedDateTime, supplierInvoiceDto.lastModifiedDateTime) &&
        Objects.equals(this.note, supplierInvoiceDto.note) &&
        Objects.equals(this.closedFinancialPeriod, supplierInvoiceDto.closedFinancialPeriod) &&
        Objects.equals(this.location, supplierInvoiceDto.location) &&
        Objects.equals(this.vatTotal, supplierInvoiceDto.vatTotal) &&
        Objects.equals(this.vatTotalInCurrency, supplierInvoiceDto.vatTotalInCurrency) &&
        Objects.equals(this.branchNumber, supplierInvoiceDto.branchNumber) &&
        Objects.equals(this.extras, supplierInvoiceDto.extras) &&
        Objects.equals(this.errorInfo, supplierInvoiceDto.errorInfo);
  }

  @Override
  public int hashCode() {
    return Objects.hash(taxDetailLines, attachments, invoiceLines, hold, exchangeRate, paymentRefNo, creditTerms, cashDiscountDate, detailTotal, detailTotalInCurrency, vatTaxableTotal, vatTaxableTotalInCurrency, vatExemptTotal, vatExemptTotalInCurrency, withholdingTax, withholdingTaxInCurrency, buyerReference, supplier, documentType, referenceNumber, postPeriod, financialPeriod, date, dueDate, approvalStatus, status, currencyId, balance, balanceInCurrency, cashDiscount, cashDiscountInCurrency, paymentMethod, supplierReference, description, createdDateTime, lastModifiedDateTime, note, closedFinancialPeriod, location, vatTotal, vatTotalInCurrency, branchNumber, extras, errorInfo);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SupplierInvoiceDto {\n");
    
    sb.append("    taxDetailLines: ").append(toIndentedString(taxDetailLines)).append("\n");
    sb.append("    attachments: ").append(toIndentedString(attachments)).append("\n");
    sb.append("    invoiceLines: ").append(toIndentedString(invoiceLines)).append("\n");
    sb.append("    hold: ").append(toIndentedString(hold)).append("\n");
    sb.append("    exchangeRate: ").append(toIndentedString(exchangeRate)).append("\n");
    sb.append("    paymentRefNo: ").append(toIndentedString(paymentRefNo)).append("\n");
    sb.append("    creditTerms: ").append(toIndentedString(creditTerms)).append("\n");
    sb.append("    cashDiscountDate: ").append(toIndentedString(cashDiscountDate)).append("\n");
    sb.append("    detailTotal: ").append(toIndentedString(detailTotal)).append("\n");
    sb.append("    detailTotalInCurrency: ").append(toIndentedString(detailTotalInCurrency)).append("\n");
    sb.append("    vatTaxableTotal: ").append(toIndentedString(vatTaxableTotal)).append("\n");
    sb.append("    vatTaxableTotalInCurrency: ").append(toIndentedString(vatTaxableTotalInCurrency)).append("\n");
    sb.append("    vatExemptTotal: ").append(toIndentedString(vatExemptTotal)).append("\n");
    sb.append("    vatExemptTotalInCurrency: ").append(toIndentedString(vatExemptTotalInCurrency)).append("\n");
    sb.append("    withholdingTax: ").append(toIndentedString(withholdingTax)).append("\n");
    sb.append("    withholdingTaxInCurrency: ").append(toIndentedString(withholdingTaxInCurrency)).append("\n");
    sb.append("    buyerReference: ").append(toIndentedString(buyerReference)).append("\n");
    sb.append("    supplier: ").append(toIndentedString(supplier)).append("\n");
    sb.append("    documentType: ").append(toIndentedString(documentType)).append("\n");
    sb.append("    referenceNumber: ").append(toIndentedString(referenceNumber)).append("\n");
    sb.append("    postPeriod: ").append(toIndentedString(postPeriod)).append("\n");
    sb.append("    financialPeriod: ").append(toIndentedString(financialPeriod)).append("\n");
    sb.append("    date: ").append(toIndentedString(date)).append("\n");
    sb.append("    dueDate: ").append(toIndentedString(dueDate)).append("\n");
    sb.append("    approvalStatus: ").append(toIndentedString(approvalStatus)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    currencyId: ").append(toIndentedString(currencyId)).append("\n");
    sb.append("    balance: ").append(toIndentedString(balance)).append("\n");
    sb.append("    balanceInCurrency: ").append(toIndentedString(balanceInCurrency)).append("\n");
    sb.append("    cashDiscount: ").append(toIndentedString(cashDiscount)).append("\n");
    sb.append("    cashDiscountInCurrency: ").append(toIndentedString(cashDiscountInCurrency)).append("\n");
    sb.append("    paymentMethod: ").append(toIndentedString(paymentMethod)).append("\n");
    sb.append("    supplierReference: ").append(toIndentedString(supplierReference)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    createdDateTime: ").append(toIndentedString(createdDateTime)).append("\n");
    sb.append("    lastModifiedDateTime: ").append(toIndentedString(lastModifiedDateTime)).append("\n");
    sb.append("    note: ").append(toIndentedString(note)).append("\n");
    sb.append("    closedFinancialPeriod: ").append(toIndentedString(closedFinancialPeriod)).append("\n");
    sb.append("    location: ").append(toIndentedString(location)).append("\n");
    sb.append("    vatTotal: ").append(toIndentedString(vatTotal)).append("\n");
    sb.append("    vatTotalInCurrency: ").append(toIndentedString(vatTotalInCurrency)).append("\n");
    sb.append("    branchNumber: ").append(toIndentedString(branchNumber)).append("\n");
    sb.append("    extras: ").append(toIndentedString(extras)).append("\n");
    sb.append("    errorInfo: ").append(toIndentedString(errorInfo)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

