/*
 * Visma Net API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 6.13.03.0008
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package no.systema.visma.v1client.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.List;
import no.systema.visma.v1client.model.BranchNumberDto;
import no.systema.visma.v1client.model.LocationIdNameDto;
import no.systema.visma.v1client.model.PurchaseOrderLineDto;
import no.systema.visma.v1client.model.SupplierDescriptionDto;
import no.systema.visma.v1client.model.TaxDetailDto;
import no.systema.visma.v1client.model.UserDescriptionDto;

/**
 * This class represents a Purchase Order in PurchaseOrderController. Used for getting data.
 */
@ApiModel(description = "This class represents a Purchase Order in PurchaseOrderController. Used for getting data.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-04-16T15:04:09.234+02:00")
public class PurchaseOrderBasicDto {
  /**
   * Gets or Sets orderType
   */
  public enum OrderTypeEnum {
    REGULARORDER("RegularOrder"),
    
    DROPSHIP("DropShip"),
    
    BLANKET("Blanket"),
    
    STANDARDBLANKET("StandardBlanket");

    private String value;

    OrderTypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static OrderTypeEnum fromValue(String text) {
      for (OrderTypeEnum b : OrderTypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("orderType")
  private OrderTypeEnum orderType = null;

  @JsonProperty("orderNbr")
  private String orderNbr = null;

  @JsonProperty("hold")
  private Boolean hold = null;

  /**
   * Gets or Sets status
   */
  public enum StatusEnum {
    BALANCED("Balanced"),
    
    CANCELLED("Cancelled"),
    
    CLOSED("Closed"),
    
    HOLD("Hold"),
    
    OPEN("Open"),
    
    PENDINGEMAIL("PendingEmail"),
    
    PENDINGPRINT("PendingPrint"),
    
    PRINTED("Printed"),
    
    VOIDED("Voided");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static StatusEnum fromValue(String text) {
      for (StatusEnum b : StatusEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("status")
  private StatusEnum status = null;

  @JsonProperty("date")
  private LocalDateTime date = null;

  @JsonProperty("promisedOn")
  private LocalDateTime promisedOn = null;

  @JsonProperty("description")
  private String description = null;

  @JsonProperty("supplier")
  private SupplierDescriptionDto supplier = null;

  @JsonProperty("location")
  private LocationIdNameDto location = null;

  @JsonProperty("owner")
  private UserDescriptionDto owner = null;

  @JsonProperty("currency")
  private String currency = null;

  @JsonProperty("supplierRef")
  private String supplierRef = null;

  @JsonProperty("lineTotal")
  private Double lineTotal = null;

  @JsonProperty("vatExemptTotal")
  private Double vatExemptTotal = null;

  @JsonProperty("taxTotal")
  private Double taxTotal = null;

  @JsonProperty("orderTotal")
  private Double orderTotal = null;

  @JsonProperty("controlTotal")
  private Double controlTotal = null;

  @JsonProperty("branch")
  private BranchNumberDto branch = null;

  @JsonProperty("lines")
  private List<PurchaseOrderLineDto> lines = null;

  @JsonProperty("taxDetails")
  private List<TaxDetailDto> taxDetails = null;

  @JsonProperty("lastModifiedDateTime")
  private LocalDateTime lastModifiedDateTime = null;

  public PurchaseOrderBasicDto orderType(OrderTypeEnum orderType) {
    this.orderType = orderType;
    return this;
  }

   /**
   * Get orderType
   * @return orderType
  **/
  @ApiModelProperty(value = "")
  public OrderTypeEnum getOrderType() {
    return orderType;
  }

  public void setOrderType(OrderTypeEnum orderType) {
    this.orderType = orderType;
  }

  public PurchaseOrderBasicDto orderNbr(String orderNbr) {
    this.orderNbr = orderNbr;
    return this;
  }

   /**
   * Get orderNbr
   * @return orderNbr
  **/
  @ApiModelProperty(value = "")
  public String getOrderNbr() {
    return orderNbr;
  }

  public void setOrderNbr(String orderNbr) {
    this.orderNbr = orderNbr;
  }

  public PurchaseOrderBasicDto hold(Boolean hold) {
    this.hold = hold;
    return this;
  }

   /**
   * Get hold
   * @return hold
  **/
  @ApiModelProperty(value = "")
  public Boolean isHold() {
    return hold;
  }

  public void setHold(Boolean hold) {
    this.hold = hold;
  }

  public PurchaseOrderBasicDto status(StatusEnum status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @ApiModelProperty(value = "")
  public StatusEnum getStatus() {
    return status;
  }

  public void setStatus(StatusEnum status) {
    this.status = status;
  }

  public PurchaseOrderBasicDto date(LocalDateTime date) {
    this.date = date;
    return this;
  }

   /**
   * Get date
   * @return date
  **/
  @ApiModelProperty(value = "")
  public LocalDateTime getDate() {
    return date;
  }

  public void setDate(LocalDateTime date) {
    this.date = date;
  }

  public PurchaseOrderBasicDto promisedOn(LocalDateTime promisedOn) {
    this.promisedOn = promisedOn;
    return this;
  }

   /**
   * Get promisedOn
   * @return promisedOn
  **/
  @ApiModelProperty(value = "")
  public LocalDateTime getPromisedOn() {
    return promisedOn;
  }

  public void setPromisedOn(LocalDateTime promisedOn) {
    this.promisedOn = promisedOn;
  }

  public PurchaseOrderBasicDto description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @ApiModelProperty(value = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public PurchaseOrderBasicDto supplier(SupplierDescriptionDto supplier) {
    this.supplier = supplier;
    return this;
  }

   /**
   * Get supplier
   * @return supplier
  **/
  @ApiModelProperty(value = "")
  public SupplierDescriptionDto getSupplier() {
    return supplier;
  }

  public void setSupplier(SupplierDescriptionDto supplier) {
    this.supplier = supplier;
  }

  public PurchaseOrderBasicDto location(LocationIdNameDto location) {
    this.location = location;
    return this;
  }

   /**
   * Get location
   * @return location
  **/
  @ApiModelProperty(value = "")
  public LocationIdNameDto getLocation() {
    return location;
  }

  public void setLocation(LocationIdNameDto location) {
    this.location = location;
  }

  public PurchaseOrderBasicDto owner(UserDescriptionDto owner) {
    this.owner = owner;
    return this;
  }

   /**
   * Get owner
   * @return owner
  **/
  @ApiModelProperty(value = "")
  public UserDescriptionDto getOwner() {
    return owner;
  }

  public void setOwner(UserDescriptionDto owner) {
    this.owner = owner;
  }

  public PurchaseOrderBasicDto currency(String currency) {
    this.currency = currency;
    return this;
  }

   /**
   * Get currency
   * @return currency
  **/
  @ApiModelProperty(value = "")
  public String getCurrency() {
    return currency;
  }

  public void setCurrency(String currency) {
    this.currency = currency;
  }

  public PurchaseOrderBasicDto supplierRef(String supplierRef) {
    this.supplierRef = supplierRef;
    return this;
  }

   /**
   * Get supplierRef
   * @return supplierRef
  **/
  @ApiModelProperty(value = "")
  public String getSupplierRef() {
    return supplierRef;
  }

  public void setSupplierRef(String supplierRef) {
    this.supplierRef = supplierRef;
  }

  public PurchaseOrderBasicDto lineTotal(Double lineTotal) {
    this.lineTotal = lineTotal;
    return this;
  }

   /**
   * Get lineTotal
   * @return lineTotal
  **/
  @ApiModelProperty(value = "")
  public Double getLineTotal() {
    return lineTotal;
  }

  public void setLineTotal(Double lineTotal) {
    this.lineTotal = lineTotal;
  }

  public PurchaseOrderBasicDto vatExemptTotal(Double vatExemptTotal) {
    this.vatExemptTotal = vatExemptTotal;
    return this;
  }

   /**
   * Get vatExemptTotal
   * @return vatExemptTotal
  **/
  @ApiModelProperty(value = "")
  public Double getVatExemptTotal() {
    return vatExemptTotal;
  }

  public void setVatExemptTotal(Double vatExemptTotal) {
    this.vatExemptTotal = vatExemptTotal;
  }

  public PurchaseOrderBasicDto taxTotal(Double taxTotal) {
    this.taxTotal = taxTotal;
    return this;
  }

   /**
   * Get taxTotal
   * @return taxTotal
  **/
  @ApiModelProperty(value = "")
  public Double getTaxTotal() {
    return taxTotal;
  }

  public void setTaxTotal(Double taxTotal) {
    this.taxTotal = taxTotal;
  }

  public PurchaseOrderBasicDto orderTotal(Double orderTotal) {
    this.orderTotal = orderTotal;
    return this;
  }

   /**
   * Get orderTotal
   * @return orderTotal
  **/
  @ApiModelProperty(value = "")
  public Double getOrderTotal() {
    return orderTotal;
  }

  public void setOrderTotal(Double orderTotal) {
    this.orderTotal = orderTotal;
  }

  public PurchaseOrderBasicDto controlTotal(Double controlTotal) {
    this.controlTotal = controlTotal;
    return this;
  }

   /**
   * Get controlTotal
   * @return controlTotal
  **/
  @ApiModelProperty(value = "")
  public Double getControlTotal() {
    return controlTotal;
  }

  public void setControlTotal(Double controlTotal) {
    this.controlTotal = controlTotal;
  }

  public PurchaseOrderBasicDto branch(BranchNumberDto branch) {
    this.branch = branch;
    return this;
  }

   /**
   * Get branch
   * @return branch
  **/
  @ApiModelProperty(value = "")
  public BranchNumberDto getBranch() {
    return branch;
  }

  public void setBranch(BranchNumberDto branch) {
    this.branch = branch;
  }

  public PurchaseOrderBasicDto lines(List<PurchaseOrderLineDto> lines) {
    this.lines = lines;
    return this;
  }

  public PurchaseOrderBasicDto addLinesItem(PurchaseOrderLineDto linesItem) {
    if (this.lines == null) {
      this.lines = new ArrayList<>();
    }
    this.lines.add(linesItem);
    return this;
  }

   /**
   * Get lines
   * @return lines
  **/
  @ApiModelProperty(value = "")
  public List<PurchaseOrderLineDto> getLines() {
    return lines;
  }

  public void setLines(List<PurchaseOrderLineDto> lines) {
    this.lines = lines;
  }

  public PurchaseOrderBasicDto taxDetails(List<TaxDetailDto> taxDetails) {
    this.taxDetails = taxDetails;
    return this;
  }

  public PurchaseOrderBasicDto addTaxDetailsItem(TaxDetailDto taxDetailsItem) {
    if (this.taxDetails == null) {
      this.taxDetails = new ArrayList<>();
    }
    this.taxDetails.add(taxDetailsItem);
    return this;
  }

   /**
   * Get taxDetails
   * @return taxDetails
  **/
  @ApiModelProperty(value = "")
  public List<TaxDetailDto> getTaxDetails() {
    return taxDetails;
  }

  public void setTaxDetails(List<TaxDetailDto> taxDetails) {
    this.taxDetails = taxDetails;
  }

  public PurchaseOrderBasicDto lastModifiedDateTime(LocalDateTime lastModifiedDateTime) {
    this.lastModifiedDateTime = lastModifiedDateTime;
    return this;
  }

   /**
   * Get lastModifiedDateTime
   * @return lastModifiedDateTime
  **/
  @ApiModelProperty(value = "")
  public LocalDateTime getLastModifiedDateTime() {
    return lastModifiedDateTime;
  }

  public void setLastModifiedDateTime(LocalDateTime lastModifiedDateTime) {
    this.lastModifiedDateTime = lastModifiedDateTime;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PurchaseOrderBasicDto purchaseOrderBasicDto = (PurchaseOrderBasicDto) o;
    return Objects.equals(this.orderType, purchaseOrderBasicDto.orderType) &&
        Objects.equals(this.orderNbr, purchaseOrderBasicDto.orderNbr) &&
        Objects.equals(this.hold, purchaseOrderBasicDto.hold) &&
        Objects.equals(this.status, purchaseOrderBasicDto.status) &&
        Objects.equals(this.date, purchaseOrderBasicDto.date) &&
        Objects.equals(this.promisedOn, purchaseOrderBasicDto.promisedOn) &&
        Objects.equals(this.description, purchaseOrderBasicDto.description) &&
        Objects.equals(this.supplier, purchaseOrderBasicDto.supplier) &&
        Objects.equals(this.location, purchaseOrderBasicDto.location) &&
        Objects.equals(this.owner, purchaseOrderBasicDto.owner) &&
        Objects.equals(this.currency, purchaseOrderBasicDto.currency) &&
        Objects.equals(this.supplierRef, purchaseOrderBasicDto.supplierRef) &&
        Objects.equals(this.lineTotal, purchaseOrderBasicDto.lineTotal) &&
        Objects.equals(this.vatExemptTotal, purchaseOrderBasicDto.vatExemptTotal) &&
        Objects.equals(this.taxTotal, purchaseOrderBasicDto.taxTotal) &&
        Objects.equals(this.orderTotal, purchaseOrderBasicDto.orderTotal) &&
        Objects.equals(this.controlTotal, purchaseOrderBasicDto.controlTotal) &&
        Objects.equals(this.branch, purchaseOrderBasicDto.branch) &&
        Objects.equals(this.lines, purchaseOrderBasicDto.lines) &&
        Objects.equals(this.taxDetails, purchaseOrderBasicDto.taxDetails) &&
        Objects.equals(this.lastModifiedDateTime, purchaseOrderBasicDto.lastModifiedDateTime);
  }

  @Override
  public int hashCode() {
    return Objects.hash(orderType, orderNbr, hold, status, date, promisedOn, description, supplier, location, owner, currency, supplierRef, lineTotal, vatExemptTotal, taxTotal, orderTotal, controlTotal, branch, lines, taxDetails, lastModifiedDateTime);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PurchaseOrderBasicDto {\n");
    
    sb.append("    orderType: ").append(toIndentedString(orderType)).append("\n");
    sb.append("    orderNbr: ").append(toIndentedString(orderNbr)).append("\n");
    sb.append("    hold: ").append(toIndentedString(hold)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    date: ").append(toIndentedString(date)).append("\n");
    sb.append("    promisedOn: ").append(toIndentedString(promisedOn)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    supplier: ").append(toIndentedString(supplier)).append("\n");
    sb.append("    location: ").append(toIndentedString(location)).append("\n");
    sb.append("    owner: ").append(toIndentedString(owner)).append("\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    supplierRef: ").append(toIndentedString(supplierRef)).append("\n");
    sb.append("    lineTotal: ").append(toIndentedString(lineTotal)).append("\n");
    sb.append("    vatExemptTotal: ").append(toIndentedString(vatExemptTotal)).append("\n");
    sb.append("    taxTotal: ").append(toIndentedString(taxTotal)).append("\n");
    sb.append("    orderTotal: ").append(toIndentedString(orderTotal)).append("\n");
    sb.append("    controlTotal: ").append(toIndentedString(controlTotal)).append("\n");
    sb.append("    branch: ").append(toIndentedString(branch)).append("\n");
    sb.append("    lines: ").append(toIndentedString(lines)).append("\n");
    sb.append("    taxDetails: ").append(toIndentedString(taxDetails)).append("\n");
    sb.append("    lastModifiedDateTime: ").append(toIndentedString(lastModifiedDateTime)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

