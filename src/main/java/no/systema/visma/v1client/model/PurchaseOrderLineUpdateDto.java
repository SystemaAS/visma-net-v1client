/*
 * Visma Net API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 6.13.03.0008
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package no.systema.visma.v1client.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import no.systema.visma.v1client.model.DtoValueNullableBoolean;
import no.systema.visma.v1client.model.DtoValueNullableDateTime;
import no.systema.visma.v1client.model.DtoValueNullableDecimal;
import no.systema.visma.v1client.model.DtoValueNullableInt32;
import no.systema.visma.v1client.model.DtoValueNullablePoLineType;
import no.systema.visma.v1client.model.DtoValueNullablePurchaseOrderReceiptAction;
import no.systema.visma.v1client.model.DtoValueString;
import no.systema.visma.v1client.model.SegmentUpdateDto;

/**
 * This class represent a Purchase Order Line in Purchase Order Controller. Used to pass data to server for creating or updating an order line
 */
@ApiModel(description = "This class represent a Purchase Order Line in Purchase Order Controller. Used to pass data to server for creating or updating an order line")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-04-16T15:04:09.234+02:00")
public class PurchaseOrderLineUpdateDto {
  /**
   * Gets or Sets operation
   */
  public enum OperationEnum {
    INSERT("Insert"),
    
    UPDATE("Update"),
    
    DELETE("Delete");

    private String value;

    OperationEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static OperationEnum fromValue(String text) {
      for (OperationEnum b : OperationEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("operation")
  private OperationEnum operation = null;

  @JsonProperty("lineNumber")
  private DtoValueNullableInt32 lineNumber = null;

  @JsonProperty("branch")
  private DtoValueString branch = null;

  @JsonProperty("inventory")
  private DtoValueString inventory = null;

  @JsonProperty("lineType")
  private DtoValueNullablePoLineType lineType = null;

  @JsonProperty("warehouse")
  private DtoValueString warehouse = null;

  @JsonProperty("lineDescription")
  private DtoValueString lineDescription = null;

  @JsonProperty("uom")
  private DtoValueString uom = null;

  @JsonProperty("orderQty")
  private DtoValueNullableDecimal orderQty = null;

  @JsonProperty("unitCost")
  private DtoValueNullableDecimal unitCost = null;

  @JsonProperty("extCost")
  private DtoValueNullableDecimal extCost = null;

  @JsonProperty("discountPercent")
  private DtoValueNullableDecimal discountPercent = null;

  @JsonProperty("manualDiscount")
  private DtoValueNullableBoolean manualDiscount = null;

  @JsonProperty("discountCode")
  private DtoValueString discountCode = null;

  @JsonProperty("amount")
  private DtoValueNullableDecimal amount = null;

  @JsonProperty("alternateId")
  private DtoValueString alternateId = null;

  @JsonProperty("minReceipt")
  private DtoValueNullableDecimal minReceipt = null;

  @JsonProperty("maxReceipt")
  private DtoValueNullableDecimal maxReceipt = null;

  @JsonProperty("completeOn")
  private DtoValueNullableDecimal completeOn = null;

  @JsonProperty("receiptAction")
  private DtoValueNullablePurchaseOrderReceiptAction receiptAction = null;

  @JsonProperty("taxCategory")
  private DtoValueString taxCategory = null;

  @JsonProperty("account")
  private DtoValueString account = null;

  @JsonProperty("sub")
  private List<SegmentUpdateDto> sub = null;

  @JsonProperty("project")
  private DtoValueString project = null;

  @JsonProperty("projectTask")
  private DtoValueString projectTask = null;

  @JsonProperty("requested")
  private DtoValueNullableDateTime requested = null;

  @JsonProperty("promised")
  private DtoValueNullableDateTime promised = null;

  public PurchaseOrderLineUpdateDto operation(OperationEnum operation) {
    this.operation = operation;
    return this;
  }

   /**
   * Get operation
   * @return operation
  **/
  @ApiModelProperty(value = "")
  public OperationEnum getOperation() {
    return operation;
  }

  public void setOperation(OperationEnum operation) {
    this.operation = operation;
  }

  public PurchaseOrderLineUpdateDto lineNumber(DtoValueNullableInt32 lineNumber) {
    this.lineNumber = lineNumber;
    return this;
  }

   /**
   * Get lineNumber
   * @return lineNumber
  **/
  @ApiModelProperty(value = "")
  public DtoValueNullableInt32 getLineNumber() {
    return lineNumber;
  }

  public void setLineNumber(DtoValueNullableInt32 lineNumber) {
    this.lineNumber = lineNumber;
  }

  public PurchaseOrderLineUpdateDto branch(DtoValueString branch) {
    this.branch = branch;
    return this;
  }

   /**
   * Get branch
   * @return branch
  **/
  @ApiModelProperty(value = "")
  public DtoValueString getBranch() {
    return branch;
  }

  public void setBranch(DtoValueString branch) {
    this.branch = branch;
  }

  public PurchaseOrderLineUpdateDto inventory(DtoValueString inventory) {
    this.inventory = inventory;
    return this;
  }

   /**
   * Get inventory
   * @return inventory
  **/
  @ApiModelProperty(value = "")
  public DtoValueString getInventory() {
    return inventory;
  }

  public void setInventory(DtoValueString inventory) {
    this.inventory = inventory;
  }

  public PurchaseOrderLineUpdateDto lineType(DtoValueNullablePoLineType lineType) {
    this.lineType = lineType;
    return this;
  }

   /**
   * Get lineType
   * @return lineType
  **/
  @ApiModelProperty(value = "")
  public DtoValueNullablePoLineType getLineType() {
    return lineType;
  }

  public void setLineType(DtoValueNullablePoLineType lineType) {
    this.lineType = lineType;
  }

  public PurchaseOrderLineUpdateDto warehouse(DtoValueString warehouse) {
    this.warehouse = warehouse;
    return this;
  }

   /**
   * Get warehouse
   * @return warehouse
  **/
  @ApiModelProperty(value = "")
  public DtoValueString getWarehouse() {
    return warehouse;
  }

  public void setWarehouse(DtoValueString warehouse) {
    this.warehouse = warehouse;
  }

  public PurchaseOrderLineUpdateDto lineDescription(DtoValueString lineDescription) {
    this.lineDescription = lineDescription;
    return this;
  }

   /**
   * Get lineDescription
   * @return lineDescription
  **/
  @ApiModelProperty(value = "")
  public DtoValueString getLineDescription() {
    return lineDescription;
  }

  public void setLineDescription(DtoValueString lineDescription) {
    this.lineDescription = lineDescription;
  }

  public PurchaseOrderLineUpdateDto uom(DtoValueString uom) {
    this.uom = uom;
    return this;
  }

   /**
   * Get uom
   * @return uom
  **/
  @ApiModelProperty(value = "")
  public DtoValueString getUom() {
    return uom;
  }

  public void setUom(DtoValueString uom) {
    this.uom = uom;
  }

  public PurchaseOrderLineUpdateDto orderQty(DtoValueNullableDecimal orderQty) {
    this.orderQty = orderQty;
    return this;
  }

   /**
   * Get orderQty
   * @return orderQty
  **/
  @ApiModelProperty(value = "")
  public DtoValueNullableDecimal getOrderQty() {
    return orderQty;
  }

  public void setOrderQty(DtoValueNullableDecimal orderQty) {
    this.orderQty = orderQty;
  }

  public PurchaseOrderLineUpdateDto unitCost(DtoValueNullableDecimal unitCost) {
    this.unitCost = unitCost;
    return this;
  }

   /**
   * Get unitCost
   * @return unitCost
  **/
  @ApiModelProperty(value = "")
  public DtoValueNullableDecimal getUnitCost() {
    return unitCost;
  }

  public void setUnitCost(DtoValueNullableDecimal unitCost) {
    this.unitCost = unitCost;
  }

  public PurchaseOrderLineUpdateDto extCost(DtoValueNullableDecimal extCost) {
    this.extCost = extCost;
    return this;
  }

   /**
   * Get extCost
   * @return extCost
  **/
  @ApiModelProperty(value = "")
  public DtoValueNullableDecimal getExtCost() {
    return extCost;
  }

  public void setExtCost(DtoValueNullableDecimal extCost) {
    this.extCost = extCost;
  }

  public PurchaseOrderLineUpdateDto discountPercent(DtoValueNullableDecimal discountPercent) {
    this.discountPercent = discountPercent;
    return this;
  }

   /**
   * Get discountPercent
   * @return discountPercent
  **/
  @ApiModelProperty(value = "")
  public DtoValueNullableDecimal getDiscountPercent() {
    return discountPercent;
  }

  public void setDiscountPercent(DtoValueNullableDecimal discountPercent) {
    this.discountPercent = discountPercent;
  }

  public PurchaseOrderLineUpdateDto manualDiscount(DtoValueNullableBoolean manualDiscount) {
    this.manualDiscount = manualDiscount;
    return this;
  }

   /**
   * Get manualDiscount
   * @return manualDiscount
  **/
  @ApiModelProperty(value = "")
  public DtoValueNullableBoolean getManualDiscount() {
    return manualDiscount;
  }

  public void setManualDiscount(DtoValueNullableBoolean manualDiscount) {
    this.manualDiscount = manualDiscount;
  }

  public PurchaseOrderLineUpdateDto discountCode(DtoValueString discountCode) {
    this.discountCode = discountCode;
    return this;
  }

   /**
   * Get discountCode
   * @return discountCode
  **/
  @ApiModelProperty(value = "")
  public DtoValueString getDiscountCode() {
    return discountCode;
  }

  public void setDiscountCode(DtoValueString discountCode) {
    this.discountCode = discountCode;
  }

  public PurchaseOrderLineUpdateDto amount(DtoValueNullableDecimal amount) {
    this.amount = amount;
    return this;
  }

   /**
   * Get amount
   * @return amount
  **/
  @ApiModelProperty(value = "")
  public DtoValueNullableDecimal getAmount() {
    return amount;
  }

  public void setAmount(DtoValueNullableDecimal amount) {
    this.amount = amount;
  }

  public PurchaseOrderLineUpdateDto alternateId(DtoValueString alternateId) {
    this.alternateId = alternateId;
    return this;
  }

   /**
   * Get alternateId
   * @return alternateId
  **/
  @ApiModelProperty(value = "")
  public DtoValueString getAlternateId() {
    return alternateId;
  }

  public void setAlternateId(DtoValueString alternateId) {
    this.alternateId = alternateId;
  }

  public PurchaseOrderLineUpdateDto minReceipt(DtoValueNullableDecimal minReceipt) {
    this.minReceipt = minReceipt;
    return this;
  }

   /**
   * Get minReceipt
   * @return minReceipt
  **/
  @ApiModelProperty(value = "")
  public DtoValueNullableDecimal getMinReceipt() {
    return minReceipt;
  }

  public void setMinReceipt(DtoValueNullableDecimal minReceipt) {
    this.minReceipt = minReceipt;
  }

  public PurchaseOrderLineUpdateDto maxReceipt(DtoValueNullableDecimal maxReceipt) {
    this.maxReceipt = maxReceipt;
    return this;
  }

   /**
   * Get maxReceipt
   * @return maxReceipt
  **/
  @ApiModelProperty(value = "")
  public DtoValueNullableDecimal getMaxReceipt() {
    return maxReceipt;
  }

  public void setMaxReceipt(DtoValueNullableDecimal maxReceipt) {
    this.maxReceipt = maxReceipt;
  }

  public PurchaseOrderLineUpdateDto completeOn(DtoValueNullableDecimal completeOn) {
    this.completeOn = completeOn;
    return this;
  }

   /**
   * Get completeOn
   * @return completeOn
  **/
  @ApiModelProperty(value = "")
  public DtoValueNullableDecimal getCompleteOn() {
    return completeOn;
  }

  public void setCompleteOn(DtoValueNullableDecimal completeOn) {
    this.completeOn = completeOn;
  }

  public PurchaseOrderLineUpdateDto receiptAction(DtoValueNullablePurchaseOrderReceiptAction receiptAction) {
    this.receiptAction = receiptAction;
    return this;
  }

   /**
   * Get receiptAction
   * @return receiptAction
  **/
  @ApiModelProperty(value = "")
  public DtoValueNullablePurchaseOrderReceiptAction getReceiptAction() {
    return receiptAction;
  }

  public void setReceiptAction(DtoValueNullablePurchaseOrderReceiptAction receiptAction) {
    this.receiptAction = receiptAction;
  }

  public PurchaseOrderLineUpdateDto taxCategory(DtoValueString taxCategory) {
    this.taxCategory = taxCategory;
    return this;
  }

   /**
   * Get taxCategory
   * @return taxCategory
  **/
  @ApiModelProperty(value = "")
  public DtoValueString getTaxCategory() {
    return taxCategory;
  }

  public void setTaxCategory(DtoValueString taxCategory) {
    this.taxCategory = taxCategory;
  }

  public PurchaseOrderLineUpdateDto account(DtoValueString account) {
    this.account = account;
    return this;
  }

   /**
   * Get account
   * @return account
  **/
  @ApiModelProperty(value = "")
  public DtoValueString getAccount() {
    return account;
  }

  public void setAccount(DtoValueString account) {
    this.account = account;
  }

  public PurchaseOrderLineUpdateDto sub(List<SegmentUpdateDto> sub) {
    this.sub = sub;
    return this;
  }

  public PurchaseOrderLineUpdateDto addSubItem(SegmentUpdateDto subItem) {
    if (this.sub == null) {
      this.sub = new ArrayList<>();
    }
    this.sub.add(subItem);
    return this;
  }

   /**
   * Get sub
   * @return sub
  **/
  @ApiModelProperty(value = "")
  public List<SegmentUpdateDto> getSub() {
    return sub;
  }

  public void setSub(List<SegmentUpdateDto> sub) {
    this.sub = sub;
  }

  public PurchaseOrderLineUpdateDto project(DtoValueString project) {
    this.project = project;
    return this;
  }

   /**
   * Get project
   * @return project
  **/
  @ApiModelProperty(value = "")
  public DtoValueString getProject() {
    return project;
  }

  public void setProject(DtoValueString project) {
    this.project = project;
  }

  public PurchaseOrderLineUpdateDto projectTask(DtoValueString projectTask) {
    this.projectTask = projectTask;
    return this;
  }

   /**
   * Get projectTask
   * @return projectTask
  **/
  @ApiModelProperty(value = "")
  public DtoValueString getProjectTask() {
    return projectTask;
  }

  public void setProjectTask(DtoValueString projectTask) {
    this.projectTask = projectTask;
  }

  public PurchaseOrderLineUpdateDto requested(DtoValueNullableDateTime requested) {
    this.requested = requested;
    return this;
  }

   /**
   * Get requested
   * @return requested
  **/
  @ApiModelProperty(value = "")
  public DtoValueNullableDateTime getRequested() {
    return requested;
  }

  public void setRequested(DtoValueNullableDateTime requested) {
    this.requested = requested;
  }

  public PurchaseOrderLineUpdateDto promised(DtoValueNullableDateTime promised) {
    this.promised = promised;
    return this;
  }

   /**
   * Get promised
   * @return promised
  **/
  @ApiModelProperty(value = "")
  public DtoValueNullableDateTime getPromised() {
    return promised;
  }

  public void setPromised(DtoValueNullableDateTime promised) {
    this.promised = promised;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PurchaseOrderLineUpdateDto purchaseOrderLineUpdateDto = (PurchaseOrderLineUpdateDto) o;
    return Objects.equals(this.operation, purchaseOrderLineUpdateDto.operation) &&
        Objects.equals(this.lineNumber, purchaseOrderLineUpdateDto.lineNumber) &&
        Objects.equals(this.branch, purchaseOrderLineUpdateDto.branch) &&
        Objects.equals(this.inventory, purchaseOrderLineUpdateDto.inventory) &&
        Objects.equals(this.lineType, purchaseOrderLineUpdateDto.lineType) &&
        Objects.equals(this.warehouse, purchaseOrderLineUpdateDto.warehouse) &&
        Objects.equals(this.lineDescription, purchaseOrderLineUpdateDto.lineDescription) &&
        Objects.equals(this.uom, purchaseOrderLineUpdateDto.uom) &&
        Objects.equals(this.orderQty, purchaseOrderLineUpdateDto.orderQty) &&
        Objects.equals(this.unitCost, purchaseOrderLineUpdateDto.unitCost) &&
        Objects.equals(this.extCost, purchaseOrderLineUpdateDto.extCost) &&
        Objects.equals(this.discountPercent, purchaseOrderLineUpdateDto.discountPercent) &&
        Objects.equals(this.manualDiscount, purchaseOrderLineUpdateDto.manualDiscount) &&
        Objects.equals(this.discountCode, purchaseOrderLineUpdateDto.discountCode) &&
        Objects.equals(this.amount, purchaseOrderLineUpdateDto.amount) &&
        Objects.equals(this.alternateId, purchaseOrderLineUpdateDto.alternateId) &&
        Objects.equals(this.minReceipt, purchaseOrderLineUpdateDto.minReceipt) &&
        Objects.equals(this.maxReceipt, purchaseOrderLineUpdateDto.maxReceipt) &&
        Objects.equals(this.completeOn, purchaseOrderLineUpdateDto.completeOn) &&
        Objects.equals(this.receiptAction, purchaseOrderLineUpdateDto.receiptAction) &&
        Objects.equals(this.taxCategory, purchaseOrderLineUpdateDto.taxCategory) &&
        Objects.equals(this.account, purchaseOrderLineUpdateDto.account) &&
        Objects.equals(this.sub, purchaseOrderLineUpdateDto.sub) &&
        Objects.equals(this.project, purchaseOrderLineUpdateDto.project) &&
        Objects.equals(this.projectTask, purchaseOrderLineUpdateDto.projectTask) &&
        Objects.equals(this.requested, purchaseOrderLineUpdateDto.requested) &&
        Objects.equals(this.promised, purchaseOrderLineUpdateDto.promised);
  }

  @Override
  public int hashCode() {
    return Objects.hash(operation, lineNumber, branch, inventory, lineType, warehouse, lineDescription, uom, orderQty, unitCost, extCost, discountPercent, manualDiscount, discountCode, amount, alternateId, minReceipt, maxReceipt, completeOn, receiptAction, taxCategory, account, sub, project, projectTask, requested, promised);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PurchaseOrderLineUpdateDto {\n");
    
    sb.append("    operation: ").append(toIndentedString(operation)).append("\n");
    sb.append("    lineNumber: ").append(toIndentedString(lineNumber)).append("\n");
    sb.append("    branch: ").append(toIndentedString(branch)).append("\n");
    sb.append("    inventory: ").append(toIndentedString(inventory)).append("\n");
    sb.append("    lineType: ").append(toIndentedString(lineType)).append("\n");
    sb.append("    warehouse: ").append(toIndentedString(warehouse)).append("\n");
    sb.append("    lineDescription: ").append(toIndentedString(lineDescription)).append("\n");
    sb.append("    uom: ").append(toIndentedString(uom)).append("\n");
    sb.append("    orderQty: ").append(toIndentedString(orderQty)).append("\n");
    sb.append("    unitCost: ").append(toIndentedString(unitCost)).append("\n");
    sb.append("    extCost: ").append(toIndentedString(extCost)).append("\n");
    sb.append("    discountPercent: ").append(toIndentedString(discountPercent)).append("\n");
    sb.append("    manualDiscount: ").append(toIndentedString(manualDiscount)).append("\n");
    sb.append("    discountCode: ").append(toIndentedString(discountCode)).append("\n");
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("    alternateId: ").append(toIndentedString(alternateId)).append("\n");
    sb.append("    minReceipt: ").append(toIndentedString(minReceipt)).append("\n");
    sb.append("    maxReceipt: ").append(toIndentedString(maxReceipt)).append("\n");
    sb.append("    completeOn: ").append(toIndentedString(completeOn)).append("\n");
    sb.append("    receiptAction: ").append(toIndentedString(receiptAction)).append("\n");
    sb.append("    taxCategory: ").append(toIndentedString(taxCategory)).append("\n");
    sb.append("    account: ").append(toIndentedString(account)).append("\n");
    sb.append("    sub: ").append(toIndentedString(sub)).append("\n");
    sb.append("    project: ").append(toIndentedString(project)).append("\n");
    sb.append("    projectTask: ").append(toIndentedString(projectTask)).append("\n");
    sb.append("    requested: ").append(toIndentedString(requested)).append("\n");
    sb.append("    promised: ").append(toIndentedString(promised)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

