/*
 * Visma Net API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 6.13.03.0008
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package no.systema.visma.v1client.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.time.LocalDateTime;
import no.systema.visma.v1client.model.ConsolBranchDto;

/**
 * LedgerDto
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-04-16T15:04:09.234+02:00")
public class LedgerDto {
  @JsonProperty("internalId")
  private Integer internalId = null;

  @JsonProperty("number")
  private String number = null;

  @JsonProperty("description")
  private String description = null;

  /**
   * Gets or Sets balanceType
   */
  public enum BalanceTypeEnum {
    ACTUAL("Actual"),
    
    REPORT("Report"),
    
    STATISTICAL("Statistical"),
    
    BUDGET("Budget");

    private String value;

    BalanceTypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static BalanceTypeEnum fromValue(String text) {
      for (BalanceTypeEnum b : BalanceTypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("balanceType")
  private BalanceTypeEnum balanceType = null;

  @JsonProperty("currencyId")
  private String currencyId = null;

  @JsonProperty("consolidationSource")
  private Boolean consolidationSource = null;

  @JsonProperty("consolBranch")
  private ConsolBranchDto consolBranch = null;

  @JsonProperty("branchAccounting")
  private Boolean branchAccounting = null;

  @JsonProperty("lastModifiedDateTime")
  private LocalDateTime lastModifiedDateTime = null;

  public LedgerDto internalId(Integer internalId) {
    this.internalId = internalId;
    return this;
  }

   /**
   * Get internalId
   * @return internalId
  **/
  @ApiModelProperty(value = "")
  public Integer getInternalId() {
    return internalId;
  }

  public void setInternalId(Integer internalId) {
    this.internalId = internalId;
  }

  public LedgerDto number(String number) {
    this.number = number;
    return this;
  }

   /**
   * Get number
   * @return number
  **/
  @ApiModelProperty(value = "")
  public String getNumber() {
    return number;
  }

  public void setNumber(String number) {
    this.number = number;
  }

  public LedgerDto description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @ApiModelProperty(value = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public LedgerDto balanceType(BalanceTypeEnum balanceType) {
    this.balanceType = balanceType;
    return this;
  }

   /**
   * Get balanceType
   * @return balanceType
  **/
  @ApiModelProperty(value = "")
  public BalanceTypeEnum getBalanceType() {
    return balanceType;
  }

  public void setBalanceType(BalanceTypeEnum balanceType) {
    this.balanceType = balanceType;
  }

  public LedgerDto currencyId(String currencyId) {
    this.currencyId = currencyId;
    return this;
  }

   /**
   * Get currencyId
   * @return currencyId
  **/
  @ApiModelProperty(value = "")
  public String getCurrencyId() {
    return currencyId;
  }

  public void setCurrencyId(String currencyId) {
    this.currencyId = currencyId;
  }

  public LedgerDto consolidationSource(Boolean consolidationSource) {
    this.consolidationSource = consolidationSource;
    return this;
  }

   /**
   * Get consolidationSource
   * @return consolidationSource
  **/
  @ApiModelProperty(value = "")
  public Boolean isConsolidationSource() {
    return consolidationSource;
  }

  public void setConsolidationSource(Boolean consolidationSource) {
    this.consolidationSource = consolidationSource;
  }

  public LedgerDto consolBranch(ConsolBranchDto consolBranch) {
    this.consolBranch = consolBranch;
    return this;
  }

   /**
   * Get consolBranch
   * @return consolBranch
  **/
  @ApiModelProperty(value = "")
  public ConsolBranchDto getConsolBranch() {
    return consolBranch;
  }

  public void setConsolBranch(ConsolBranchDto consolBranch) {
    this.consolBranch = consolBranch;
  }

  public LedgerDto branchAccounting(Boolean branchAccounting) {
    this.branchAccounting = branchAccounting;
    return this;
  }

   /**
   * Get branchAccounting
   * @return branchAccounting
  **/
  @ApiModelProperty(value = "")
  public Boolean isBranchAccounting() {
    return branchAccounting;
  }

  public void setBranchAccounting(Boolean branchAccounting) {
    this.branchAccounting = branchAccounting;
  }

  public LedgerDto lastModifiedDateTime(LocalDateTime lastModifiedDateTime) {
    this.lastModifiedDateTime = lastModifiedDateTime;
    return this;
  }

   /**
   * Get lastModifiedDateTime
   * @return lastModifiedDateTime
  **/
  @ApiModelProperty(value = "")
  public LocalDateTime getLastModifiedDateTime() {
    return lastModifiedDateTime;
  }

  public void setLastModifiedDateTime(LocalDateTime lastModifiedDateTime) {
    this.lastModifiedDateTime = lastModifiedDateTime;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LedgerDto ledgerDto = (LedgerDto) o;
    return Objects.equals(this.internalId, ledgerDto.internalId) &&
        Objects.equals(this.number, ledgerDto.number) &&
        Objects.equals(this.description, ledgerDto.description) &&
        Objects.equals(this.balanceType, ledgerDto.balanceType) &&
        Objects.equals(this.currencyId, ledgerDto.currencyId) &&
        Objects.equals(this.consolidationSource, ledgerDto.consolidationSource) &&
        Objects.equals(this.consolBranch, ledgerDto.consolBranch) &&
        Objects.equals(this.branchAccounting, ledgerDto.branchAccounting) &&
        Objects.equals(this.lastModifiedDateTime, ledgerDto.lastModifiedDateTime);
  }

  @Override
  public int hashCode() {
    return Objects.hash(internalId, number, description, balanceType, currencyId, consolidationSource, consolBranch, branchAccounting, lastModifiedDateTime);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class LedgerDto {\n");
    
    sb.append("    internalId: ").append(toIndentedString(internalId)).append("\n");
    sb.append("    number: ").append(toIndentedString(number)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    balanceType: ").append(toIndentedString(balanceType)).append("\n");
    sb.append("    currencyId: ").append(toIndentedString(currencyId)).append("\n");
    sb.append("    consolidationSource: ").append(toIndentedString(consolidationSource)).append("\n");
    sb.append("    consolBranch: ").append(toIndentedString(consolBranch)).append("\n");
    sb.append("    branchAccounting: ").append(toIndentedString(branchAccounting)).append("\n");
    sb.append("    lastModifiedDateTime: ").append(toIndentedString(lastModifiedDateTime)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

