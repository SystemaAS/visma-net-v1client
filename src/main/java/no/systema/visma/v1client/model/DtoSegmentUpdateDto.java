/*
 * Visma Net API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 6.13.03.0008
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package no.systema.visma.v1client.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import no.systema.visma.v1client.model.DtoSegmentValueUpdateDtoBase;
import no.systema.visma.v1client.model.DtoValueString;

/**
 * DtoSegmentUpdateDto
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-04-16T15:04:09.234+02:00")
public class DtoSegmentUpdateDto {
  @JsonProperty("segmentValues")
  private List<DtoSegmentValueUpdateDtoBase> segmentValues = null;

  @JsonProperty("dimensionId")
  private String dimensionId = null;

  @JsonProperty("segementId")
  private Integer segementId = null;

  @JsonProperty("description")
  private DtoValueString description = null;

  public DtoSegmentUpdateDto segmentValues(List<DtoSegmentValueUpdateDtoBase> segmentValues) {
    this.segmentValues = segmentValues;
    return this;
  }

  public DtoSegmentUpdateDto addSegmentValuesItem(DtoSegmentValueUpdateDtoBase segmentValuesItem) {
    if (this.segmentValues == null) {
      this.segmentValues = new ArrayList<>();
    }
    this.segmentValues.add(segmentValuesItem);
    return this;
  }

   /**
   * Get segmentValues
   * @return segmentValues
  **/
  @ApiModelProperty(value = "")
  public List<DtoSegmentValueUpdateDtoBase> getSegmentValues() {
    return segmentValues;
  }

  public void setSegmentValues(List<DtoSegmentValueUpdateDtoBase> segmentValues) {
    this.segmentValues = segmentValues;
  }

  public DtoSegmentUpdateDto dimensionId(String dimensionId) {
    this.dimensionId = dimensionId;
    return this;
  }

   /**
   * Get dimensionId
   * @return dimensionId
  **/
  @ApiModelProperty(value = "")
  public String getDimensionId() {
    return dimensionId;
  }

  public void setDimensionId(String dimensionId) {
    this.dimensionId = dimensionId;
  }

  public DtoSegmentUpdateDto segementId(Integer segementId) {
    this.segementId = segementId;
    return this;
  }

   /**
   * Get segementId
   * @return segementId
  **/
  @ApiModelProperty(value = "")
  public Integer getSegementId() {
    return segementId;
  }

  public void setSegementId(Integer segementId) {
    this.segementId = segementId;
  }

  public DtoSegmentUpdateDto description(DtoValueString description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @ApiModelProperty(value = "")
  public DtoValueString getDescription() {
    return description;
  }

  public void setDescription(DtoValueString description) {
    this.description = description;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DtoSegmentUpdateDto dtoSegmentUpdateDto = (DtoSegmentUpdateDto) o;
    return Objects.equals(this.segmentValues, dtoSegmentUpdateDto.segmentValues) &&
        Objects.equals(this.dimensionId, dtoSegmentUpdateDto.dimensionId) &&
        Objects.equals(this.segementId, dtoSegmentUpdateDto.segementId) &&
        Objects.equals(this.description, dtoSegmentUpdateDto.description);
  }

  @Override
  public int hashCode() {
    return Objects.hash(segmentValues, dimensionId, segementId, description);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DtoSegmentUpdateDto {\n");
    
    sb.append("    segmentValues: ").append(toIndentedString(segmentValues)).append("\n");
    sb.append("    dimensionId: ").append(toIndentedString(dimensionId)).append("\n");
    sb.append("    segementId: ").append(toIndentedString(segementId)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

