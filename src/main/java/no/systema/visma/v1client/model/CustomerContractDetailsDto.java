/*
 * Visma Net API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 6.13.03.0008
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package no.systema.visma.v1client.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.List;
import no.systema.visma.v1client.model.CustomerContractDetailsLineDto;
import no.systema.visma.v1client.model.PromoCodeIdDescriptionDto;

/**
 * This class represents the CustomerContractDetails in CustomerContractController. Used for getting data.
 */
@ApiModel(description = "This class represents the CustomerContractDetails in CustomerContractController. Used for getting data.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-04-16T15:04:09.234+02:00")
public class CustomerContractDetailsDto {
  @JsonProperty("effectiveFrom")
  private LocalDateTime effectiveFrom = null;

  @JsonProperty("promoCode")
  private PromoCodeIdDescriptionDto promoCode = null;

  @JsonProperty("pendingSetup")
  private Double pendingSetup = null;

  @JsonProperty("pendingRecurring")
  private Double pendingRecurring = null;

  @JsonProperty("pendingRenewal")
  private Double pendingRenewal = null;

  @JsonProperty("totalPending")
  private Double totalPending = null;

  @JsonProperty("currentSetup")
  private Double currentSetup = null;

  @JsonProperty("currentRecurring")
  private Double currentRecurring = null;

  @JsonProperty("currentRenewal")
  private Double currentRenewal = null;

  @JsonProperty("lines")
  private List<CustomerContractDetailsLineDto> lines = null;

  public CustomerContractDetailsDto effectiveFrom(LocalDateTime effectiveFrom) {
    this.effectiveFrom = effectiveFrom;
    return this;
  }

   /**
   * Get effectiveFrom
   * @return effectiveFrom
  **/
  @ApiModelProperty(value = "")
  public LocalDateTime getEffectiveFrom() {
    return effectiveFrom;
  }

  public void setEffectiveFrom(LocalDateTime effectiveFrom) {
    this.effectiveFrom = effectiveFrom;
  }

  public CustomerContractDetailsDto promoCode(PromoCodeIdDescriptionDto promoCode) {
    this.promoCode = promoCode;
    return this;
  }

   /**
   * Get promoCode
   * @return promoCode
  **/
  @ApiModelProperty(value = "")
  public PromoCodeIdDescriptionDto getPromoCode() {
    return promoCode;
  }

  public void setPromoCode(PromoCodeIdDescriptionDto promoCode) {
    this.promoCode = promoCode;
  }

  public CustomerContractDetailsDto pendingSetup(Double pendingSetup) {
    this.pendingSetup = pendingSetup;
    return this;
  }

   /**
   * Get pendingSetup
   * @return pendingSetup
  **/
  @ApiModelProperty(value = "")
  public Double getPendingSetup() {
    return pendingSetup;
  }

  public void setPendingSetup(Double pendingSetup) {
    this.pendingSetup = pendingSetup;
  }

  public CustomerContractDetailsDto pendingRecurring(Double pendingRecurring) {
    this.pendingRecurring = pendingRecurring;
    return this;
  }

   /**
   * Get pendingRecurring
   * @return pendingRecurring
  **/
  @ApiModelProperty(value = "")
  public Double getPendingRecurring() {
    return pendingRecurring;
  }

  public void setPendingRecurring(Double pendingRecurring) {
    this.pendingRecurring = pendingRecurring;
  }

  public CustomerContractDetailsDto pendingRenewal(Double pendingRenewal) {
    this.pendingRenewal = pendingRenewal;
    return this;
  }

   /**
   * Get pendingRenewal
   * @return pendingRenewal
  **/
  @ApiModelProperty(value = "")
  public Double getPendingRenewal() {
    return pendingRenewal;
  }

  public void setPendingRenewal(Double pendingRenewal) {
    this.pendingRenewal = pendingRenewal;
  }

  public CustomerContractDetailsDto totalPending(Double totalPending) {
    this.totalPending = totalPending;
    return this;
  }

   /**
   * Get totalPending
   * @return totalPending
  **/
  @ApiModelProperty(value = "")
  public Double getTotalPending() {
    return totalPending;
  }

  public void setTotalPending(Double totalPending) {
    this.totalPending = totalPending;
  }

  public CustomerContractDetailsDto currentSetup(Double currentSetup) {
    this.currentSetup = currentSetup;
    return this;
  }

   /**
   * Get currentSetup
   * @return currentSetup
  **/
  @ApiModelProperty(value = "")
  public Double getCurrentSetup() {
    return currentSetup;
  }

  public void setCurrentSetup(Double currentSetup) {
    this.currentSetup = currentSetup;
  }

  public CustomerContractDetailsDto currentRecurring(Double currentRecurring) {
    this.currentRecurring = currentRecurring;
    return this;
  }

   /**
   * Get currentRecurring
   * @return currentRecurring
  **/
  @ApiModelProperty(value = "")
  public Double getCurrentRecurring() {
    return currentRecurring;
  }

  public void setCurrentRecurring(Double currentRecurring) {
    this.currentRecurring = currentRecurring;
  }

  public CustomerContractDetailsDto currentRenewal(Double currentRenewal) {
    this.currentRenewal = currentRenewal;
    return this;
  }

   /**
   * Get currentRenewal
   * @return currentRenewal
  **/
  @ApiModelProperty(value = "")
  public Double getCurrentRenewal() {
    return currentRenewal;
  }

  public void setCurrentRenewal(Double currentRenewal) {
    this.currentRenewal = currentRenewal;
  }

  public CustomerContractDetailsDto lines(List<CustomerContractDetailsLineDto> lines) {
    this.lines = lines;
    return this;
  }

  public CustomerContractDetailsDto addLinesItem(CustomerContractDetailsLineDto linesItem) {
    if (this.lines == null) {
      this.lines = new ArrayList<>();
    }
    this.lines.add(linesItem);
    return this;
  }

   /**
   * Get lines
   * @return lines
  **/
  @ApiModelProperty(value = "")
  public List<CustomerContractDetailsLineDto> getLines() {
    return lines;
  }

  public void setLines(List<CustomerContractDetailsLineDto> lines) {
    this.lines = lines;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CustomerContractDetailsDto customerContractDetailsDto = (CustomerContractDetailsDto) o;
    return Objects.equals(this.effectiveFrom, customerContractDetailsDto.effectiveFrom) &&
        Objects.equals(this.promoCode, customerContractDetailsDto.promoCode) &&
        Objects.equals(this.pendingSetup, customerContractDetailsDto.pendingSetup) &&
        Objects.equals(this.pendingRecurring, customerContractDetailsDto.pendingRecurring) &&
        Objects.equals(this.pendingRenewal, customerContractDetailsDto.pendingRenewal) &&
        Objects.equals(this.totalPending, customerContractDetailsDto.totalPending) &&
        Objects.equals(this.currentSetup, customerContractDetailsDto.currentSetup) &&
        Objects.equals(this.currentRecurring, customerContractDetailsDto.currentRecurring) &&
        Objects.equals(this.currentRenewal, customerContractDetailsDto.currentRenewal) &&
        Objects.equals(this.lines, customerContractDetailsDto.lines);
  }

  @Override
  public int hashCode() {
    return Objects.hash(effectiveFrom, promoCode, pendingSetup, pendingRecurring, pendingRenewal, totalPending, currentSetup, currentRecurring, currentRenewal, lines);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CustomerContractDetailsDto {\n");
    
    sb.append("    effectiveFrom: ").append(toIndentedString(effectiveFrom)).append("\n");
    sb.append("    promoCode: ").append(toIndentedString(promoCode)).append("\n");
    sb.append("    pendingSetup: ").append(toIndentedString(pendingSetup)).append("\n");
    sb.append("    pendingRecurring: ").append(toIndentedString(pendingRecurring)).append("\n");
    sb.append("    pendingRenewal: ").append(toIndentedString(pendingRenewal)).append("\n");
    sb.append("    totalPending: ").append(toIndentedString(totalPending)).append("\n");
    sb.append("    currentSetup: ").append(toIndentedString(currentSetup)).append("\n");
    sb.append("    currentRecurring: ").append(toIndentedString(currentRecurring)).append("\n");
    sb.append("    currentRenewal: ").append(toIndentedString(currentRenewal)).append("\n");
    sb.append("    lines: ").append(toIndentedString(lines)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

