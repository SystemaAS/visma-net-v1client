/*
 * Visma Net API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 6.13.03.0008
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package no.systema.visma.v1client.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import no.systema.visma.v1client.model.DtoValueDecimal;
import no.systema.visma.v1client.model.DtoValueInt32;
import no.systema.visma.v1client.model.DtoValueString;
import no.systema.visma.v1client.model.SegmentUpdateDto;

/**
 * JournalTransactionLineUpdateDto
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-04-16T15:04:09.234+02:00")
public class JournalTransactionLineUpdateDto {
  /**
   * Gets or Sets operation
   */
  public enum OperationEnum {
    INSERT("Insert"),
    
    UPDATE("Update"),
    
    DELETE("Delete");

    private String value;

    OperationEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static OperationEnum fromValue(String text) {
      for (OperationEnum b : OperationEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("operation")
  private OperationEnum operation = null;

  @JsonProperty("lineNumber")
  private DtoValueInt32 lineNumber = null;

  @JsonProperty("accountNumber")
  private DtoValueString accountNumber = null;

  @JsonProperty("subaccount")
  private List<SegmentUpdateDto> subaccount = null;

  @JsonProperty("referenceNumber")
  private DtoValueString referenceNumber = null;

  @JsonProperty("transactionDescription")
  private DtoValueString transactionDescription = null;

  @JsonProperty("debitAmountInCurrency")
  private DtoValueDecimal debitAmountInCurrency = null;

  @JsonProperty("creditAmountInCurrency")
  private DtoValueDecimal creditAmountInCurrency = null;

  @JsonProperty("vatCodeId")
  private DtoValueString vatCodeId = null;

  @JsonProperty("vatId")
  private DtoValueString vatId = null;

  @JsonProperty("branch")
  private DtoValueString branch = null;

  @JsonProperty("uom")
  private DtoValueString uom = null;

  public JournalTransactionLineUpdateDto operation(OperationEnum operation) {
    this.operation = operation;
    return this;
  }

   /**
   * Get operation
   * @return operation
  **/
  @ApiModelProperty(value = "")
  public OperationEnum getOperation() {
    return operation;
  }

  public void setOperation(OperationEnum operation) {
    this.operation = operation;
  }

  public JournalTransactionLineUpdateDto lineNumber(DtoValueInt32 lineNumber) {
    this.lineNumber = lineNumber;
    return this;
  }

   /**
   * Get lineNumber
   * @return lineNumber
  **/
  @ApiModelProperty(value = "")
  public DtoValueInt32 getLineNumber() {
    return lineNumber;
  }

  public void setLineNumber(DtoValueInt32 lineNumber) {
    this.lineNumber = lineNumber;
  }

  public JournalTransactionLineUpdateDto accountNumber(DtoValueString accountNumber) {
    this.accountNumber = accountNumber;
    return this;
  }

   /**
   * Get accountNumber
   * @return accountNumber
  **/
  @ApiModelProperty(value = "")
  public DtoValueString getAccountNumber() {
    return accountNumber;
  }

  public void setAccountNumber(DtoValueString accountNumber) {
    this.accountNumber = accountNumber;
  }

  public JournalTransactionLineUpdateDto subaccount(List<SegmentUpdateDto> subaccount) {
    this.subaccount = subaccount;
    return this;
  }

  public JournalTransactionLineUpdateDto addSubaccountItem(SegmentUpdateDto subaccountItem) {
    if (this.subaccount == null) {
      this.subaccount = new ArrayList<>();
    }
    this.subaccount.add(subaccountItem);
    return this;
  }

   /**
   * Get subaccount
   * @return subaccount
  **/
  @ApiModelProperty(value = "")
  public List<SegmentUpdateDto> getSubaccount() {
    return subaccount;
  }

  public void setSubaccount(List<SegmentUpdateDto> subaccount) {
    this.subaccount = subaccount;
  }

  public JournalTransactionLineUpdateDto referenceNumber(DtoValueString referenceNumber) {
    this.referenceNumber = referenceNumber;
    return this;
  }

   /**
   * Get referenceNumber
   * @return referenceNumber
  **/
  @ApiModelProperty(value = "")
  public DtoValueString getReferenceNumber() {
    return referenceNumber;
  }

  public void setReferenceNumber(DtoValueString referenceNumber) {
    this.referenceNumber = referenceNumber;
  }

  public JournalTransactionLineUpdateDto transactionDescription(DtoValueString transactionDescription) {
    this.transactionDescription = transactionDescription;
    return this;
  }

   /**
   * Get transactionDescription
   * @return transactionDescription
  **/
  @ApiModelProperty(value = "")
  public DtoValueString getTransactionDescription() {
    return transactionDescription;
  }

  public void setTransactionDescription(DtoValueString transactionDescription) {
    this.transactionDescription = transactionDescription;
  }

  public JournalTransactionLineUpdateDto debitAmountInCurrency(DtoValueDecimal debitAmountInCurrency) {
    this.debitAmountInCurrency = debitAmountInCurrency;
    return this;
  }

   /**
   * Get debitAmountInCurrency
   * @return debitAmountInCurrency
  **/
  @ApiModelProperty(value = "")
  public DtoValueDecimal getDebitAmountInCurrency() {
    return debitAmountInCurrency;
  }

  public void setDebitAmountInCurrency(DtoValueDecimal debitAmountInCurrency) {
    this.debitAmountInCurrency = debitAmountInCurrency;
  }

  public JournalTransactionLineUpdateDto creditAmountInCurrency(DtoValueDecimal creditAmountInCurrency) {
    this.creditAmountInCurrency = creditAmountInCurrency;
    return this;
  }

   /**
   * Get creditAmountInCurrency
   * @return creditAmountInCurrency
  **/
  @ApiModelProperty(value = "")
  public DtoValueDecimal getCreditAmountInCurrency() {
    return creditAmountInCurrency;
  }

  public void setCreditAmountInCurrency(DtoValueDecimal creditAmountInCurrency) {
    this.creditAmountInCurrency = creditAmountInCurrency;
  }

  public JournalTransactionLineUpdateDto vatCodeId(DtoValueString vatCodeId) {
    this.vatCodeId = vatCodeId;
    return this;
  }

   /**
   * Get vatCodeId
   * @return vatCodeId
  **/
  @ApiModelProperty(value = "")
  public DtoValueString getVatCodeId() {
    return vatCodeId;
  }

  public void setVatCodeId(DtoValueString vatCodeId) {
    this.vatCodeId = vatCodeId;
  }

  public JournalTransactionLineUpdateDto vatId(DtoValueString vatId) {
    this.vatId = vatId;
    return this;
  }

   /**
   * Get vatId
   * @return vatId
  **/
  @ApiModelProperty(value = "")
  public DtoValueString getVatId() {
    return vatId;
  }

  public void setVatId(DtoValueString vatId) {
    this.vatId = vatId;
  }

  public JournalTransactionLineUpdateDto branch(DtoValueString branch) {
    this.branch = branch;
    return this;
  }

   /**
   * Get branch
   * @return branch
  **/
  @ApiModelProperty(value = "")
  public DtoValueString getBranch() {
    return branch;
  }

  public void setBranch(DtoValueString branch) {
    this.branch = branch;
  }

  public JournalTransactionLineUpdateDto uom(DtoValueString uom) {
    this.uom = uom;
    return this;
  }

   /**
   * Get uom
   * @return uom
  **/
  @ApiModelProperty(value = "")
  public DtoValueString getUom() {
    return uom;
  }

  public void setUom(DtoValueString uom) {
    this.uom = uom;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    JournalTransactionLineUpdateDto journalTransactionLineUpdateDto = (JournalTransactionLineUpdateDto) o;
    return Objects.equals(this.operation, journalTransactionLineUpdateDto.operation) &&
        Objects.equals(this.lineNumber, journalTransactionLineUpdateDto.lineNumber) &&
        Objects.equals(this.accountNumber, journalTransactionLineUpdateDto.accountNumber) &&
        Objects.equals(this.subaccount, journalTransactionLineUpdateDto.subaccount) &&
        Objects.equals(this.referenceNumber, journalTransactionLineUpdateDto.referenceNumber) &&
        Objects.equals(this.transactionDescription, journalTransactionLineUpdateDto.transactionDescription) &&
        Objects.equals(this.debitAmountInCurrency, journalTransactionLineUpdateDto.debitAmountInCurrency) &&
        Objects.equals(this.creditAmountInCurrency, journalTransactionLineUpdateDto.creditAmountInCurrency) &&
        Objects.equals(this.vatCodeId, journalTransactionLineUpdateDto.vatCodeId) &&
        Objects.equals(this.vatId, journalTransactionLineUpdateDto.vatId) &&
        Objects.equals(this.branch, journalTransactionLineUpdateDto.branch) &&
        Objects.equals(this.uom, journalTransactionLineUpdateDto.uom);
  }

  @Override
  public int hashCode() {
    return Objects.hash(operation, lineNumber, accountNumber, subaccount, referenceNumber, transactionDescription, debitAmountInCurrency, creditAmountInCurrency, vatCodeId, vatId, branch, uom);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class JournalTransactionLineUpdateDto {\n");
    
    sb.append("    operation: ").append(toIndentedString(operation)).append("\n");
    sb.append("    lineNumber: ").append(toIndentedString(lineNumber)).append("\n");
    sb.append("    accountNumber: ").append(toIndentedString(accountNumber)).append("\n");
    sb.append("    subaccount: ").append(toIndentedString(subaccount)).append("\n");
    sb.append("    referenceNumber: ").append(toIndentedString(referenceNumber)).append("\n");
    sb.append("    transactionDescription: ").append(toIndentedString(transactionDescription)).append("\n");
    sb.append("    debitAmountInCurrency: ").append(toIndentedString(debitAmountInCurrency)).append("\n");
    sb.append("    creditAmountInCurrency: ").append(toIndentedString(creditAmountInCurrency)).append("\n");
    sb.append("    vatCodeId: ").append(toIndentedString(vatCodeId)).append("\n");
    sb.append("    vatId: ").append(toIndentedString(vatId)).append("\n");
    sb.append("    branch: ").append(toIndentedString(branch)).append("\n");
    sb.append("    uom: ").append(toIndentedString(uom)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

