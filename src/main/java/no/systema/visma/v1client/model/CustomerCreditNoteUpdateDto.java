/*
 * Visma Net API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 6.13.03.0008
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package no.systema.visma.v1client.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import no.systema.visma.v1client.model.CustomerCreditNoteLineUpdateDto;
import no.systema.visma.v1client.model.DtoValueBoolean;
import no.systema.visma.v1client.model.DtoValueDateTime;
import no.systema.visma.v1client.model.DtoValueNullableInt32;
import no.systema.visma.v1client.model.DtoValueString;
import no.systema.visma.v1client.model.TaxDetailUpdateDto;

/**
 * CustomerCreditNoteUpdateDto
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-04-16T15:04:09.234+02:00")
public class CustomerCreditNoteUpdateDto {
  @JsonProperty("currencyId")
  private DtoValueString currencyId = null;

  @JsonProperty("customerRefNumber")
  private DtoValueString customerRefNumber = null;

  @JsonProperty("externalReference")
  private DtoValueString externalReference = null;

  @JsonProperty("contact")
  private DtoValueNullableInt32 contact = null;

  @JsonProperty("project")
  private DtoValueString project = null;

  @JsonProperty("lines")
  private List<CustomerCreditNoteLineUpdateDto> lines = null;

  @JsonProperty("taxDetails")
  private List<TaxDetailUpdateDto> taxDetails = null;

  @JsonProperty("referenceNumber")
  private DtoValueString referenceNumber = null;

  @JsonProperty("customerNumber")
  private DtoValueString customerNumber = null;

  @JsonProperty("documentDate")
  private DtoValueDateTime documentDate = null;

  @JsonProperty("hold")
  private DtoValueBoolean hold = null;

  @JsonProperty("postPeriod")
  private DtoValueString postPeriod = null;

  @JsonProperty("financialPeriod")
  private DtoValueString financialPeriod = null;

  @JsonProperty("invoiceText")
  private DtoValueString invoiceText = null;

  @JsonProperty("locationId")
  private DtoValueString locationId = null;

  @JsonProperty("salesPersonID")
  private DtoValueNullableInt32 salesPersonID = null;

  @JsonProperty("note")
  private DtoValueString note = null;

  @JsonProperty("branchNumber")
  private DtoValueString branchNumber = null;

  @JsonProperty("cashAccount")
  private DtoValueString cashAccount = null;

  public CustomerCreditNoteUpdateDto currencyId(DtoValueString currencyId) {
    this.currencyId = currencyId;
    return this;
  }

   /**
   * Get currencyId
   * @return currencyId
  **/
  @ApiModelProperty(value = "")
  public DtoValueString getCurrencyId() {
    return currencyId;
  }

  public void setCurrencyId(DtoValueString currencyId) {
    this.currencyId = currencyId;
  }

  public CustomerCreditNoteUpdateDto customerRefNumber(DtoValueString customerRefNumber) {
    this.customerRefNumber = customerRefNumber;
    return this;
  }

   /**
   * Get customerRefNumber
   * @return customerRefNumber
  **/
  @ApiModelProperty(value = "")
  public DtoValueString getCustomerRefNumber() {
    return customerRefNumber;
  }

  public void setCustomerRefNumber(DtoValueString customerRefNumber) {
    this.customerRefNumber = customerRefNumber;
  }

  public CustomerCreditNoteUpdateDto externalReference(DtoValueString externalReference) {
    this.externalReference = externalReference;
    return this;
  }

   /**
   * Get externalReference
   * @return externalReference
  **/
  @ApiModelProperty(value = "")
  public DtoValueString getExternalReference() {
    return externalReference;
  }

  public void setExternalReference(DtoValueString externalReference) {
    this.externalReference = externalReference;
  }

  public CustomerCreditNoteUpdateDto contact(DtoValueNullableInt32 contact) {
    this.contact = contact;
    return this;
  }

   /**
   * Get contact
   * @return contact
  **/
  @ApiModelProperty(value = "")
  public DtoValueNullableInt32 getContact() {
    return contact;
  }

  public void setContact(DtoValueNullableInt32 contact) {
    this.contact = contact;
  }

  public CustomerCreditNoteUpdateDto project(DtoValueString project) {
    this.project = project;
    return this;
  }

   /**
   * Get project
   * @return project
  **/
  @ApiModelProperty(value = "")
  public DtoValueString getProject() {
    return project;
  }

  public void setProject(DtoValueString project) {
    this.project = project;
  }

  public CustomerCreditNoteUpdateDto lines(List<CustomerCreditNoteLineUpdateDto> lines) {
    this.lines = lines;
    return this;
  }

  public CustomerCreditNoteUpdateDto addLinesItem(CustomerCreditNoteLineUpdateDto linesItem) {
    if (this.lines == null) {
      this.lines = new ArrayList<>();
    }
    this.lines.add(linesItem);
    return this;
  }

   /**
   * Get lines
   * @return lines
  **/
  @ApiModelProperty(value = "")
  public List<CustomerCreditNoteLineUpdateDto> getLines() {
    return lines;
  }

  public void setLines(List<CustomerCreditNoteLineUpdateDto> lines) {
    this.lines = lines;
  }

  public CustomerCreditNoteUpdateDto taxDetails(List<TaxDetailUpdateDto> taxDetails) {
    this.taxDetails = taxDetails;
    return this;
  }

  public CustomerCreditNoteUpdateDto addTaxDetailsItem(TaxDetailUpdateDto taxDetailsItem) {
    if (this.taxDetails == null) {
      this.taxDetails = new ArrayList<>();
    }
    this.taxDetails.add(taxDetailsItem);
    return this;
  }

   /**
   * Get taxDetails
   * @return taxDetails
  **/
  @ApiModelProperty(value = "")
  public List<TaxDetailUpdateDto> getTaxDetails() {
    return taxDetails;
  }

  public void setTaxDetails(List<TaxDetailUpdateDto> taxDetails) {
    this.taxDetails = taxDetails;
  }

  public CustomerCreditNoteUpdateDto referenceNumber(DtoValueString referenceNumber) {
    this.referenceNumber = referenceNumber;
    return this;
  }

   /**
   * Get referenceNumber
   * @return referenceNumber
  **/
  @ApiModelProperty(value = "")
  public DtoValueString getReferenceNumber() {
    return referenceNumber;
  }

  public void setReferenceNumber(DtoValueString referenceNumber) {
    this.referenceNumber = referenceNumber;
  }

  public CustomerCreditNoteUpdateDto customerNumber(DtoValueString customerNumber) {
    this.customerNumber = customerNumber;
    return this;
  }

   /**
   * Get customerNumber
   * @return customerNumber
  **/
  @ApiModelProperty(value = "")
  public DtoValueString getCustomerNumber() {
    return customerNumber;
  }

  public void setCustomerNumber(DtoValueString customerNumber) {
    this.customerNumber = customerNumber;
  }

  public CustomerCreditNoteUpdateDto documentDate(DtoValueDateTime documentDate) {
    this.documentDate = documentDate;
    return this;
  }

   /**
   * Get documentDate
   * @return documentDate
  **/
  @ApiModelProperty(value = "")
  public DtoValueDateTime getDocumentDate() {
    return documentDate;
  }

  public void setDocumentDate(DtoValueDateTime documentDate) {
    this.documentDate = documentDate;
  }

  public CustomerCreditNoteUpdateDto hold(DtoValueBoolean hold) {
    this.hold = hold;
    return this;
  }

   /**
   * Get hold
   * @return hold
  **/
  @ApiModelProperty(value = "")
  public DtoValueBoolean getHold() {
    return hold;
  }

  public void setHold(DtoValueBoolean hold) {
    this.hold = hold;
  }

  public CustomerCreditNoteUpdateDto postPeriod(DtoValueString postPeriod) {
    this.postPeriod = postPeriod;
    return this;
  }

   /**
   * The financial period to which the transactions recorded in the document should be posted. Use the format MMYYYY.
   * @return postPeriod
  **/
  @ApiModelProperty(value = "The financial period to which the transactions recorded in the document should be posted. Use the format MMYYYY.")
  public DtoValueString getPostPeriod() {
    return postPeriod;
  }

  public void setPostPeriod(DtoValueString postPeriod) {
    this.postPeriod = postPeriod;
  }

  public CustomerCreditNoteUpdateDto financialPeriod(DtoValueString financialPeriod) {
    this.financialPeriod = financialPeriod;
    return this;
  }

   /**
   * The financial period to which the transactions recorded in the document should be posted. Use the format YYYYMM.
   * @return financialPeriod
  **/
  @ApiModelProperty(value = "The financial period to which the transactions recorded in the document should be posted. Use the format YYYYMM.")
  public DtoValueString getFinancialPeriod() {
    return financialPeriod;
  }

  public void setFinancialPeriod(DtoValueString financialPeriod) {
    this.financialPeriod = financialPeriod;
  }

  public CustomerCreditNoteUpdateDto invoiceText(DtoValueString invoiceText) {
    this.invoiceText = invoiceText;
    return this;
  }

   /**
   * Get invoiceText
   * @return invoiceText
  **/
  @ApiModelProperty(value = "")
  public DtoValueString getInvoiceText() {
    return invoiceText;
  }

  public void setInvoiceText(DtoValueString invoiceText) {
    this.invoiceText = invoiceText;
  }

  public CustomerCreditNoteUpdateDto locationId(DtoValueString locationId) {
    this.locationId = locationId;
    return this;
  }

   /**
   * Get locationId
   * @return locationId
  **/
  @ApiModelProperty(value = "")
  public DtoValueString getLocationId() {
    return locationId;
  }

  public void setLocationId(DtoValueString locationId) {
    this.locationId = locationId;
  }

  public CustomerCreditNoteUpdateDto salesPersonID(DtoValueNullableInt32 salesPersonID) {
    this.salesPersonID = salesPersonID;
    return this;
  }

   /**
   * Get salesPersonID
   * @return salesPersonID
  **/
  @ApiModelProperty(value = "")
  public DtoValueNullableInt32 getSalesPersonID() {
    return salesPersonID;
  }

  public void setSalesPersonID(DtoValueNullableInt32 salesPersonID) {
    this.salesPersonID = salesPersonID;
  }

  public CustomerCreditNoteUpdateDto note(DtoValueString note) {
    this.note = note;
    return this;
  }

   /**
   * Get note
   * @return note
  **/
  @ApiModelProperty(value = "")
  public DtoValueString getNote() {
    return note;
  }

  public void setNote(DtoValueString note) {
    this.note = note;
  }

  public CustomerCreditNoteUpdateDto branchNumber(DtoValueString branchNumber) {
    this.branchNumber = branchNumber;
    return this;
  }

   /**
   * Get branchNumber
   * @return branchNumber
  **/
  @ApiModelProperty(value = "")
  public DtoValueString getBranchNumber() {
    return branchNumber;
  }

  public void setBranchNumber(DtoValueString branchNumber) {
    this.branchNumber = branchNumber;
  }

  public CustomerCreditNoteUpdateDto cashAccount(DtoValueString cashAccount) {
    this.cashAccount = cashAccount;
    return this;
  }

   /**
   * Get cashAccount
   * @return cashAccount
  **/
  @ApiModelProperty(value = "")
  public DtoValueString getCashAccount() {
    return cashAccount;
  }

  public void setCashAccount(DtoValueString cashAccount) {
    this.cashAccount = cashAccount;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CustomerCreditNoteUpdateDto customerCreditNoteUpdateDto = (CustomerCreditNoteUpdateDto) o;
    return Objects.equals(this.currencyId, customerCreditNoteUpdateDto.currencyId) &&
        Objects.equals(this.customerRefNumber, customerCreditNoteUpdateDto.customerRefNumber) &&
        Objects.equals(this.externalReference, customerCreditNoteUpdateDto.externalReference) &&
        Objects.equals(this.contact, customerCreditNoteUpdateDto.contact) &&
        Objects.equals(this.project, customerCreditNoteUpdateDto.project) &&
        Objects.equals(this.lines, customerCreditNoteUpdateDto.lines) &&
        Objects.equals(this.taxDetails, customerCreditNoteUpdateDto.taxDetails) &&
        Objects.equals(this.referenceNumber, customerCreditNoteUpdateDto.referenceNumber) &&
        Objects.equals(this.customerNumber, customerCreditNoteUpdateDto.customerNumber) &&
        Objects.equals(this.documentDate, customerCreditNoteUpdateDto.documentDate) &&
        Objects.equals(this.hold, customerCreditNoteUpdateDto.hold) &&
        Objects.equals(this.postPeriod, customerCreditNoteUpdateDto.postPeriod) &&
        Objects.equals(this.financialPeriod, customerCreditNoteUpdateDto.financialPeriod) &&
        Objects.equals(this.invoiceText, customerCreditNoteUpdateDto.invoiceText) &&
        Objects.equals(this.locationId, customerCreditNoteUpdateDto.locationId) &&
        Objects.equals(this.salesPersonID, customerCreditNoteUpdateDto.salesPersonID) &&
        Objects.equals(this.note, customerCreditNoteUpdateDto.note) &&
        Objects.equals(this.branchNumber, customerCreditNoteUpdateDto.branchNumber) &&
        Objects.equals(this.cashAccount, customerCreditNoteUpdateDto.cashAccount);
  }

  @Override
  public int hashCode() {
    return Objects.hash(currencyId, customerRefNumber, externalReference, contact, project, lines, taxDetails, referenceNumber, customerNumber, documentDate, hold, postPeriod, financialPeriod, invoiceText, locationId, salesPersonID, note, branchNumber, cashAccount);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CustomerCreditNoteUpdateDto {\n");
    
    sb.append("    currencyId: ").append(toIndentedString(currencyId)).append("\n");
    sb.append("    customerRefNumber: ").append(toIndentedString(customerRefNumber)).append("\n");
    sb.append("    externalReference: ").append(toIndentedString(externalReference)).append("\n");
    sb.append("    contact: ").append(toIndentedString(contact)).append("\n");
    sb.append("    project: ").append(toIndentedString(project)).append("\n");
    sb.append("    lines: ").append(toIndentedString(lines)).append("\n");
    sb.append("    taxDetails: ").append(toIndentedString(taxDetails)).append("\n");
    sb.append("    referenceNumber: ").append(toIndentedString(referenceNumber)).append("\n");
    sb.append("    customerNumber: ").append(toIndentedString(customerNumber)).append("\n");
    sb.append("    documentDate: ").append(toIndentedString(documentDate)).append("\n");
    sb.append("    hold: ").append(toIndentedString(hold)).append("\n");
    sb.append("    postPeriod: ").append(toIndentedString(postPeriod)).append("\n");
    sb.append("    financialPeriod: ").append(toIndentedString(financialPeriod)).append("\n");
    sb.append("    invoiceText: ").append(toIndentedString(invoiceText)).append("\n");
    sb.append("    locationId: ").append(toIndentedString(locationId)).append("\n");
    sb.append("    salesPersonID: ").append(toIndentedString(salesPersonID)).append("\n");
    sb.append("    note: ").append(toIndentedString(note)).append("\n");
    sb.append("    branchNumber: ").append(toIndentedString(branchNumber)).append("\n");
    sb.append("    cashAccount: ").append(toIndentedString(cashAccount)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

