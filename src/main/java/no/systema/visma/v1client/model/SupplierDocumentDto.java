/*
 * Visma Net API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 6.13.03.0008
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package no.systema.visma.v1client.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.time.LocalDateTime;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import no.systema.visma.v1client.model.AccountNumberDto;
import no.systema.visma.v1client.model.BranchNumberDto;
import no.systema.visma.v1client.model.LocationDescriptionDto;
import no.systema.visma.v1client.model.PaymentMethodIdDescriptionDto;
import no.systema.visma.v1client.model.SubAccountDto;
import no.systema.visma.v1client.model.SupplierNumberDto;

/**
 * SupplierDocumentDto
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-04-16T15:04:09.234+02:00")
public class SupplierDocumentDto {
  @JsonProperty("account")
  private AccountNumberDto account = null;

  @JsonProperty("subaccount")
  private SubAccountDto subaccount = null;

  @JsonProperty("amount")
  private Double amount = null;

  @JsonProperty("amountInCurrency")
  private Double amountInCurrency = null;

  @JsonProperty("branch")
  private BranchNumberDto branch = null;

  @JsonProperty("supplier")
  private SupplierNumberDto supplier = null;

  /**
   * Gets or Sets documentType
   */
  public enum DocumentTypeEnum {
    CHECK("Check"),
    
    CREDITADJ("CreditAdj"),
    
    DEBITADJ("DebitAdj"),
    
    INVOICE("Invoice"),
    
    PREPAYMENT("Prepayment"),
    
    QUICKCHECK("QuickCheck"),
    
    REFUND("Refund"),
    
    VOIDCHECK("VoidCheck"),
    
    VOIDQUICKCHECK("VoidQuickCheck");

    private String value;

    DocumentTypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static DocumentTypeEnum fromValue(String text) {
      for (DocumentTypeEnum b : DocumentTypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("documentType")
  private DocumentTypeEnum documentType = null;

  @JsonProperty("referenceNumber")
  private String referenceNumber = null;

  @JsonProperty("postPeriod")
  private String postPeriod = null;

  @JsonProperty("financialPeriod")
  private String financialPeriod = null;

  @JsonProperty("date")
  private LocalDateTime date = null;

  @JsonProperty("dueDate")
  private LocalDateTime dueDate = null;

  /**
   * Gets or Sets approvalStatus
   */
  public enum ApprovalStatusEnum {
    NEW("New"),
    
    CANCELED("Canceled"),
    
    SENTTOAPPROVAL("SentToApproval"),
    
    RECEIVEDBYAPPROVAL("ReceivedByApproval"),
    
    INPROGRESSAPPROVAL("InProgressApproval"),
    
    REJECTEDINAPPROVAL("RejectedInApproval"),
    
    APPROVEDINAPPROVAL("ApprovedInApproval"),
    
    ACTIVEWORKFLOWAPPROVAL("ActiveWorkflowApproval");

    private String value;

    ApprovalStatusEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static ApprovalStatusEnum fromValue(String text) {
      for (ApprovalStatusEnum b : ApprovalStatusEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("approvalStatus")
  private ApprovalStatusEnum approvalStatus = null;

  /**
   * Gets or Sets status
   */
  public enum StatusEnum {
    HOLD("Hold"),
    
    BALANCED("Balanced"),
    
    VOIDED("Voided"),
    
    SCHEDULED("Scheduled"),
    
    OPEN("Open"),
    
    CLOSED("Closed"),
    
    PRINTED("Printed"),
    
    PREBOOKED("Prebooked"),
    
    RESERVED("Reserved");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static StatusEnum fromValue(String text) {
      for (StatusEnum b : StatusEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("status")
  private StatusEnum status = null;

  @JsonProperty("currencyId")
  private String currencyId = null;

  @JsonProperty("balance")
  private Double balance = null;

  @JsonProperty("balanceInCurrency")
  private Double balanceInCurrency = null;

  @JsonProperty("cashDiscount")
  private Double cashDiscount = null;

  @JsonProperty("cashDiscountInCurrency")
  private Double cashDiscountInCurrency = null;

  @JsonProperty("paymentMethod")
  private PaymentMethodIdDescriptionDto paymentMethod = null;

  @JsonProperty("supplierReference")
  private String supplierReference = null;

  @JsonProperty("description")
  private String description = null;

  @JsonProperty("createdDateTime")
  private LocalDateTime createdDateTime = null;

  @JsonProperty("lastModifiedDateTime")
  private LocalDateTime lastModifiedDateTime = null;

  @JsonProperty("note")
  private String note = null;

  @JsonProperty("closedFinancialPeriod")
  private String closedFinancialPeriod = null;

  @JsonProperty("location")
  private LocationDescriptionDto location = null;

  @JsonProperty("vatTotal")
  private Double vatTotal = null;

  @JsonProperty("vatTotalInCurrency")
  private Double vatTotalInCurrency = null;

  @JsonProperty("branchNumber")
  private BranchNumberDto branchNumber = null;

  @JsonProperty("extras")
  private Map<String, Object> extras = null;

  @JsonProperty("errorInfo")
  private String errorInfo = null;

  public SupplierDocumentDto account(AccountNumberDto account) {
    this.account = account;
    return this;
  }

   /**
   * Get account
   * @return account
  **/
  @ApiModelProperty(value = "")
  public AccountNumberDto getAccount() {
    return account;
  }

  public void setAccount(AccountNumberDto account) {
    this.account = account;
  }

  public SupplierDocumentDto subaccount(SubAccountDto subaccount) {
    this.subaccount = subaccount;
    return this;
  }

   /**
   * Get subaccount
   * @return subaccount
  **/
  @ApiModelProperty(value = "")
  public SubAccountDto getSubaccount() {
    return subaccount;
  }

  public void setSubaccount(SubAccountDto subaccount) {
    this.subaccount = subaccount;
  }

  public SupplierDocumentDto amount(Double amount) {
    this.amount = amount;
    return this;
  }

   /**
   * Get amount
   * @return amount
  **/
  @ApiModelProperty(value = "")
  public Double getAmount() {
    return amount;
  }

  public void setAmount(Double amount) {
    this.amount = amount;
  }

  public SupplierDocumentDto amountInCurrency(Double amountInCurrency) {
    this.amountInCurrency = amountInCurrency;
    return this;
  }

   /**
   * Get amountInCurrency
   * @return amountInCurrency
  **/
  @ApiModelProperty(value = "")
  public Double getAmountInCurrency() {
    return amountInCurrency;
  }

  public void setAmountInCurrency(Double amountInCurrency) {
    this.amountInCurrency = amountInCurrency;
  }

  public SupplierDocumentDto branch(BranchNumberDto branch) {
    this.branch = branch;
    return this;
  }

   /**
   * Branch is deprecated, please use BranchNumber instead.
   * @return branch
  **/
  @ApiModelProperty(value = "Branch is deprecated, please use BranchNumber instead.")
  public BranchNumberDto getBranch() {
    return branch;
  }

  public void setBranch(BranchNumberDto branch) {
    this.branch = branch;
  }

  public SupplierDocumentDto supplier(SupplierNumberDto supplier) {
    this.supplier = supplier;
    return this;
  }

   /**
   * Get supplier
   * @return supplier
  **/
  @ApiModelProperty(value = "")
  public SupplierNumberDto getSupplier() {
    return supplier;
  }

  public void setSupplier(SupplierNumberDto supplier) {
    this.supplier = supplier;
  }

  public SupplierDocumentDto documentType(DocumentTypeEnum documentType) {
    this.documentType = documentType;
    return this;
  }

   /**
   * Get documentType
   * @return documentType
  **/
  @ApiModelProperty(value = "")
  public DocumentTypeEnum getDocumentType() {
    return documentType;
  }

  public void setDocumentType(DocumentTypeEnum documentType) {
    this.documentType = documentType;
  }

  public SupplierDocumentDto referenceNumber(String referenceNumber) {
    this.referenceNumber = referenceNumber;
    return this;
  }

   /**
   * Get referenceNumber
   * @return referenceNumber
  **/
  @ApiModelProperty(value = "")
  public String getReferenceNumber() {
    return referenceNumber;
  }

  public void setReferenceNumber(String referenceNumber) {
    this.referenceNumber = referenceNumber;
  }

  public SupplierDocumentDto postPeriod(String postPeriod) {
    this.postPeriod = postPeriod;
    return this;
  }

   /**
   * The financial period to which the transactions recorded in the document should be posted. Format MMYYYY.
   * @return postPeriod
  **/
  @ApiModelProperty(value = "The financial period to which the transactions recorded in the document should be posted. Format MMYYYY.")
  public String getPostPeriod() {
    return postPeriod;
  }

  public void setPostPeriod(String postPeriod) {
    this.postPeriod = postPeriod;
  }

  public SupplierDocumentDto financialPeriod(String financialPeriod) {
    this.financialPeriod = financialPeriod;
    return this;
  }

   /**
   * The financial period to which the transactions recorded in the document should be posted. Format YYYYMM.
   * @return financialPeriod
  **/
  @ApiModelProperty(value = "The financial period to which the transactions recorded in the document should be posted. Format YYYYMM.")
  public String getFinancialPeriod() {
    return financialPeriod;
  }

  public void setFinancialPeriod(String financialPeriod) {
    this.financialPeriod = financialPeriod;
  }

  public SupplierDocumentDto date(LocalDateTime date) {
    this.date = date;
    return this;
  }

   /**
   * Get date
   * @return date
  **/
  @ApiModelProperty(value = "")
  public LocalDateTime getDate() {
    return date;
  }

  public void setDate(LocalDateTime date) {
    this.date = date;
  }

  public SupplierDocumentDto dueDate(LocalDateTime dueDate) {
    this.dueDate = dueDate;
    return this;
  }

   /**
   * Get dueDate
   * @return dueDate
  **/
  @ApiModelProperty(value = "")
  public LocalDateTime getDueDate() {
    return dueDate;
  }

  public void setDueDate(LocalDateTime dueDate) {
    this.dueDate = dueDate;
  }

  public SupplierDocumentDto approvalStatus(ApprovalStatusEnum approvalStatus) {
    this.approvalStatus = approvalStatus;
    return this;
  }

   /**
   * Get approvalStatus
   * @return approvalStatus
  **/
  @ApiModelProperty(value = "")
  public ApprovalStatusEnum getApprovalStatus() {
    return approvalStatus;
  }

  public void setApprovalStatus(ApprovalStatusEnum approvalStatus) {
    this.approvalStatus = approvalStatus;
  }

  public SupplierDocumentDto status(StatusEnum status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @ApiModelProperty(value = "")
  public StatusEnum getStatus() {
    return status;
  }

  public void setStatus(StatusEnum status) {
    this.status = status;
  }

  public SupplierDocumentDto currencyId(String currencyId) {
    this.currencyId = currencyId;
    return this;
  }

   /**
   * Get currencyId
   * @return currencyId
  **/
  @ApiModelProperty(value = "")
  public String getCurrencyId() {
    return currencyId;
  }

  public void setCurrencyId(String currencyId) {
    this.currencyId = currencyId;
  }

  public SupplierDocumentDto balance(Double balance) {
    this.balance = balance;
    return this;
  }

   /**
   * Get balance
   * @return balance
  **/
  @ApiModelProperty(value = "")
  public Double getBalance() {
    return balance;
  }

  public void setBalance(Double balance) {
    this.balance = balance;
  }

  public SupplierDocumentDto balanceInCurrency(Double balanceInCurrency) {
    this.balanceInCurrency = balanceInCurrency;
    return this;
  }

   /**
   * Get balanceInCurrency
   * @return balanceInCurrency
  **/
  @ApiModelProperty(value = "")
  public Double getBalanceInCurrency() {
    return balanceInCurrency;
  }

  public void setBalanceInCurrency(Double balanceInCurrency) {
    this.balanceInCurrency = balanceInCurrency;
  }

  public SupplierDocumentDto cashDiscount(Double cashDiscount) {
    this.cashDiscount = cashDiscount;
    return this;
  }

   /**
   * Get cashDiscount
   * @return cashDiscount
  **/
  @ApiModelProperty(value = "")
  public Double getCashDiscount() {
    return cashDiscount;
  }

  public void setCashDiscount(Double cashDiscount) {
    this.cashDiscount = cashDiscount;
  }

  public SupplierDocumentDto cashDiscountInCurrency(Double cashDiscountInCurrency) {
    this.cashDiscountInCurrency = cashDiscountInCurrency;
    return this;
  }

   /**
   * Get cashDiscountInCurrency
   * @return cashDiscountInCurrency
  **/
  @ApiModelProperty(value = "")
  public Double getCashDiscountInCurrency() {
    return cashDiscountInCurrency;
  }

  public void setCashDiscountInCurrency(Double cashDiscountInCurrency) {
    this.cashDiscountInCurrency = cashDiscountInCurrency;
  }

  public SupplierDocumentDto paymentMethod(PaymentMethodIdDescriptionDto paymentMethod) {
    this.paymentMethod = paymentMethod;
    return this;
  }

   /**
   * Get paymentMethod
   * @return paymentMethod
  **/
  @ApiModelProperty(value = "")
  public PaymentMethodIdDescriptionDto getPaymentMethod() {
    return paymentMethod;
  }

  public void setPaymentMethod(PaymentMethodIdDescriptionDto paymentMethod) {
    this.paymentMethod = paymentMethod;
  }

  public SupplierDocumentDto supplierReference(String supplierReference) {
    this.supplierReference = supplierReference;
    return this;
  }

   /**
   * Get supplierReference
   * @return supplierReference
  **/
  @ApiModelProperty(value = "")
  public String getSupplierReference() {
    return supplierReference;
  }

  public void setSupplierReference(String supplierReference) {
    this.supplierReference = supplierReference;
  }

  public SupplierDocumentDto description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @ApiModelProperty(value = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public SupplierDocumentDto createdDateTime(LocalDateTime createdDateTime) {
    this.createdDateTime = createdDateTime;
    return this;
  }

   /**
   * Get createdDateTime
   * @return createdDateTime
  **/
  @ApiModelProperty(value = "")
  public LocalDateTime getCreatedDateTime() {
    return createdDateTime;
  }

  public void setCreatedDateTime(LocalDateTime createdDateTime) {
    this.createdDateTime = createdDateTime;
  }

  public SupplierDocumentDto lastModifiedDateTime(LocalDateTime lastModifiedDateTime) {
    this.lastModifiedDateTime = lastModifiedDateTime;
    return this;
  }

   /**
   * Get lastModifiedDateTime
   * @return lastModifiedDateTime
  **/
  @ApiModelProperty(value = "")
  public LocalDateTime getLastModifiedDateTime() {
    return lastModifiedDateTime;
  }

  public void setLastModifiedDateTime(LocalDateTime lastModifiedDateTime) {
    this.lastModifiedDateTime = lastModifiedDateTime;
  }

  public SupplierDocumentDto note(String note) {
    this.note = note;
    return this;
  }

   /**
   * Get note
   * @return note
  **/
  @ApiModelProperty(value = "")
  public String getNote() {
    return note;
  }

  public void setNote(String note) {
    this.note = note;
  }

  public SupplierDocumentDto closedFinancialPeriod(String closedFinancialPeriod) {
    this.closedFinancialPeriod = closedFinancialPeriod;
    return this;
  }

   /**
   * Format YYYYMM.
   * @return closedFinancialPeriod
  **/
  @ApiModelProperty(value = "Format YYYYMM.")
  public String getClosedFinancialPeriod() {
    return closedFinancialPeriod;
  }

  public void setClosedFinancialPeriod(String closedFinancialPeriod) {
    this.closedFinancialPeriod = closedFinancialPeriod;
  }

  public SupplierDocumentDto location(LocationDescriptionDto location) {
    this.location = location;
    return this;
  }

   /**
   * Get location
   * @return location
  **/
  @ApiModelProperty(value = "")
  public LocationDescriptionDto getLocation() {
    return location;
  }

  public void setLocation(LocationDescriptionDto location) {
    this.location = location;
  }

  public SupplierDocumentDto vatTotal(Double vatTotal) {
    this.vatTotal = vatTotal;
    return this;
  }

   /**
   * Get vatTotal
   * @return vatTotal
  **/
  @ApiModelProperty(value = "")
  public Double getVatTotal() {
    return vatTotal;
  }

  public void setVatTotal(Double vatTotal) {
    this.vatTotal = vatTotal;
  }

  public SupplierDocumentDto vatTotalInCurrency(Double vatTotalInCurrency) {
    this.vatTotalInCurrency = vatTotalInCurrency;
    return this;
  }

   /**
   * Get vatTotalInCurrency
   * @return vatTotalInCurrency
  **/
  @ApiModelProperty(value = "")
  public Double getVatTotalInCurrency() {
    return vatTotalInCurrency;
  }

  public void setVatTotalInCurrency(Double vatTotalInCurrency) {
    this.vatTotalInCurrency = vatTotalInCurrency;
  }

  public SupplierDocumentDto branchNumber(BranchNumberDto branchNumber) {
    this.branchNumber = branchNumber;
    return this;
  }

   /**
   * Get branchNumber
   * @return branchNumber
  **/
  @ApiModelProperty(value = "")
  public BranchNumberDto getBranchNumber() {
    return branchNumber;
  }

  public void setBranchNumber(BranchNumberDto branchNumber) {
    this.branchNumber = branchNumber;
  }

  public SupplierDocumentDto extras(Map<String, Object> extras) {
    this.extras = extras;
    return this;
  }

  public SupplierDocumentDto putExtrasItem(String key, Object extrasItem) {
    if (this.extras == null) {
      this.extras = new HashMap<>();
    }
    this.extras.put(key, extrasItem);
    return this;
  }

   /**
   * Get extras
   * @return extras
  **/
  @ApiModelProperty(value = "")
  public Map<String, Object> getExtras() {
    return extras;
  }

  public void setExtras(Map<String, Object> extras) {
    this.extras = extras;
  }

  public SupplierDocumentDto errorInfo(String errorInfo) {
    this.errorInfo = errorInfo;
    return this;
  }

   /**
   * Get errorInfo
   * @return errorInfo
  **/
  @ApiModelProperty(value = "")
  public String getErrorInfo() {
    return errorInfo;
  }

  public void setErrorInfo(String errorInfo) {
    this.errorInfo = errorInfo;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SupplierDocumentDto supplierDocumentDto = (SupplierDocumentDto) o;
    return Objects.equals(this.account, supplierDocumentDto.account) &&
        Objects.equals(this.subaccount, supplierDocumentDto.subaccount) &&
        Objects.equals(this.amount, supplierDocumentDto.amount) &&
        Objects.equals(this.amountInCurrency, supplierDocumentDto.amountInCurrency) &&
        Objects.equals(this.branch, supplierDocumentDto.branch) &&
        Objects.equals(this.supplier, supplierDocumentDto.supplier) &&
        Objects.equals(this.documentType, supplierDocumentDto.documentType) &&
        Objects.equals(this.referenceNumber, supplierDocumentDto.referenceNumber) &&
        Objects.equals(this.postPeriod, supplierDocumentDto.postPeriod) &&
        Objects.equals(this.financialPeriod, supplierDocumentDto.financialPeriod) &&
        Objects.equals(this.date, supplierDocumentDto.date) &&
        Objects.equals(this.dueDate, supplierDocumentDto.dueDate) &&
        Objects.equals(this.approvalStatus, supplierDocumentDto.approvalStatus) &&
        Objects.equals(this.status, supplierDocumentDto.status) &&
        Objects.equals(this.currencyId, supplierDocumentDto.currencyId) &&
        Objects.equals(this.balance, supplierDocumentDto.balance) &&
        Objects.equals(this.balanceInCurrency, supplierDocumentDto.balanceInCurrency) &&
        Objects.equals(this.cashDiscount, supplierDocumentDto.cashDiscount) &&
        Objects.equals(this.cashDiscountInCurrency, supplierDocumentDto.cashDiscountInCurrency) &&
        Objects.equals(this.paymentMethod, supplierDocumentDto.paymentMethod) &&
        Objects.equals(this.supplierReference, supplierDocumentDto.supplierReference) &&
        Objects.equals(this.description, supplierDocumentDto.description) &&
        Objects.equals(this.createdDateTime, supplierDocumentDto.createdDateTime) &&
        Objects.equals(this.lastModifiedDateTime, supplierDocumentDto.lastModifiedDateTime) &&
        Objects.equals(this.note, supplierDocumentDto.note) &&
        Objects.equals(this.closedFinancialPeriod, supplierDocumentDto.closedFinancialPeriod) &&
        Objects.equals(this.location, supplierDocumentDto.location) &&
        Objects.equals(this.vatTotal, supplierDocumentDto.vatTotal) &&
        Objects.equals(this.vatTotalInCurrency, supplierDocumentDto.vatTotalInCurrency) &&
        Objects.equals(this.branchNumber, supplierDocumentDto.branchNumber) &&
        Objects.equals(this.extras, supplierDocumentDto.extras) &&
        Objects.equals(this.errorInfo, supplierDocumentDto.errorInfo);
  }

  @Override
  public int hashCode() {
    return Objects.hash(account, subaccount, amount, amountInCurrency, branch, supplier, documentType, referenceNumber, postPeriod, financialPeriod, date, dueDate, approvalStatus, status, currencyId, balance, balanceInCurrency, cashDiscount, cashDiscountInCurrency, paymentMethod, supplierReference, description, createdDateTime, lastModifiedDateTime, note, closedFinancialPeriod, location, vatTotal, vatTotalInCurrency, branchNumber, extras, errorInfo);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SupplierDocumentDto {\n");
    
    sb.append("    account: ").append(toIndentedString(account)).append("\n");
    sb.append("    subaccount: ").append(toIndentedString(subaccount)).append("\n");
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("    amountInCurrency: ").append(toIndentedString(amountInCurrency)).append("\n");
    sb.append("    branch: ").append(toIndentedString(branch)).append("\n");
    sb.append("    supplier: ").append(toIndentedString(supplier)).append("\n");
    sb.append("    documentType: ").append(toIndentedString(documentType)).append("\n");
    sb.append("    referenceNumber: ").append(toIndentedString(referenceNumber)).append("\n");
    sb.append("    postPeriod: ").append(toIndentedString(postPeriod)).append("\n");
    sb.append("    financialPeriod: ").append(toIndentedString(financialPeriod)).append("\n");
    sb.append("    date: ").append(toIndentedString(date)).append("\n");
    sb.append("    dueDate: ").append(toIndentedString(dueDate)).append("\n");
    sb.append("    approvalStatus: ").append(toIndentedString(approvalStatus)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    currencyId: ").append(toIndentedString(currencyId)).append("\n");
    sb.append("    balance: ").append(toIndentedString(balance)).append("\n");
    sb.append("    balanceInCurrency: ").append(toIndentedString(balanceInCurrency)).append("\n");
    sb.append("    cashDiscount: ").append(toIndentedString(cashDiscount)).append("\n");
    sb.append("    cashDiscountInCurrency: ").append(toIndentedString(cashDiscountInCurrency)).append("\n");
    sb.append("    paymentMethod: ").append(toIndentedString(paymentMethod)).append("\n");
    sb.append("    supplierReference: ").append(toIndentedString(supplierReference)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    createdDateTime: ").append(toIndentedString(createdDateTime)).append("\n");
    sb.append("    lastModifiedDateTime: ").append(toIndentedString(lastModifiedDateTime)).append("\n");
    sb.append("    note: ").append(toIndentedString(note)).append("\n");
    sb.append("    closedFinancialPeriod: ").append(toIndentedString(closedFinancialPeriod)).append("\n");
    sb.append("    location: ").append(toIndentedString(location)).append("\n");
    sb.append("    vatTotal: ").append(toIndentedString(vatTotal)).append("\n");
    sb.append("    vatTotalInCurrency: ").append(toIndentedString(vatTotalInCurrency)).append("\n");
    sb.append("    branchNumber: ").append(toIndentedString(branchNumber)).append("\n");
    sb.append("    extras: ").append(toIndentedString(extras)).append("\n");
    sb.append("    errorInfo: ").append(toIndentedString(errorInfo)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

