/*
 * Visma Net API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 6.13.03.0008
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package no.systema.visma.v1client.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.time.LocalDateTime;

/**
 * CustomerSalesPriceQueryParameters
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-04-16T15:04:09.234+02:00")
public class CustomerSalesPriceQueryParameters {
  @JsonProperty("greaterThanValue")
  private String greaterThanValue = null;

  @JsonProperty("numberToRead")
  private Integer numberToRead = null;

  @JsonProperty("skipRecords")
  private Integer skipRecords = null;

  /**
   * Gets or Sets priceType
   */
  public enum PriceTypeEnum {
    ALL("All"),
    
    BASE("Base"),
    
    CUSTOMER("Customer"),
    
    CUSTOMERPRICECLASS("CustomerPriceClass");

    private String value;

    PriceTypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static PriceTypeEnum fromValue(String text) {
      for (PriceTypeEnum b : PriceTypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("priceType")
  private PriceTypeEnum priceType = null;

  @JsonProperty("priceCode")
  private String priceCode = null;

  @JsonProperty("inventoryId")
  private String inventoryId = null;

  @JsonProperty("effectiveAsOf")
  private LocalDateTime effectiveAsOf = null;

  @JsonProperty("lastModifiedDateTime")
  private String lastModifiedDateTime = null;

  @JsonProperty("lastModifiedDateTimeCondition")
  private String lastModifiedDateTimeCondition = null;

  @JsonProperty("pageNumber")
  private Integer pageNumber = null;

  @JsonProperty("pageSize")
  private Integer pageSize = null;

  public CustomerSalesPriceQueryParameters greaterThanValue(String greaterThanValue) {
    this.greaterThanValue = greaterThanValue;
    return this;
  }

   /**
   * Get greaterThanValue
   * @return greaterThanValue
  **/
  @ApiModelProperty(value = "")
  public String getGreaterThanValue() {
    return greaterThanValue;
  }

  public void setGreaterThanValue(String greaterThanValue) {
    this.greaterThanValue = greaterThanValue;
  }

  public CustomerSalesPriceQueryParameters numberToRead(Integer numberToRead) {
    this.numberToRead = numberToRead;
    return this;
  }

   /**
   * Get numberToRead
   * @return numberToRead
  **/
  @ApiModelProperty(value = "")
  public Integer getNumberToRead() {
    return numberToRead;
  }

  public void setNumberToRead(Integer numberToRead) {
    this.numberToRead = numberToRead;
  }

  public CustomerSalesPriceQueryParameters skipRecords(Integer skipRecords) {
    this.skipRecords = skipRecords;
    return this;
  }

   /**
   * Get skipRecords
   * @return skipRecords
  **/
  @ApiModelProperty(value = "")
  public Integer getSkipRecords() {
    return skipRecords;
  }

  public void setSkipRecords(Integer skipRecords) {
    this.skipRecords = skipRecords;
  }

  public CustomerSalesPriceQueryParameters priceType(PriceTypeEnum priceType) {
    this.priceType = priceType;
    return this;
  }

   /**
   * Get priceType
   * @return priceType
  **/
  @ApiModelProperty(value = "")
  public PriceTypeEnum getPriceType() {
    return priceType;
  }

  public void setPriceType(PriceTypeEnum priceType) {
    this.priceType = priceType;
  }

  public CustomerSalesPriceQueryParameters priceCode(String priceCode) {
    this.priceCode = priceCode;
    return this;
  }

   /**
   * Get priceCode
   * @return priceCode
  **/
  @ApiModelProperty(value = "")
  public String getPriceCode() {
    return priceCode;
  }

  public void setPriceCode(String priceCode) {
    this.priceCode = priceCode;
  }

  public CustomerSalesPriceQueryParameters inventoryId(String inventoryId) {
    this.inventoryId = inventoryId;
    return this;
  }

   /**
   * Get inventoryId
   * @return inventoryId
  **/
  @ApiModelProperty(value = "")
  public String getInventoryId() {
    return inventoryId;
  }

  public void setInventoryId(String inventoryId) {
    this.inventoryId = inventoryId;
  }

  public CustomerSalesPriceQueryParameters effectiveAsOf(LocalDateTime effectiveAsOf) {
    this.effectiveAsOf = effectiveAsOf;
    return this;
  }

   /**
   * Get effectiveAsOf
   * @return effectiveAsOf
  **/
  @ApiModelProperty(value = "")
  public LocalDateTime getEffectiveAsOf() {
    return effectiveAsOf;
  }

  public void setEffectiveAsOf(LocalDateTime effectiveAsOf) {
    this.effectiveAsOf = effectiveAsOf;
  }

  public CustomerSalesPriceQueryParameters lastModifiedDateTime(String lastModifiedDateTime) {
    this.lastModifiedDateTime = lastModifiedDateTime;
    return this;
  }

   /**
   * Get lastModifiedDateTime
   * @return lastModifiedDateTime
  **/
  @ApiModelProperty(value = "")
  public String getLastModifiedDateTime() {
    return lastModifiedDateTime;
  }

  public void setLastModifiedDateTime(String lastModifiedDateTime) {
    this.lastModifiedDateTime = lastModifiedDateTime;
  }

  public CustomerSalesPriceQueryParameters lastModifiedDateTimeCondition(String lastModifiedDateTimeCondition) {
    this.lastModifiedDateTimeCondition = lastModifiedDateTimeCondition;
    return this;
  }

   /**
   * Get lastModifiedDateTimeCondition
   * @return lastModifiedDateTimeCondition
  **/
  @ApiModelProperty(value = "")
  public String getLastModifiedDateTimeCondition() {
    return lastModifiedDateTimeCondition;
  }

  public void setLastModifiedDateTimeCondition(String lastModifiedDateTimeCondition) {
    this.lastModifiedDateTimeCondition = lastModifiedDateTimeCondition;
  }

  public CustomerSalesPriceQueryParameters pageNumber(Integer pageNumber) {
    this.pageNumber = pageNumber;
    return this;
  }

   /**
   * Get pageNumber
   * @return pageNumber
  **/
  @ApiModelProperty(value = "")
  public Integer getPageNumber() {
    return pageNumber;
  }

  public void setPageNumber(Integer pageNumber) {
    this.pageNumber = pageNumber;
  }

  public CustomerSalesPriceQueryParameters pageSize(Integer pageSize) {
    this.pageSize = pageSize;
    return this;
  }

   /**
   * Get pageSize
   * @return pageSize
  **/
  @ApiModelProperty(value = "")
  public Integer getPageSize() {
    return pageSize;
  }

  public void setPageSize(Integer pageSize) {
    this.pageSize = pageSize;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CustomerSalesPriceQueryParameters customerSalesPriceQueryParameters = (CustomerSalesPriceQueryParameters) o;
    return Objects.equals(this.greaterThanValue, customerSalesPriceQueryParameters.greaterThanValue) &&
        Objects.equals(this.numberToRead, customerSalesPriceQueryParameters.numberToRead) &&
        Objects.equals(this.skipRecords, customerSalesPriceQueryParameters.skipRecords) &&
        Objects.equals(this.priceType, customerSalesPriceQueryParameters.priceType) &&
        Objects.equals(this.priceCode, customerSalesPriceQueryParameters.priceCode) &&
        Objects.equals(this.inventoryId, customerSalesPriceQueryParameters.inventoryId) &&
        Objects.equals(this.effectiveAsOf, customerSalesPriceQueryParameters.effectiveAsOf) &&
        Objects.equals(this.lastModifiedDateTime, customerSalesPriceQueryParameters.lastModifiedDateTime) &&
        Objects.equals(this.lastModifiedDateTimeCondition, customerSalesPriceQueryParameters.lastModifiedDateTimeCondition) &&
        Objects.equals(this.pageNumber, customerSalesPriceQueryParameters.pageNumber) &&
        Objects.equals(this.pageSize, customerSalesPriceQueryParameters.pageSize);
  }

  @Override
  public int hashCode() {
    return Objects.hash(greaterThanValue, numberToRead, skipRecords, priceType, priceCode, inventoryId, effectiveAsOf, lastModifiedDateTime, lastModifiedDateTimeCondition, pageNumber, pageSize);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CustomerSalesPriceQueryParameters {\n");
    
    sb.append("    greaterThanValue: ").append(toIndentedString(greaterThanValue)).append("\n");
    sb.append("    numberToRead: ").append(toIndentedString(numberToRead)).append("\n");
    sb.append("    skipRecords: ").append(toIndentedString(skipRecords)).append("\n");
    sb.append("    priceType: ").append(toIndentedString(priceType)).append("\n");
    sb.append("    priceCode: ").append(toIndentedString(priceCode)).append("\n");
    sb.append("    inventoryId: ").append(toIndentedString(inventoryId)).append("\n");
    sb.append("    effectiveAsOf: ").append(toIndentedString(effectiveAsOf)).append("\n");
    sb.append("    lastModifiedDateTime: ").append(toIndentedString(lastModifiedDateTime)).append("\n");
    sb.append("    lastModifiedDateTimeCondition: ").append(toIndentedString(lastModifiedDateTimeCondition)).append("\n");
    sb.append("    pageNumber: ").append(toIndentedString(pageNumber)).append("\n");
    sb.append("    pageSize: ").append(toIndentedString(pageSize)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

