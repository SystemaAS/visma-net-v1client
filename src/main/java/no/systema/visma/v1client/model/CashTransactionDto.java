/*
 * Visma Net API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 6.13.03.0008
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package no.systema.visma.v1client.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.List;
import no.systema.visma.v1client.model.AccountNumberTypeDescriptionDto;
import no.systema.visma.v1client.model.CashTranTaxDetailDto;
import no.systema.visma.v1client.model.EmployeeNumberNameDto;
import no.systema.visma.v1client.model.EntryTypeIdDescriptionDto;
import no.systema.visma.v1client.model.FinancialsDetailDto;
import no.systema.visma.v1client.model.TransactionDetailDto;

/**
 * CashTransactionDto
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-04-16T15:04:09.234+02:00")
public class CashTransactionDto {
  /**
   * Gets or Sets tranType
   */
  public enum TranTypeEnum {
    TRANSFEROUT("TransferOut"),
    
    TRANSFERIN("TransferIn"),
    
    TRANSFEREXP("TransferExp"),
    
    ADJUSTMENT("Adjustment");

    private String value;

    TranTypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static TranTypeEnum fromValue(String text) {
      for (TranTypeEnum b : TranTypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("tranType")
  private TranTypeEnum tranType = null;

  @JsonProperty("referenceNbr")
  private String referenceNbr = null;

  /**
   * Gets or Sets status
   */
  public enum StatusEnum {
    BALANCED("Balanced"),
    
    HOLD("Hold"),
    
    RELEASED("Released"),
    
    PENDING("Pending"),
    
    REJECTED("Rejected");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static StatusEnum fromValue(String text) {
      for (StatusEnum b : StatusEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("status")
  private StatusEnum status = null;

  @JsonProperty("hold")
  private Boolean hold = null;

  @JsonProperty("tranDate")
  private LocalDateTime tranDate = null;

  @JsonProperty("finPeriod")
  private String finPeriod = null;

  @JsonProperty("financialPeriod")
  private String financialPeriod = null;

  @JsonProperty("cashAccount")
  private AccountNumberTypeDescriptionDto cashAccount = null;

  @JsonProperty("currency")
  private String currency = null;

  @JsonProperty("entryType")
  private EntryTypeIdDescriptionDto entryType = null;

  /**
   * Gets or Sets disbReceipt
   */
  public enum DisbReceiptEnum {
    DISBURSEMENT("Disbursement"),
    
    RECEIPT("Receipt");

    private String value;

    DisbReceiptEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static DisbReceiptEnum fromValue(String text) {
      for (DisbReceiptEnum b : DisbReceiptEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("disbReceipt")
  private DisbReceiptEnum disbReceipt = null;

  @JsonProperty("documentRef")
  private String documentRef = null;

  @JsonProperty("owner")
  private EmployeeNumberNameDto owner = null;

  @JsonProperty("description")
  private String description = null;

  @JsonProperty("amount")
  private Double amount = null;

  @JsonProperty("vatTaxableTotal")
  private Double vatTaxableTotal = null;

  @JsonProperty("vatExemptTotal")
  private Double vatExemptTotal = null;

  @JsonProperty("taxTotal")
  private Double taxTotal = null;

  @JsonProperty("controlTotal")
  private Double controlTotal = null;

  @JsonProperty("taxAmount")
  private Double taxAmount = null;

  @JsonProperty("lastModifiedDateTime")
  private LocalDateTime lastModifiedDateTime = null;

  @JsonProperty("transactionDetails")
  private List<TransactionDetailDto> transactionDetails = null;

  @JsonProperty("taxDetails")
  private List<CashTranTaxDetailDto> taxDetails = null;

  @JsonProperty("financialsDetail")
  private FinancialsDetailDto financialsDetail = null;

  public CashTransactionDto tranType(TranTypeEnum tranType) {
    this.tranType = tranType;
    return this;
  }

   /**
   * Get tranType
   * @return tranType
  **/
  @ApiModelProperty(value = "")
  public TranTypeEnum getTranType() {
    return tranType;
  }

  public void setTranType(TranTypeEnum tranType) {
    this.tranType = tranType;
  }

  public CashTransactionDto referenceNbr(String referenceNbr) {
    this.referenceNbr = referenceNbr;
    return this;
  }

   /**
   * Get referenceNbr
   * @return referenceNbr
  **/
  @ApiModelProperty(value = "")
  public String getReferenceNbr() {
    return referenceNbr;
  }

  public void setReferenceNbr(String referenceNbr) {
    this.referenceNbr = referenceNbr;
  }

  public CashTransactionDto status(StatusEnum status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @ApiModelProperty(value = "")
  public StatusEnum getStatus() {
    return status;
  }

  public void setStatus(StatusEnum status) {
    this.status = status;
  }

  public CashTransactionDto hold(Boolean hold) {
    this.hold = hold;
    return this;
  }

   /**
   * Get hold
   * @return hold
  **/
  @ApiModelProperty(value = "")
  public Boolean isHold() {
    return hold;
  }

  public void setHold(Boolean hold) {
    this.hold = hold;
  }

  public CashTransactionDto tranDate(LocalDateTime tranDate) {
    this.tranDate = tranDate;
    return this;
  }

   /**
   * Get tranDate
   * @return tranDate
  **/
  @ApiModelProperty(value = "")
  public LocalDateTime getTranDate() {
    return tranDate;
  }

  public void setTranDate(LocalDateTime tranDate) {
    this.tranDate = tranDate;
  }

  public CashTransactionDto finPeriod(String finPeriod) {
    this.finPeriod = finPeriod;
    return this;
  }

   /**
   * The property is now considered obsolete. Use Financial Period instead
   * @return finPeriod
  **/
  @ApiModelProperty(value = "The property is now considered obsolete. Use Financial Period instead")
  public String getFinPeriod() {
    return finPeriod;
  }

  public void setFinPeriod(String finPeriod) {
    this.finPeriod = finPeriod;
  }

  public CashTransactionDto financialPeriod(String financialPeriod) {
    this.financialPeriod = financialPeriod;
    return this;
  }

   /**
   * Get financialPeriod
   * @return financialPeriod
  **/
  @ApiModelProperty(value = "")
  public String getFinancialPeriod() {
    return financialPeriod;
  }

  public void setFinancialPeriod(String financialPeriod) {
    this.financialPeriod = financialPeriod;
  }

  public CashTransactionDto cashAccount(AccountNumberTypeDescriptionDto cashAccount) {
    this.cashAccount = cashAccount;
    return this;
  }

   /**
   * Get cashAccount
   * @return cashAccount
  **/
  @ApiModelProperty(value = "")
  public AccountNumberTypeDescriptionDto getCashAccount() {
    return cashAccount;
  }

  public void setCashAccount(AccountNumberTypeDescriptionDto cashAccount) {
    this.cashAccount = cashAccount;
  }

  public CashTransactionDto currency(String currency) {
    this.currency = currency;
    return this;
  }

   /**
   * Get currency
   * @return currency
  **/
  @ApiModelProperty(value = "")
  public String getCurrency() {
    return currency;
  }

  public void setCurrency(String currency) {
    this.currency = currency;
  }

  public CashTransactionDto entryType(EntryTypeIdDescriptionDto entryType) {
    this.entryType = entryType;
    return this;
  }

   /**
   * Get entryType
   * @return entryType
  **/
  @ApiModelProperty(value = "")
  public EntryTypeIdDescriptionDto getEntryType() {
    return entryType;
  }

  public void setEntryType(EntryTypeIdDescriptionDto entryType) {
    this.entryType = entryType;
  }

  public CashTransactionDto disbReceipt(DisbReceiptEnum disbReceipt) {
    this.disbReceipt = disbReceipt;
    return this;
  }

   /**
   * Get disbReceipt
   * @return disbReceipt
  **/
  @ApiModelProperty(value = "")
  public DisbReceiptEnum getDisbReceipt() {
    return disbReceipt;
  }

  public void setDisbReceipt(DisbReceiptEnum disbReceipt) {
    this.disbReceipt = disbReceipt;
  }

  public CashTransactionDto documentRef(String documentRef) {
    this.documentRef = documentRef;
    return this;
  }

   /**
   * Get documentRef
   * @return documentRef
  **/
  @ApiModelProperty(value = "")
  public String getDocumentRef() {
    return documentRef;
  }

  public void setDocumentRef(String documentRef) {
    this.documentRef = documentRef;
  }

  public CashTransactionDto owner(EmployeeNumberNameDto owner) {
    this.owner = owner;
    return this;
  }

   /**
   * Get owner
   * @return owner
  **/
  @ApiModelProperty(value = "")
  public EmployeeNumberNameDto getOwner() {
    return owner;
  }

  public void setOwner(EmployeeNumberNameDto owner) {
    this.owner = owner;
  }

  public CashTransactionDto description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @ApiModelProperty(value = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public CashTransactionDto amount(Double amount) {
    this.amount = amount;
    return this;
  }

   /**
   * Get amount
   * @return amount
  **/
  @ApiModelProperty(value = "")
  public Double getAmount() {
    return amount;
  }

  public void setAmount(Double amount) {
    this.amount = amount;
  }

  public CashTransactionDto vatTaxableTotal(Double vatTaxableTotal) {
    this.vatTaxableTotal = vatTaxableTotal;
    return this;
  }

   /**
   * Get vatTaxableTotal
   * @return vatTaxableTotal
  **/
  @ApiModelProperty(value = "")
  public Double getVatTaxableTotal() {
    return vatTaxableTotal;
  }

  public void setVatTaxableTotal(Double vatTaxableTotal) {
    this.vatTaxableTotal = vatTaxableTotal;
  }

  public CashTransactionDto vatExemptTotal(Double vatExemptTotal) {
    this.vatExemptTotal = vatExemptTotal;
    return this;
  }

   /**
   * Get vatExemptTotal
   * @return vatExemptTotal
  **/
  @ApiModelProperty(value = "")
  public Double getVatExemptTotal() {
    return vatExemptTotal;
  }

  public void setVatExemptTotal(Double vatExemptTotal) {
    this.vatExemptTotal = vatExemptTotal;
  }

  public CashTransactionDto taxTotal(Double taxTotal) {
    this.taxTotal = taxTotal;
    return this;
  }

   /**
   * Get taxTotal
   * @return taxTotal
  **/
  @ApiModelProperty(value = "")
  public Double getTaxTotal() {
    return taxTotal;
  }

  public void setTaxTotal(Double taxTotal) {
    this.taxTotal = taxTotal;
  }

  public CashTransactionDto controlTotal(Double controlTotal) {
    this.controlTotal = controlTotal;
    return this;
  }

   /**
   * Get controlTotal
   * @return controlTotal
  **/
  @ApiModelProperty(value = "")
  public Double getControlTotal() {
    return controlTotal;
  }

  public void setControlTotal(Double controlTotal) {
    this.controlTotal = controlTotal;
  }

  public CashTransactionDto taxAmount(Double taxAmount) {
    this.taxAmount = taxAmount;
    return this;
  }

   /**
   * Get taxAmount
   * @return taxAmount
  **/
  @ApiModelProperty(value = "")
  public Double getTaxAmount() {
    return taxAmount;
  }

  public void setTaxAmount(Double taxAmount) {
    this.taxAmount = taxAmount;
  }

  public CashTransactionDto lastModifiedDateTime(LocalDateTime lastModifiedDateTime) {
    this.lastModifiedDateTime = lastModifiedDateTime;
    return this;
  }

   /**
   * Get lastModifiedDateTime
   * @return lastModifiedDateTime
  **/
  @ApiModelProperty(value = "")
  public LocalDateTime getLastModifiedDateTime() {
    return lastModifiedDateTime;
  }

  public void setLastModifiedDateTime(LocalDateTime lastModifiedDateTime) {
    this.lastModifiedDateTime = lastModifiedDateTime;
  }

  public CashTransactionDto transactionDetails(List<TransactionDetailDto> transactionDetails) {
    this.transactionDetails = transactionDetails;
    return this;
  }

  public CashTransactionDto addTransactionDetailsItem(TransactionDetailDto transactionDetailsItem) {
    if (this.transactionDetails == null) {
      this.transactionDetails = new ArrayList<>();
    }
    this.transactionDetails.add(transactionDetailsItem);
    return this;
  }

   /**
   * Get transactionDetails
   * @return transactionDetails
  **/
  @ApiModelProperty(value = "")
  public List<TransactionDetailDto> getTransactionDetails() {
    return transactionDetails;
  }

  public void setTransactionDetails(List<TransactionDetailDto> transactionDetails) {
    this.transactionDetails = transactionDetails;
  }

  public CashTransactionDto taxDetails(List<CashTranTaxDetailDto> taxDetails) {
    this.taxDetails = taxDetails;
    return this;
  }

  public CashTransactionDto addTaxDetailsItem(CashTranTaxDetailDto taxDetailsItem) {
    if (this.taxDetails == null) {
      this.taxDetails = new ArrayList<>();
    }
    this.taxDetails.add(taxDetailsItem);
    return this;
  }

   /**
   * Get taxDetails
   * @return taxDetails
  **/
  @ApiModelProperty(value = "")
  public List<CashTranTaxDetailDto> getTaxDetails() {
    return taxDetails;
  }

  public void setTaxDetails(List<CashTranTaxDetailDto> taxDetails) {
    this.taxDetails = taxDetails;
  }

  public CashTransactionDto financialsDetail(FinancialsDetailDto financialsDetail) {
    this.financialsDetail = financialsDetail;
    return this;
  }

   /**
   * Get financialsDetail
   * @return financialsDetail
  **/
  @ApiModelProperty(value = "")
  public FinancialsDetailDto getFinancialsDetail() {
    return financialsDetail;
  }

  public void setFinancialsDetail(FinancialsDetailDto financialsDetail) {
    this.financialsDetail = financialsDetail;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CashTransactionDto cashTransactionDto = (CashTransactionDto) o;
    return Objects.equals(this.tranType, cashTransactionDto.tranType) &&
        Objects.equals(this.referenceNbr, cashTransactionDto.referenceNbr) &&
        Objects.equals(this.status, cashTransactionDto.status) &&
        Objects.equals(this.hold, cashTransactionDto.hold) &&
        Objects.equals(this.tranDate, cashTransactionDto.tranDate) &&
        Objects.equals(this.finPeriod, cashTransactionDto.finPeriod) &&
        Objects.equals(this.financialPeriod, cashTransactionDto.financialPeriod) &&
        Objects.equals(this.cashAccount, cashTransactionDto.cashAccount) &&
        Objects.equals(this.currency, cashTransactionDto.currency) &&
        Objects.equals(this.entryType, cashTransactionDto.entryType) &&
        Objects.equals(this.disbReceipt, cashTransactionDto.disbReceipt) &&
        Objects.equals(this.documentRef, cashTransactionDto.documentRef) &&
        Objects.equals(this.owner, cashTransactionDto.owner) &&
        Objects.equals(this.description, cashTransactionDto.description) &&
        Objects.equals(this.amount, cashTransactionDto.amount) &&
        Objects.equals(this.vatTaxableTotal, cashTransactionDto.vatTaxableTotal) &&
        Objects.equals(this.vatExemptTotal, cashTransactionDto.vatExemptTotal) &&
        Objects.equals(this.taxTotal, cashTransactionDto.taxTotal) &&
        Objects.equals(this.controlTotal, cashTransactionDto.controlTotal) &&
        Objects.equals(this.taxAmount, cashTransactionDto.taxAmount) &&
        Objects.equals(this.lastModifiedDateTime, cashTransactionDto.lastModifiedDateTime) &&
        Objects.equals(this.transactionDetails, cashTransactionDto.transactionDetails) &&
        Objects.equals(this.taxDetails, cashTransactionDto.taxDetails) &&
        Objects.equals(this.financialsDetail, cashTransactionDto.financialsDetail);
  }

  @Override
  public int hashCode() {
    return Objects.hash(tranType, referenceNbr, status, hold, tranDate, finPeriod, financialPeriod, cashAccount, currency, entryType, disbReceipt, documentRef, owner, description, amount, vatTaxableTotal, vatExemptTotal, taxTotal, controlTotal, taxAmount, lastModifiedDateTime, transactionDetails, taxDetails, financialsDetail);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CashTransactionDto {\n");
    
    sb.append("    tranType: ").append(toIndentedString(tranType)).append("\n");
    sb.append("    referenceNbr: ").append(toIndentedString(referenceNbr)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    hold: ").append(toIndentedString(hold)).append("\n");
    sb.append("    tranDate: ").append(toIndentedString(tranDate)).append("\n");
    sb.append("    finPeriod: ").append(toIndentedString(finPeriod)).append("\n");
    sb.append("    financialPeriod: ").append(toIndentedString(financialPeriod)).append("\n");
    sb.append("    cashAccount: ").append(toIndentedString(cashAccount)).append("\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    entryType: ").append(toIndentedString(entryType)).append("\n");
    sb.append("    disbReceipt: ").append(toIndentedString(disbReceipt)).append("\n");
    sb.append("    documentRef: ").append(toIndentedString(documentRef)).append("\n");
    sb.append("    owner: ").append(toIndentedString(owner)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("    vatTaxableTotal: ").append(toIndentedString(vatTaxableTotal)).append("\n");
    sb.append("    vatExemptTotal: ").append(toIndentedString(vatExemptTotal)).append("\n");
    sb.append("    taxTotal: ").append(toIndentedString(taxTotal)).append("\n");
    sb.append("    controlTotal: ").append(toIndentedString(controlTotal)).append("\n");
    sb.append("    taxAmount: ").append(toIndentedString(taxAmount)).append("\n");
    sb.append("    lastModifiedDateTime: ").append(toIndentedString(lastModifiedDateTime)).append("\n");
    sb.append("    transactionDetails: ").append(toIndentedString(transactionDetails)).append("\n");
    sb.append("    taxDetails: ").append(toIndentedString(taxDetails)).append("\n");
    sb.append("    financialsDetail: ").append(toIndentedString(financialsDetail)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

