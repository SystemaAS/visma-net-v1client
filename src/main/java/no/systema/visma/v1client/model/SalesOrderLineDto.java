/*
 * Visma Net API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 6.13.03.0008
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package no.systema.visma.v1client.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.List;
import no.systema.visma.v1client.model.AttachmentDto;
import no.systema.visma.v1client.model.BranchNumberDto;
import no.systema.visma.v1client.model.InventoryNumberDescriptionDto;
import no.systema.visma.v1client.model.SalesPersonDto;
import no.systema.visma.v1client.model.WarehouseIdDescriptionDto;

/**
 * SalesOrderLineDto
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-04-16T15:04:09.234+02:00")
public class SalesOrderLineDto {
  @JsonProperty("invoiceNbr")
  private String invoiceNbr = null;

  /**
   * Gets or Sets operation
   */
  public enum OperationEnum {
    ISSUE("Issue"),
    
    RECEIPT("Receipt");

    private String value;

    OperationEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static OperationEnum fromValue(String text) {
      for (OperationEnum b : OperationEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("operation")
  private OperationEnum operation = null;

  @JsonProperty("freeItem")
  private Boolean freeItem = null;

  @JsonProperty("requestedOn")
  private LocalDateTime requestedOn = null;

  @JsonProperty("shipOn")
  private LocalDateTime shipOn = null;

  /**
   * Gets or Sets shipComplete
   */
  public enum ShipCompleteEnum {
    BACKORDERALLOWED("BackOrderAllowed"),
    
    CANCELREMAINDER("CancelRemainder"),
    
    SHIPCOMPLETE("ShipComplete");

    private String value;

    ShipCompleteEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static ShipCompleteEnum fromValue(String text) {
      for (ShipCompleteEnum b : ShipCompleteEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("shipComplete")
  private ShipCompleteEnum shipComplete = null;

  @JsonProperty("undershipThreshold")
  private Double undershipThreshold = null;

  @JsonProperty("overshipThreshold")
  private Double overshipThreshold = null;

  @JsonProperty("completed")
  private Boolean completed = null;

  @JsonProperty("markForPO")
  private Boolean markForPO = null;

  /**
   * Gets or Sets poSource
   */
  public enum PoSourceEnum {
    DROPSHIPTOORDER("DropShipToOrder"),
    
    MANUFACTURED("Manufactured"),
    
    NONE("None"),
    
    PURCHASED("Purchased"),
    
    PURCHASETOORDER("PurchaseToOrder"),
    
    TRANSFER("Transfer");

    private String value;

    PoSourceEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static PoSourceEnum fromValue(String text) {
      for (PoSourceEnum b : PoSourceEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("poSource")
  private PoSourceEnum poSource = null;

  @JsonProperty("lotSerialNbr")
  private String lotSerialNbr = null;

  @JsonProperty("expirationDate")
  private LocalDateTime expirationDate = null;

  @JsonProperty("reasonCode")
  private String reasonCode = null;

  @JsonProperty("salesPerson")
  private SalesPersonDto salesPerson = null;

  @JsonProperty("taxCategory")
  private String taxCategory = null;

  @JsonProperty("commissionable")
  private Boolean commissionable = null;

  @JsonProperty("alternateID")
  private String alternateID = null;

  @JsonProperty("projectTask")
  private Integer projectTask = null;

  @JsonProperty("lineNbr")
  private Integer lineNbr = null;

  @JsonProperty("sortOrder")
  private Integer sortOrder = null;

  @JsonProperty("inventory")
  private InventoryNumberDescriptionDto inventory = null;

  @JsonProperty("warehouse")
  private WarehouseIdDescriptionDto warehouse = null;

  @JsonProperty("uom")
  private String uom = null;

  @JsonProperty("quantity")
  private Double quantity = null;

  @JsonProperty("qtyOnShipments")
  private Double qtyOnShipments = null;

  @JsonProperty("openQty")
  private Double openQty = null;

  @JsonProperty("unitCost")
  private Double unitCost = null;

  @JsonProperty("unitPrice")
  private Double unitPrice = null;

  @JsonProperty("discountCode")
  private String discountCode = null;

  @JsonProperty("discountPercent")
  private Double discountPercent = null;

  @JsonProperty("discountAmount")
  private Double discountAmount = null;

  @JsonProperty("manualDiscount")
  private Boolean manualDiscount = null;

  @JsonProperty("discUnitPrice")
  private Double discUnitPrice = null;

  @JsonProperty("extPrice")
  private Double extPrice = null;

  @JsonProperty("unbilledAmount")
  private Double unbilledAmount = null;

  @JsonProperty("lineDescription")
  private String lineDescription = null;

  @JsonProperty("branchNumber")
  private BranchNumberDto branchNumber = null;

  @JsonProperty("note")
  private String note = null;

  @JsonProperty("attachments")
  private List<AttachmentDto> attachments = null;

  public SalesOrderLineDto invoiceNbr(String invoiceNbr) {
    this.invoiceNbr = invoiceNbr;
    return this;
  }

   /**
   * Get invoiceNbr
   * @return invoiceNbr
  **/
  @ApiModelProperty(value = "")
  public String getInvoiceNbr() {
    return invoiceNbr;
  }

  public void setInvoiceNbr(String invoiceNbr) {
    this.invoiceNbr = invoiceNbr;
  }

  public SalesOrderLineDto operation(OperationEnum operation) {
    this.operation = operation;
    return this;
  }

   /**
   * Get operation
   * @return operation
  **/
  @ApiModelProperty(value = "")
  public OperationEnum getOperation() {
    return operation;
  }

  public void setOperation(OperationEnum operation) {
    this.operation = operation;
  }

  public SalesOrderLineDto freeItem(Boolean freeItem) {
    this.freeItem = freeItem;
    return this;
  }

   /**
   * Get freeItem
   * @return freeItem
  **/
  @ApiModelProperty(value = "")
  public Boolean isFreeItem() {
    return freeItem;
  }

  public void setFreeItem(Boolean freeItem) {
    this.freeItem = freeItem;
  }

  public SalesOrderLineDto requestedOn(LocalDateTime requestedOn) {
    this.requestedOn = requestedOn;
    return this;
  }

   /**
   * Get requestedOn
   * @return requestedOn
  **/
  @ApiModelProperty(value = "")
  public LocalDateTime getRequestedOn() {
    return requestedOn;
  }

  public void setRequestedOn(LocalDateTime requestedOn) {
    this.requestedOn = requestedOn;
  }

  public SalesOrderLineDto shipOn(LocalDateTime shipOn) {
    this.shipOn = shipOn;
    return this;
  }

   /**
   * Get shipOn
   * @return shipOn
  **/
  @ApiModelProperty(value = "")
  public LocalDateTime getShipOn() {
    return shipOn;
  }

  public void setShipOn(LocalDateTime shipOn) {
    this.shipOn = shipOn;
  }

  public SalesOrderLineDto shipComplete(ShipCompleteEnum shipComplete) {
    this.shipComplete = shipComplete;
    return this;
  }

   /**
   * Get shipComplete
   * @return shipComplete
  **/
  @ApiModelProperty(value = "")
  public ShipCompleteEnum getShipComplete() {
    return shipComplete;
  }

  public void setShipComplete(ShipCompleteEnum shipComplete) {
    this.shipComplete = shipComplete;
  }

  public SalesOrderLineDto undershipThreshold(Double undershipThreshold) {
    this.undershipThreshold = undershipThreshold;
    return this;
  }

   /**
   * Get undershipThreshold
   * @return undershipThreshold
  **/
  @ApiModelProperty(value = "")
  public Double getUndershipThreshold() {
    return undershipThreshold;
  }

  public void setUndershipThreshold(Double undershipThreshold) {
    this.undershipThreshold = undershipThreshold;
  }

  public SalesOrderLineDto overshipThreshold(Double overshipThreshold) {
    this.overshipThreshold = overshipThreshold;
    return this;
  }

   /**
   * Get overshipThreshold
   * @return overshipThreshold
  **/
  @ApiModelProperty(value = "")
  public Double getOvershipThreshold() {
    return overshipThreshold;
  }

  public void setOvershipThreshold(Double overshipThreshold) {
    this.overshipThreshold = overshipThreshold;
  }

  public SalesOrderLineDto completed(Boolean completed) {
    this.completed = completed;
    return this;
  }

   /**
   * Get completed
   * @return completed
  **/
  @ApiModelProperty(value = "")
  public Boolean isCompleted() {
    return completed;
  }

  public void setCompleted(Boolean completed) {
    this.completed = completed;
  }

  public SalesOrderLineDto markForPO(Boolean markForPO) {
    this.markForPO = markForPO;
    return this;
  }

   /**
   * Get markForPO
   * @return markForPO
  **/
  @ApiModelProperty(value = "")
  public Boolean isMarkForPO() {
    return markForPO;
  }

  public void setMarkForPO(Boolean markForPO) {
    this.markForPO = markForPO;
  }

  public SalesOrderLineDto poSource(PoSourceEnum poSource) {
    this.poSource = poSource;
    return this;
  }

   /**
   * Get poSource
   * @return poSource
  **/
  @ApiModelProperty(value = "")
  public PoSourceEnum getPoSource() {
    return poSource;
  }

  public void setPoSource(PoSourceEnum poSource) {
    this.poSource = poSource;
  }

  public SalesOrderLineDto lotSerialNbr(String lotSerialNbr) {
    this.lotSerialNbr = lotSerialNbr;
    return this;
  }

   /**
   * Get lotSerialNbr
   * @return lotSerialNbr
  **/
  @ApiModelProperty(value = "")
  public String getLotSerialNbr() {
    return lotSerialNbr;
  }

  public void setLotSerialNbr(String lotSerialNbr) {
    this.lotSerialNbr = lotSerialNbr;
  }

  public SalesOrderLineDto expirationDate(LocalDateTime expirationDate) {
    this.expirationDate = expirationDate;
    return this;
  }

   /**
   * Get expirationDate
   * @return expirationDate
  **/
  @ApiModelProperty(value = "")
  public LocalDateTime getExpirationDate() {
    return expirationDate;
  }

  public void setExpirationDate(LocalDateTime expirationDate) {
    this.expirationDate = expirationDate;
  }

  public SalesOrderLineDto reasonCode(String reasonCode) {
    this.reasonCode = reasonCode;
    return this;
  }

   /**
   * Get reasonCode
   * @return reasonCode
  **/
  @ApiModelProperty(value = "")
  public String getReasonCode() {
    return reasonCode;
  }

  public void setReasonCode(String reasonCode) {
    this.reasonCode = reasonCode;
  }

  public SalesOrderLineDto salesPerson(SalesPersonDto salesPerson) {
    this.salesPerson = salesPerson;
    return this;
  }

   /**
   * Get salesPerson
   * @return salesPerson
  **/
  @ApiModelProperty(value = "")
  public SalesPersonDto getSalesPerson() {
    return salesPerson;
  }

  public void setSalesPerson(SalesPersonDto salesPerson) {
    this.salesPerson = salesPerson;
  }

  public SalesOrderLineDto taxCategory(String taxCategory) {
    this.taxCategory = taxCategory;
    return this;
  }

   /**
   * Get taxCategory
   * @return taxCategory
  **/
  @ApiModelProperty(value = "")
  public String getTaxCategory() {
    return taxCategory;
  }

  public void setTaxCategory(String taxCategory) {
    this.taxCategory = taxCategory;
  }

  public SalesOrderLineDto commissionable(Boolean commissionable) {
    this.commissionable = commissionable;
    return this;
  }

   /**
   * Get commissionable
   * @return commissionable
  **/
  @ApiModelProperty(value = "")
  public Boolean isCommissionable() {
    return commissionable;
  }

  public void setCommissionable(Boolean commissionable) {
    this.commissionable = commissionable;
  }

  public SalesOrderLineDto alternateID(String alternateID) {
    this.alternateID = alternateID;
    return this;
  }

   /**
   * Get alternateID
   * @return alternateID
  **/
  @ApiModelProperty(value = "")
  public String getAlternateID() {
    return alternateID;
  }

  public void setAlternateID(String alternateID) {
    this.alternateID = alternateID;
  }

  public SalesOrderLineDto projectTask(Integer projectTask) {
    this.projectTask = projectTask;
    return this;
  }

   /**
   * Get projectTask
   * @return projectTask
  **/
  @ApiModelProperty(value = "")
  public Integer getProjectTask() {
    return projectTask;
  }

  public void setProjectTask(Integer projectTask) {
    this.projectTask = projectTask;
  }

  public SalesOrderLineDto lineNbr(Integer lineNbr) {
    this.lineNbr = lineNbr;
    return this;
  }

   /**
   * Get lineNbr
   * @return lineNbr
  **/
  @ApiModelProperty(value = "")
  public Integer getLineNbr() {
    return lineNbr;
  }

  public void setLineNbr(Integer lineNbr) {
    this.lineNbr = lineNbr;
  }

  public SalesOrderLineDto sortOrder(Integer sortOrder) {
    this.sortOrder = sortOrder;
    return this;
  }

   /**
   * Get sortOrder
   * @return sortOrder
  **/
  @ApiModelProperty(value = "")
  public Integer getSortOrder() {
    return sortOrder;
  }

  public void setSortOrder(Integer sortOrder) {
    this.sortOrder = sortOrder;
  }

  public SalesOrderLineDto inventory(InventoryNumberDescriptionDto inventory) {
    this.inventory = inventory;
    return this;
  }

   /**
   * Get inventory
   * @return inventory
  **/
  @ApiModelProperty(value = "")
  public InventoryNumberDescriptionDto getInventory() {
    return inventory;
  }

  public void setInventory(InventoryNumberDescriptionDto inventory) {
    this.inventory = inventory;
  }

  public SalesOrderLineDto warehouse(WarehouseIdDescriptionDto warehouse) {
    this.warehouse = warehouse;
    return this;
  }

   /**
   * Get warehouse
   * @return warehouse
  **/
  @ApiModelProperty(value = "")
  public WarehouseIdDescriptionDto getWarehouse() {
    return warehouse;
  }

  public void setWarehouse(WarehouseIdDescriptionDto warehouse) {
    this.warehouse = warehouse;
  }

  public SalesOrderLineDto uom(String uom) {
    this.uom = uom;
    return this;
  }

   /**
   * Get uom
   * @return uom
  **/
  @ApiModelProperty(value = "")
  public String getUom() {
    return uom;
  }

  public void setUom(String uom) {
    this.uom = uom;
  }

  public SalesOrderLineDto quantity(Double quantity) {
    this.quantity = quantity;
    return this;
  }

   /**
   * Get quantity
   * @return quantity
  **/
  @ApiModelProperty(value = "")
  public Double getQuantity() {
    return quantity;
  }

  public void setQuantity(Double quantity) {
    this.quantity = quantity;
  }

  public SalesOrderLineDto qtyOnShipments(Double qtyOnShipments) {
    this.qtyOnShipments = qtyOnShipments;
    return this;
  }

   /**
   * Get qtyOnShipments
   * @return qtyOnShipments
  **/
  @ApiModelProperty(value = "")
  public Double getQtyOnShipments() {
    return qtyOnShipments;
  }

  public void setQtyOnShipments(Double qtyOnShipments) {
    this.qtyOnShipments = qtyOnShipments;
  }

  public SalesOrderLineDto openQty(Double openQty) {
    this.openQty = openQty;
    return this;
  }

   /**
   * Get openQty
   * @return openQty
  **/
  @ApiModelProperty(value = "")
  public Double getOpenQty() {
    return openQty;
  }

  public void setOpenQty(Double openQty) {
    this.openQty = openQty;
  }

  public SalesOrderLineDto unitCost(Double unitCost) {
    this.unitCost = unitCost;
    return this;
  }

   /**
   * Get unitCost
   * @return unitCost
  **/
  @ApiModelProperty(value = "")
  public Double getUnitCost() {
    return unitCost;
  }

  public void setUnitCost(Double unitCost) {
    this.unitCost = unitCost;
  }

  public SalesOrderLineDto unitPrice(Double unitPrice) {
    this.unitPrice = unitPrice;
    return this;
  }

   /**
   * Get unitPrice
   * @return unitPrice
  **/
  @ApiModelProperty(value = "")
  public Double getUnitPrice() {
    return unitPrice;
  }

  public void setUnitPrice(Double unitPrice) {
    this.unitPrice = unitPrice;
  }

  public SalesOrderLineDto discountCode(String discountCode) {
    this.discountCode = discountCode;
    return this;
  }

   /**
   * Get discountCode
   * @return discountCode
  **/
  @ApiModelProperty(value = "")
  public String getDiscountCode() {
    return discountCode;
  }

  public void setDiscountCode(String discountCode) {
    this.discountCode = discountCode;
  }

  public SalesOrderLineDto discountPercent(Double discountPercent) {
    this.discountPercent = discountPercent;
    return this;
  }

   /**
   * Get discountPercent
   * @return discountPercent
  **/
  @ApiModelProperty(value = "")
  public Double getDiscountPercent() {
    return discountPercent;
  }

  public void setDiscountPercent(Double discountPercent) {
    this.discountPercent = discountPercent;
  }

  public SalesOrderLineDto discountAmount(Double discountAmount) {
    this.discountAmount = discountAmount;
    return this;
  }

   /**
   * Get discountAmount
   * @return discountAmount
  **/
  @ApiModelProperty(value = "")
  public Double getDiscountAmount() {
    return discountAmount;
  }

  public void setDiscountAmount(Double discountAmount) {
    this.discountAmount = discountAmount;
  }

  public SalesOrderLineDto manualDiscount(Boolean manualDiscount) {
    this.manualDiscount = manualDiscount;
    return this;
  }

   /**
   * Get manualDiscount
   * @return manualDiscount
  **/
  @ApiModelProperty(value = "")
  public Boolean isManualDiscount() {
    return manualDiscount;
  }

  public void setManualDiscount(Boolean manualDiscount) {
    this.manualDiscount = manualDiscount;
  }

  public SalesOrderLineDto discUnitPrice(Double discUnitPrice) {
    this.discUnitPrice = discUnitPrice;
    return this;
  }

   /**
   * Get discUnitPrice
   * @return discUnitPrice
  **/
  @ApiModelProperty(value = "")
  public Double getDiscUnitPrice() {
    return discUnitPrice;
  }

  public void setDiscUnitPrice(Double discUnitPrice) {
    this.discUnitPrice = discUnitPrice;
  }

  public SalesOrderLineDto extPrice(Double extPrice) {
    this.extPrice = extPrice;
    return this;
  }

   /**
   * Get extPrice
   * @return extPrice
  **/
  @ApiModelProperty(value = "")
  public Double getExtPrice() {
    return extPrice;
  }

  public void setExtPrice(Double extPrice) {
    this.extPrice = extPrice;
  }

  public SalesOrderLineDto unbilledAmount(Double unbilledAmount) {
    this.unbilledAmount = unbilledAmount;
    return this;
  }

   /**
   * Get unbilledAmount
   * @return unbilledAmount
  **/
  @ApiModelProperty(value = "")
  public Double getUnbilledAmount() {
    return unbilledAmount;
  }

  public void setUnbilledAmount(Double unbilledAmount) {
    this.unbilledAmount = unbilledAmount;
  }

  public SalesOrderLineDto lineDescription(String lineDescription) {
    this.lineDescription = lineDescription;
    return this;
  }

   /**
   * Get lineDescription
   * @return lineDescription
  **/
  @ApiModelProperty(value = "")
  public String getLineDescription() {
    return lineDescription;
  }

  public void setLineDescription(String lineDescription) {
    this.lineDescription = lineDescription;
  }

  public SalesOrderLineDto branchNumber(BranchNumberDto branchNumber) {
    this.branchNumber = branchNumber;
    return this;
  }

   /**
   * Get branchNumber
   * @return branchNumber
  **/
  @ApiModelProperty(value = "")
  public BranchNumberDto getBranchNumber() {
    return branchNumber;
  }

  public void setBranchNumber(BranchNumberDto branchNumber) {
    this.branchNumber = branchNumber;
  }

  public SalesOrderLineDto note(String note) {
    this.note = note;
    return this;
  }

   /**
   * Get note
   * @return note
  **/
  @ApiModelProperty(value = "")
  public String getNote() {
    return note;
  }

  public void setNote(String note) {
    this.note = note;
  }

  public SalesOrderLineDto attachments(List<AttachmentDto> attachments) {
    this.attachments = attachments;
    return this;
  }

  public SalesOrderLineDto addAttachmentsItem(AttachmentDto attachmentsItem) {
    if (this.attachments == null) {
      this.attachments = new ArrayList<>();
    }
    this.attachments.add(attachmentsItem);
    return this;
  }

   /**
   * The data containing information about the document attachments
   * @return attachments
  **/
  @ApiModelProperty(value = "The data containing information about the document attachments")
  public List<AttachmentDto> getAttachments() {
    return attachments;
  }

  public void setAttachments(List<AttachmentDto> attachments) {
    this.attachments = attachments;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SalesOrderLineDto salesOrderLineDto = (SalesOrderLineDto) o;
    return Objects.equals(this.invoiceNbr, salesOrderLineDto.invoiceNbr) &&
        Objects.equals(this.operation, salesOrderLineDto.operation) &&
        Objects.equals(this.freeItem, salesOrderLineDto.freeItem) &&
        Objects.equals(this.requestedOn, salesOrderLineDto.requestedOn) &&
        Objects.equals(this.shipOn, salesOrderLineDto.shipOn) &&
        Objects.equals(this.shipComplete, salesOrderLineDto.shipComplete) &&
        Objects.equals(this.undershipThreshold, salesOrderLineDto.undershipThreshold) &&
        Objects.equals(this.overshipThreshold, salesOrderLineDto.overshipThreshold) &&
        Objects.equals(this.completed, salesOrderLineDto.completed) &&
        Objects.equals(this.markForPO, salesOrderLineDto.markForPO) &&
        Objects.equals(this.poSource, salesOrderLineDto.poSource) &&
        Objects.equals(this.lotSerialNbr, salesOrderLineDto.lotSerialNbr) &&
        Objects.equals(this.expirationDate, salesOrderLineDto.expirationDate) &&
        Objects.equals(this.reasonCode, salesOrderLineDto.reasonCode) &&
        Objects.equals(this.salesPerson, salesOrderLineDto.salesPerson) &&
        Objects.equals(this.taxCategory, salesOrderLineDto.taxCategory) &&
        Objects.equals(this.commissionable, salesOrderLineDto.commissionable) &&
        Objects.equals(this.alternateID, salesOrderLineDto.alternateID) &&
        Objects.equals(this.projectTask, salesOrderLineDto.projectTask) &&
        Objects.equals(this.lineNbr, salesOrderLineDto.lineNbr) &&
        Objects.equals(this.sortOrder, salesOrderLineDto.sortOrder) &&
        Objects.equals(this.inventory, salesOrderLineDto.inventory) &&
        Objects.equals(this.warehouse, salesOrderLineDto.warehouse) &&
        Objects.equals(this.uom, salesOrderLineDto.uom) &&
        Objects.equals(this.quantity, salesOrderLineDto.quantity) &&
        Objects.equals(this.qtyOnShipments, salesOrderLineDto.qtyOnShipments) &&
        Objects.equals(this.openQty, salesOrderLineDto.openQty) &&
        Objects.equals(this.unitCost, salesOrderLineDto.unitCost) &&
        Objects.equals(this.unitPrice, salesOrderLineDto.unitPrice) &&
        Objects.equals(this.discountCode, salesOrderLineDto.discountCode) &&
        Objects.equals(this.discountPercent, salesOrderLineDto.discountPercent) &&
        Objects.equals(this.discountAmount, salesOrderLineDto.discountAmount) &&
        Objects.equals(this.manualDiscount, salesOrderLineDto.manualDiscount) &&
        Objects.equals(this.discUnitPrice, salesOrderLineDto.discUnitPrice) &&
        Objects.equals(this.extPrice, salesOrderLineDto.extPrice) &&
        Objects.equals(this.unbilledAmount, salesOrderLineDto.unbilledAmount) &&
        Objects.equals(this.lineDescription, salesOrderLineDto.lineDescription) &&
        Objects.equals(this.branchNumber, salesOrderLineDto.branchNumber) &&
        Objects.equals(this.note, salesOrderLineDto.note) &&
        Objects.equals(this.attachments, salesOrderLineDto.attachments);
  }

  @Override
  public int hashCode() {
    return Objects.hash(invoiceNbr, operation, freeItem, requestedOn, shipOn, shipComplete, undershipThreshold, overshipThreshold, completed, markForPO, poSource, lotSerialNbr, expirationDate, reasonCode, salesPerson, taxCategory, commissionable, alternateID, projectTask, lineNbr, sortOrder, inventory, warehouse, uom, quantity, qtyOnShipments, openQty, unitCost, unitPrice, discountCode, discountPercent, discountAmount, manualDiscount, discUnitPrice, extPrice, unbilledAmount, lineDescription, branchNumber, note, attachments);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SalesOrderLineDto {\n");
    
    sb.append("    invoiceNbr: ").append(toIndentedString(invoiceNbr)).append("\n");
    sb.append("    operation: ").append(toIndentedString(operation)).append("\n");
    sb.append("    freeItem: ").append(toIndentedString(freeItem)).append("\n");
    sb.append("    requestedOn: ").append(toIndentedString(requestedOn)).append("\n");
    sb.append("    shipOn: ").append(toIndentedString(shipOn)).append("\n");
    sb.append("    shipComplete: ").append(toIndentedString(shipComplete)).append("\n");
    sb.append("    undershipThreshold: ").append(toIndentedString(undershipThreshold)).append("\n");
    sb.append("    overshipThreshold: ").append(toIndentedString(overshipThreshold)).append("\n");
    sb.append("    completed: ").append(toIndentedString(completed)).append("\n");
    sb.append("    markForPO: ").append(toIndentedString(markForPO)).append("\n");
    sb.append("    poSource: ").append(toIndentedString(poSource)).append("\n");
    sb.append("    lotSerialNbr: ").append(toIndentedString(lotSerialNbr)).append("\n");
    sb.append("    expirationDate: ").append(toIndentedString(expirationDate)).append("\n");
    sb.append("    reasonCode: ").append(toIndentedString(reasonCode)).append("\n");
    sb.append("    salesPerson: ").append(toIndentedString(salesPerson)).append("\n");
    sb.append("    taxCategory: ").append(toIndentedString(taxCategory)).append("\n");
    sb.append("    commissionable: ").append(toIndentedString(commissionable)).append("\n");
    sb.append("    alternateID: ").append(toIndentedString(alternateID)).append("\n");
    sb.append("    projectTask: ").append(toIndentedString(projectTask)).append("\n");
    sb.append("    lineNbr: ").append(toIndentedString(lineNbr)).append("\n");
    sb.append("    sortOrder: ").append(toIndentedString(sortOrder)).append("\n");
    sb.append("    inventory: ").append(toIndentedString(inventory)).append("\n");
    sb.append("    warehouse: ").append(toIndentedString(warehouse)).append("\n");
    sb.append("    uom: ").append(toIndentedString(uom)).append("\n");
    sb.append("    quantity: ").append(toIndentedString(quantity)).append("\n");
    sb.append("    qtyOnShipments: ").append(toIndentedString(qtyOnShipments)).append("\n");
    sb.append("    openQty: ").append(toIndentedString(openQty)).append("\n");
    sb.append("    unitCost: ").append(toIndentedString(unitCost)).append("\n");
    sb.append("    unitPrice: ").append(toIndentedString(unitPrice)).append("\n");
    sb.append("    discountCode: ").append(toIndentedString(discountCode)).append("\n");
    sb.append("    discountPercent: ").append(toIndentedString(discountPercent)).append("\n");
    sb.append("    discountAmount: ").append(toIndentedString(discountAmount)).append("\n");
    sb.append("    manualDiscount: ").append(toIndentedString(manualDiscount)).append("\n");
    sb.append("    discUnitPrice: ").append(toIndentedString(discUnitPrice)).append("\n");
    sb.append("    extPrice: ").append(toIndentedString(extPrice)).append("\n");
    sb.append("    unbilledAmount: ").append(toIndentedString(unbilledAmount)).append("\n");
    sb.append("    lineDescription: ").append(toIndentedString(lineDescription)).append("\n");
    sb.append("    branchNumber: ").append(toIndentedString(branchNumber)).append("\n");
    sb.append("    note: ").append(toIndentedString(note)).append("\n");
    sb.append("    attachments: ").append(toIndentedString(attachments)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

