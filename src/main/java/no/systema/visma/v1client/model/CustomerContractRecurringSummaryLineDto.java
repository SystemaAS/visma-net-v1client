/*
 * Visma Net API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 6.13.03.0008
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package no.systema.visma.v1client.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

/**
 * This class represents a CustomerContractRecurringSummaryLine in CustomerContractController. Used for getting data.
 */
@ApiModel(description = "This class represents a CustomerContractRecurringSummaryLine in CustomerContractController. Used for getting data.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-04-16T15:04:09.234+02:00")
public class CustomerContractRecurringSummaryLineDto {
  @JsonProperty("itemCode")
  private String itemCode = null;

  @JsonProperty("description")
  private String description = null;

  @JsonProperty("itemId")
  private String itemId = null;

  @JsonProperty("uom")
  private String uom = null;

  /**
   * Gets or Sets invoiceType
   */
  public enum InvoiceTypeEnum {
    NONE("None"),
    
    PREPAY("Prepay"),
    
    USAGE("Usage"),
    
    DEPOSITS("Deposits");

    private String value;

    InvoiceTypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static InvoiceTypeEnum fromValue(String text) {
      for (InvoiceTypeEnum b : InvoiceTypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("invoiceType")
  private InvoiceTypeEnum invoiceType = null;

  @JsonProperty("included")
  private Double included = null;

  @JsonProperty("recurringPrice")
  private Double recurringPrice = null;

  @JsonProperty("recurringDiscount")
  private Double recurringDiscount = null;

  @JsonProperty("extraUsagePrice")
  private Double extraUsagePrice = null;

  @JsonProperty("unInvoiced")
  private Double unInvoiced = null;

  @JsonProperty("usedTotal")
  private Double usedTotal = null;

  public CustomerContractRecurringSummaryLineDto itemCode(String itemCode) {
    this.itemCode = itemCode;
    return this;
  }

   /**
   * Get itemCode
   * @return itemCode
  **/
  @ApiModelProperty(value = "")
  public String getItemCode() {
    return itemCode;
  }

  public void setItemCode(String itemCode) {
    this.itemCode = itemCode;
  }

  public CustomerContractRecurringSummaryLineDto description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @ApiModelProperty(value = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public CustomerContractRecurringSummaryLineDto itemId(String itemId) {
    this.itemId = itemId;
    return this;
  }

   /**
   * Get itemId
   * @return itemId
  **/
  @ApiModelProperty(value = "")
  public String getItemId() {
    return itemId;
  }

  public void setItemId(String itemId) {
    this.itemId = itemId;
  }

  public CustomerContractRecurringSummaryLineDto uom(String uom) {
    this.uom = uom;
    return this;
  }

   /**
   * Get uom
   * @return uom
  **/
  @ApiModelProperty(value = "")
  public String getUom() {
    return uom;
  }

  public void setUom(String uom) {
    this.uom = uom;
  }

  public CustomerContractRecurringSummaryLineDto invoiceType(InvoiceTypeEnum invoiceType) {
    this.invoiceType = invoiceType;
    return this;
  }

   /**
   * Get invoiceType
   * @return invoiceType
  **/
  @ApiModelProperty(value = "")
  public InvoiceTypeEnum getInvoiceType() {
    return invoiceType;
  }

  public void setInvoiceType(InvoiceTypeEnum invoiceType) {
    this.invoiceType = invoiceType;
  }

  public CustomerContractRecurringSummaryLineDto included(Double included) {
    this.included = included;
    return this;
  }

   /**
   * Get included
   * @return included
  **/
  @ApiModelProperty(value = "")
  public Double getIncluded() {
    return included;
  }

  public void setIncluded(Double included) {
    this.included = included;
  }

  public CustomerContractRecurringSummaryLineDto recurringPrice(Double recurringPrice) {
    this.recurringPrice = recurringPrice;
    return this;
  }

   /**
   * Get recurringPrice
   * @return recurringPrice
  **/
  @ApiModelProperty(value = "")
  public Double getRecurringPrice() {
    return recurringPrice;
  }

  public void setRecurringPrice(Double recurringPrice) {
    this.recurringPrice = recurringPrice;
  }

  public CustomerContractRecurringSummaryLineDto recurringDiscount(Double recurringDiscount) {
    this.recurringDiscount = recurringDiscount;
    return this;
  }

   /**
   * Get recurringDiscount
   * @return recurringDiscount
  **/
  @ApiModelProperty(value = "")
  public Double getRecurringDiscount() {
    return recurringDiscount;
  }

  public void setRecurringDiscount(Double recurringDiscount) {
    this.recurringDiscount = recurringDiscount;
  }

  public CustomerContractRecurringSummaryLineDto extraUsagePrice(Double extraUsagePrice) {
    this.extraUsagePrice = extraUsagePrice;
    return this;
  }

   /**
   * Get extraUsagePrice
   * @return extraUsagePrice
  **/
  @ApiModelProperty(value = "")
  public Double getExtraUsagePrice() {
    return extraUsagePrice;
  }

  public void setExtraUsagePrice(Double extraUsagePrice) {
    this.extraUsagePrice = extraUsagePrice;
  }

  public CustomerContractRecurringSummaryLineDto unInvoiced(Double unInvoiced) {
    this.unInvoiced = unInvoiced;
    return this;
  }

   /**
   * Get unInvoiced
   * @return unInvoiced
  **/
  @ApiModelProperty(value = "")
  public Double getUnInvoiced() {
    return unInvoiced;
  }

  public void setUnInvoiced(Double unInvoiced) {
    this.unInvoiced = unInvoiced;
  }

  public CustomerContractRecurringSummaryLineDto usedTotal(Double usedTotal) {
    this.usedTotal = usedTotal;
    return this;
  }

   /**
   * Get usedTotal
   * @return usedTotal
  **/
  @ApiModelProperty(value = "")
  public Double getUsedTotal() {
    return usedTotal;
  }

  public void setUsedTotal(Double usedTotal) {
    this.usedTotal = usedTotal;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CustomerContractRecurringSummaryLineDto customerContractRecurringSummaryLineDto = (CustomerContractRecurringSummaryLineDto) o;
    return Objects.equals(this.itemCode, customerContractRecurringSummaryLineDto.itemCode) &&
        Objects.equals(this.description, customerContractRecurringSummaryLineDto.description) &&
        Objects.equals(this.itemId, customerContractRecurringSummaryLineDto.itemId) &&
        Objects.equals(this.uom, customerContractRecurringSummaryLineDto.uom) &&
        Objects.equals(this.invoiceType, customerContractRecurringSummaryLineDto.invoiceType) &&
        Objects.equals(this.included, customerContractRecurringSummaryLineDto.included) &&
        Objects.equals(this.recurringPrice, customerContractRecurringSummaryLineDto.recurringPrice) &&
        Objects.equals(this.recurringDiscount, customerContractRecurringSummaryLineDto.recurringDiscount) &&
        Objects.equals(this.extraUsagePrice, customerContractRecurringSummaryLineDto.extraUsagePrice) &&
        Objects.equals(this.unInvoiced, customerContractRecurringSummaryLineDto.unInvoiced) &&
        Objects.equals(this.usedTotal, customerContractRecurringSummaryLineDto.usedTotal);
  }

  @Override
  public int hashCode() {
    return Objects.hash(itemCode, description, itemId, uom, invoiceType, included, recurringPrice, recurringDiscount, extraUsagePrice, unInvoiced, usedTotal);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CustomerContractRecurringSummaryLineDto {\n");
    
    sb.append("    itemCode: ").append(toIndentedString(itemCode)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    itemId: ").append(toIndentedString(itemId)).append("\n");
    sb.append("    uom: ").append(toIndentedString(uom)).append("\n");
    sb.append("    invoiceType: ").append(toIndentedString(invoiceType)).append("\n");
    sb.append("    included: ").append(toIndentedString(included)).append("\n");
    sb.append("    recurringPrice: ").append(toIndentedString(recurringPrice)).append("\n");
    sb.append("    recurringDiscount: ").append(toIndentedString(recurringDiscount)).append("\n");
    sb.append("    extraUsagePrice: ").append(toIndentedString(extraUsagePrice)).append("\n");
    sb.append("    unInvoiced: ").append(toIndentedString(unInvoiced)).append("\n");
    sb.append("    usedTotal: ").append(toIndentedString(usedTotal)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

