/*
 * Visma Net API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 6.13.03.0008
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package no.systema.visma.v1client.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import no.systema.visma.v1client.model.SalesCategoryDto;

/**
 * This class represents a Sales Category in SalesCategoryController. Used by getting data.
 */
@ApiModel(description = "This class represents a Sales Category in SalesCategoryController. Used by getting data.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-04-16T15:04:09.234+02:00")
public class SalesCategoryDto {
  @JsonProperty("categoryID")
  private Integer categoryID = null;

  @JsonProperty("description")
  private String description = null;

  @JsonProperty("parentID")
  private Integer parentID = null;

  @JsonProperty("sortOrder")
  private Integer sortOrder = null;

  @JsonProperty("subCategories")
  private List<SalesCategoryDto> subCategories = null;

  public SalesCategoryDto categoryID(Integer categoryID) {
    this.categoryID = categoryID;
    return this;
  }

   /**
   * Get categoryID
   * @return categoryID
  **/
  @ApiModelProperty(value = "")
  public Integer getCategoryID() {
    return categoryID;
  }

  public void setCategoryID(Integer categoryID) {
    this.categoryID = categoryID;
  }

  public SalesCategoryDto description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @ApiModelProperty(value = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public SalesCategoryDto parentID(Integer parentID) {
    this.parentID = parentID;
    return this;
  }

   /**
   * Get parentID
   * @return parentID
  **/
  @ApiModelProperty(value = "")
  public Integer getParentID() {
    return parentID;
  }

  public void setParentID(Integer parentID) {
    this.parentID = parentID;
  }

  public SalesCategoryDto sortOrder(Integer sortOrder) {
    this.sortOrder = sortOrder;
    return this;
  }

   /**
   * Get sortOrder
   * @return sortOrder
  **/
  @ApiModelProperty(value = "")
  public Integer getSortOrder() {
    return sortOrder;
  }

  public void setSortOrder(Integer sortOrder) {
    this.sortOrder = sortOrder;
  }

  public SalesCategoryDto subCategories(List<SalesCategoryDto> subCategories) {
    this.subCategories = subCategories;
    return this;
  }

  public SalesCategoryDto addSubCategoriesItem(SalesCategoryDto subCategoriesItem) {
    if (this.subCategories == null) {
      this.subCategories = new ArrayList<>();
    }
    this.subCategories.add(subCategoriesItem);
    return this;
  }

   /**
   * Get subCategories
   * @return subCategories
  **/
  @ApiModelProperty(value = "")
  public List<SalesCategoryDto> getSubCategories() {
    return subCategories;
  }

  public void setSubCategories(List<SalesCategoryDto> subCategories) {
    this.subCategories = subCategories;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SalesCategoryDto salesCategoryDto = (SalesCategoryDto) o;
    return Objects.equals(this.categoryID, salesCategoryDto.categoryID) &&
        Objects.equals(this.description, salesCategoryDto.description) &&
        Objects.equals(this.parentID, salesCategoryDto.parentID) &&
        Objects.equals(this.sortOrder, salesCategoryDto.sortOrder) &&
        Objects.equals(this.subCategories, salesCategoryDto.subCategories);
  }

  @Override
  public int hashCode() {
    return Objects.hash(categoryID, description, parentID, sortOrder, subCategories);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SalesCategoryDto {\n");
    
    sb.append("    categoryID: ").append(toIndentedString(categoryID)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    parentID: ").append(toIndentedString(parentID)).append("\n");
    sb.append("    sortOrder: ").append(toIndentedString(sortOrder)).append("\n");
    sb.append("    subCategories: ").append(toIndentedString(subCategories)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

