/*
 * Visma Net API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 6.13.03.0008
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package no.systema.visma.v1client.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.List;
import no.systema.visma.v1client.model.StocktakeLineDto;

/**
 * StocktakeDto
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-04-16T15:04:09.234+02:00")
public class StocktakeDto {
  @JsonProperty("referenceNbr")
  private String referenceNbr = null;

  @JsonProperty("description")
  private String description = null;

  /**
   * Gets or Sets summaryStatus
   */
  public enum SummaryStatusEnum {
    CANCELLED("Cancelled"),
    
    COMPLETED("Completed"),
    
    COUNTING("Counting"),
    
    ENTERING("Entering");

    private String value;

    SummaryStatusEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static SummaryStatusEnum fromValue(String text) {
      for (SummaryStatusEnum b : SummaryStatusEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("summaryStatus")
  private SummaryStatusEnum summaryStatus = null;

  @JsonProperty("freezeDate")
  private LocalDateTime freezeDate = null;

  @JsonProperty("numberOfLines")
  private Integer numberOfLines = null;

  @JsonProperty("physicalQty")
  private Double physicalQty = null;

  @JsonProperty("varianceQty")
  private Double varianceQty = null;

  @JsonProperty("varianceCost")
  private Double varianceCost = null;

  @JsonProperty("lastModifiedDateTime")
  private LocalDateTime lastModifiedDateTime = null;

  @JsonProperty("lines")
  private List<StocktakeLineDto> lines = null;

  public StocktakeDto referenceNbr(String referenceNbr) {
    this.referenceNbr = referenceNbr;
    return this;
  }

   /**
   * Get referenceNbr
   * @return referenceNbr
  **/
  @ApiModelProperty(value = "")
  public String getReferenceNbr() {
    return referenceNbr;
  }

  public void setReferenceNbr(String referenceNbr) {
    this.referenceNbr = referenceNbr;
  }

  public StocktakeDto description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @ApiModelProperty(value = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public StocktakeDto summaryStatus(SummaryStatusEnum summaryStatus) {
    this.summaryStatus = summaryStatus;
    return this;
  }

   /**
   * Get summaryStatus
   * @return summaryStatus
  **/
  @ApiModelProperty(value = "")
  public SummaryStatusEnum getSummaryStatus() {
    return summaryStatus;
  }

  public void setSummaryStatus(SummaryStatusEnum summaryStatus) {
    this.summaryStatus = summaryStatus;
  }

  public StocktakeDto freezeDate(LocalDateTime freezeDate) {
    this.freezeDate = freezeDate;
    return this;
  }

   /**
   * Get freezeDate
   * @return freezeDate
  **/
  @ApiModelProperty(value = "")
  public LocalDateTime getFreezeDate() {
    return freezeDate;
  }

  public void setFreezeDate(LocalDateTime freezeDate) {
    this.freezeDate = freezeDate;
  }

  public StocktakeDto numberOfLines(Integer numberOfLines) {
    this.numberOfLines = numberOfLines;
    return this;
  }

   /**
   * Get numberOfLines
   * @return numberOfLines
  **/
  @ApiModelProperty(value = "")
  public Integer getNumberOfLines() {
    return numberOfLines;
  }

  public void setNumberOfLines(Integer numberOfLines) {
    this.numberOfLines = numberOfLines;
  }

  public StocktakeDto physicalQty(Double physicalQty) {
    this.physicalQty = physicalQty;
    return this;
  }

   /**
   * Get physicalQty
   * @return physicalQty
  **/
  @ApiModelProperty(value = "")
  public Double getPhysicalQty() {
    return physicalQty;
  }

  public void setPhysicalQty(Double physicalQty) {
    this.physicalQty = physicalQty;
  }

  public StocktakeDto varianceQty(Double varianceQty) {
    this.varianceQty = varianceQty;
    return this;
  }

   /**
   * Get varianceQty
   * @return varianceQty
  **/
  @ApiModelProperty(value = "")
  public Double getVarianceQty() {
    return varianceQty;
  }

  public void setVarianceQty(Double varianceQty) {
    this.varianceQty = varianceQty;
  }

  public StocktakeDto varianceCost(Double varianceCost) {
    this.varianceCost = varianceCost;
    return this;
  }

   /**
   * Get varianceCost
   * @return varianceCost
  **/
  @ApiModelProperty(value = "")
  public Double getVarianceCost() {
    return varianceCost;
  }

  public void setVarianceCost(Double varianceCost) {
    this.varianceCost = varianceCost;
  }

  public StocktakeDto lastModifiedDateTime(LocalDateTime lastModifiedDateTime) {
    this.lastModifiedDateTime = lastModifiedDateTime;
    return this;
  }

   /**
   * Get lastModifiedDateTime
   * @return lastModifiedDateTime
  **/
  @ApiModelProperty(value = "")
  public LocalDateTime getLastModifiedDateTime() {
    return lastModifiedDateTime;
  }

  public void setLastModifiedDateTime(LocalDateTime lastModifiedDateTime) {
    this.lastModifiedDateTime = lastModifiedDateTime;
  }

  public StocktakeDto lines(List<StocktakeLineDto> lines) {
    this.lines = lines;
    return this;
  }

  public StocktakeDto addLinesItem(StocktakeLineDto linesItem) {
    if (this.lines == null) {
      this.lines = new ArrayList<>();
    }
    this.lines.add(linesItem);
    return this;
  }

   /**
   * Get lines
   * @return lines
  **/
  @ApiModelProperty(value = "")
  public List<StocktakeLineDto> getLines() {
    return lines;
  }

  public void setLines(List<StocktakeLineDto> lines) {
    this.lines = lines;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    StocktakeDto stocktakeDto = (StocktakeDto) o;
    return Objects.equals(this.referenceNbr, stocktakeDto.referenceNbr) &&
        Objects.equals(this.description, stocktakeDto.description) &&
        Objects.equals(this.summaryStatus, stocktakeDto.summaryStatus) &&
        Objects.equals(this.freezeDate, stocktakeDto.freezeDate) &&
        Objects.equals(this.numberOfLines, stocktakeDto.numberOfLines) &&
        Objects.equals(this.physicalQty, stocktakeDto.physicalQty) &&
        Objects.equals(this.varianceQty, stocktakeDto.varianceQty) &&
        Objects.equals(this.varianceCost, stocktakeDto.varianceCost) &&
        Objects.equals(this.lastModifiedDateTime, stocktakeDto.lastModifiedDateTime) &&
        Objects.equals(this.lines, stocktakeDto.lines);
  }

  @Override
  public int hashCode() {
    return Objects.hash(referenceNbr, description, summaryStatus, freezeDate, numberOfLines, physicalQty, varianceQty, varianceCost, lastModifiedDateTime, lines);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class StocktakeDto {\n");
    
    sb.append("    referenceNbr: ").append(toIndentedString(referenceNbr)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    summaryStatus: ").append(toIndentedString(summaryStatus)).append("\n");
    sb.append("    freezeDate: ").append(toIndentedString(freezeDate)).append("\n");
    sb.append("    numberOfLines: ").append(toIndentedString(numberOfLines)).append("\n");
    sb.append("    physicalQty: ").append(toIndentedString(physicalQty)).append("\n");
    sb.append("    varianceQty: ").append(toIndentedString(varianceQty)).append("\n");
    sb.append("    varianceCost: ").append(toIndentedString(varianceCost)).append("\n");
    sb.append("    lastModifiedDateTime: ").append(toIndentedString(lastModifiedDateTime)).append("\n");
    sb.append("    lines: ").append(toIndentedString(lines)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

