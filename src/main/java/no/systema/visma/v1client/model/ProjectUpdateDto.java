/*
 * Visma Net API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 6.13.03.0008
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package no.systema.visma.v1client.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import no.systema.visma.v1client.model.DtoValueNullableBillingPeriod;
import no.systema.visma.v1client.model.DtoValueNullableBoolean;
import no.systema.visma.v1client.model.DtoValueNullableDateTime;
import no.systema.visma.v1client.model.DtoValueNullableProjectStatus;
import no.systema.visma.v1client.model.DtoValueString;
import no.systema.visma.v1client.model.ProjectEmployeeUpdateDto;
import no.systema.visma.v1client.model.SegmentUpdateDto;
import no.systema.visma.v1client.model.TaskUpdateDto;
import no.systema.visma.v1client.model.VisibilityUpdateDto;

/**
 * This class represent a Project in Project Controller. Used to pass data to server for creating or updating an project
 */
@ApiModel(description = "This class represent a Project in Project Controller. Used to pass data to server for creating or updating an project")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-04-16T15:04:09.234+02:00")
public class ProjectUpdateDto {
  @JsonProperty("projectID")
  private DtoValueString projectID = null;

  @JsonProperty("customer")
  private DtoValueString customer = null;

  @JsonProperty("description")
  private DtoValueString description = null;

  @JsonProperty("hold")
  private DtoValueNullableBoolean hold = null;

  @JsonProperty("template")
  private DtoValueString template = null;

  @JsonProperty("status")
  private DtoValueNullableProjectStatus status = null;

  @JsonProperty("defAccount")
  private DtoValueString defAccount = null;

  @JsonProperty("defSub")
  private List<SegmentUpdateDto> defSub = null;

  @JsonProperty("defAccrualAccount")
  private DtoValueString defAccrualAccount = null;

  @JsonProperty("defAccrualSub")
  private List<SegmentUpdateDto> defAccrualSub = null;

  @JsonProperty("startDate")
  private DtoValueNullableDateTime startDate = null;

  @JsonProperty("endDate")
  private DtoValueNullableDateTime endDate = null;

  @JsonProperty("billingPeriod")
  private DtoValueNullableBillingPeriod billingPeriod = null;

  @JsonProperty("allocationRule")
  private DtoValueString allocationRule = null;

  @JsonProperty("billingRule")
  private DtoValueString billingRule = null;

  @JsonProperty("rateTable")
  private DtoValueString rateTable = null;

  @JsonProperty("projectManger")
  private DtoValueString projectManger = null;

  @JsonProperty("autoAllocate")
  private DtoValueNullableBoolean autoAllocate = null;

  @JsonProperty("automaticReleaseArDoc")
  private DtoValueNullableBoolean automaticReleaseArDoc = null;

  @JsonProperty("restricEmployees")
  private DtoValueNullableBoolean restricEmployees = null;

  @JsonProperty("restricEquipment")
  private DtoValueNullableBoolean restricEquipment = null;

  @JsonProperty("customerLocation")
  private DtoValueString customerLocation = null;

  @JsonProperty("visibility")
  private VisibilityUpdateDto visibility = null;

  @JsonProperty("tasks")
  private List<TaskUpdateDto> tasks = null;

  @JsonProperty("employees")
  private List<ProjectEmployeeUpdateDto> employees = null;

  public ProjectUpdateDto projectID(DtoValueString projectID) {
    this.projectID = projectID;
    return this;
  }

   /**
   * Get projectID
   * @return projectID
  **/
  @ApiModelProperty(value = "")
  public DtoValueString getProjectID() {
    return projectID;
  }

  public void setProjectID(DtoValueString projectID) {
    this.projectID = projectID;
  }

  public ProjectUpdateDto customer(DtoValueString customer) {
    this.customer = customer;
    return this;
  }

   /**
   * Get customer
   * @return customer
  **/
  @ApiModelProperty(value = "")
  public DtoValueString getCustomer() {
    return customer;
  }

  public void setCustomer(DtoValueString customer) {
    this.customer = customer;
  }

  public ProjectUpdateDto description(DtoValueString description) {
    this.description = description;
    return this;
  }

   /**
   * Mandatory field
   * @return description
  **/
  @ApiModelProperty(required = true, value = "Mandatory field")
  public DtoValueString getDescription() {
    return description;
  }

  public void setDescription(DtoValueString description) {
    this.description = description;
  }

  public ProjectUpdateDto hold(DtoValueNullableBoolean hold) {
    this.hold = hold;
    return this;
  }

   /**
   * Get hold
   * @return hold
  **/
  @ApiModelProperty(value = "")
  public DtoValueNullableBoolean getHold() {
    return hold;
  }

  public void setHold(DtoValueNullableBoolean hold) {
    this.hold = hold;
  }

  public ProjectUpdateDto template(DtoValueString template) {
    this.template = template;
    return this;
  }

   /**
   * Get template
   * @return template
  **/
  @ApiModelProperty(value = "")
  public DtoValueString getTemplate() {
    return template;
  }

  public void setTemplate(DtoValueString template) {
    this.template = template;
  }

  public ProjectUpdateDto status(DtoValueNullableProjectStatus status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @ApiModelProperty(value = "")
  public DtoValueNullableProjectStatus getStatus() {
    return status;
  }

  public void setStatus(DtoValueNullableProjectStatus status) {
    this.status = status;
  }

  public ProjectUpdateDto defAccount(DtoValueString defAccount) {
    this.defAccount = defAccount;
    return this;
  }

   /**
   * Get defAccount
   * @return defAccount
  **/
  @ApiModelProperty(value = "")
  public DtoValueString getDefAccount() {
    return defAccount;
  }

  public void setDefAccount(DtoValueString defAccount) {
    this.defAccount = defAccount;
  }

  public ProjectUpdateDto defSub(List<SegmentUpdateDto> defSub) {
    this.defSub = defSub;
    return this;
  }

  public ProjectUpdateDto addDefSubItem(SegmentUpdateDto defSubItem) {
    if (this.defSub == null) {
      this.defSub = new ArrayList<>();
    }
    this.defSub.add(defSubItem);
    return this;
  }

   /**
   * Mandatory field when Project Template is not specified.
   * @return defSub
  **/
  @ApiModelProperty(value = "Mandatory field when Project Template is not specified.")
  public List<SegmentUpdateDto> getDefSub() {
    return defSub;
  }

  public void setDefSub(List<SegmentUpdateDto> defSub) {
    this.defSub = defSub;
  }

  public ProjectUpdateDto defAccrualAccount(DtoValueString defAccrualAccount) {
    this.defAccrualAccount = defAccrualAccount;
    return this;
  }

   /**
   * Get defAccrualAccount
   * @return defAccrualAccount
  **/
  @ApiModelProperty(value = "")
  public DtoValueString getDefAccrualAccount() {
    return defAccrualAccount;
  }

  public void setDefAccrualAccount(DtoValueString defAccrualAccount) {
    this.defAccrualAccount = defAccrualAccount;
  }

  public ProjectUpdateDto defAccrualSub(List<SegmentUpdateDto> defAccrualSub) {
    this.defAccrualSub = defAccrualSub;
    return this;
  }

  public ProjectUpdateDto addDefAccrualSubItem(SegmentUpdateDto defAccrualSubItem) {
    if (this.defAccrualSub == null) {
      this.defAccrualSub = new ArrayList<>();
    }
    this.defAccrualSub.add(defAccrualSubItem);
    return this;
  }

   /**
   * Get defAccrualSub
   * @return defAccrualSub
  **/
  @ApiModelProperty(value = "")
  public List<SegmentUpdateDto> getDefAccrualSub() {
    return defAccrualSub;
  }

  public void setDefAccrualSub(List<SegmentUpdateDto> defAccrualSub) {
    this.defAccrualSub = defAccrualSub;
  }

  public ProjectUpdateDto startDate(DtoValueNullableDateTime startDate) {
    this.startDate = startDate;
    return this;
  }

   /**
   * Mandatory field
   * @return startDate
  **/
  @ApiModelProperty(required = true, value = "Mandatory field")
  public DtoValueNullableDateTime getStartDate() {
    return startDate;
  }

  public void setStartDate(DtoValueNullableDateTime startDate) {
    this.startDate = startDate;
  }

  public ProjectUpdateDto endDate(DtoValueNullableDateTime endDate) {
    this.endDate = endDate;
    return this;
  }

   /**
   * Get endDate
   * @return endDate
  **/
  @ApiModelProperty(value = "")
  public DtoValueNullableDateTime getEndDate() {
    return endDate;
  }

  public void setEndDate(DtoValueNullableDateTime endDate) {
    this.endDate = endDate;
  }

  public ProjectUpdateDto billingPeriod(DtoValueNullableBillingPeriod billingPeriod) {
    this.billingPeriod = billingPeriod;
    return this;
  }

   /**
   * Get billingPeriod
   * @return billingPeriod
  **/
  @ApiModelProperty(value = "")
  public DtoValueNullableBillingPeriod getBillingPeriod() {
    return billingPeriod;
  }

  public void setBillingPeriod(DtoValueNullableBillingPeriod billingPeriod) {
    this.billingPeriod = billingPeriod;
  }

  public ProjectUpdateDto allocationRule(DtoValueString allocationRule) {
    this.allocationRule = allocationRule;
    return this;
  }

   /**
   * Get allocationRule
   * @return allocationRule
  **/
  @ApiModelProperty(value = "")
  public DtoValueString getAllocationRule() {
    return allocationRule;
  }

  public void setAllocationRule(DtoValueString allocationRule) {
    this.allocationRule = allocationRule;
  }

  public ProjectUpdateDto billingRule(DtoValueString billingRule) {
    this.billingRule = billingRule;
    return this;
  }

   /**
   * Get billingRule
   * @return billingRule
  **/
  @ApiModelProperty(value = "")
  public DtoValueString getBillingRule() {
    return billingRule;
  }

  public void setBillingRule(DtoValueString billingRule) {
    this.billingRule = billingRule;
  }

  public ProjectUpdateDto rateTable(DtoValueString rateTable) {
    this.rateTable = rateTable;
    return this;
  }

   /**
   * Get rateTable
   * @return rateTable
  **/
  @ApiModelProperty(value = "")
  public DtoValueString getRateTable() {
    return rateTable;
  }

  public void setRateTable(DtoValueString rateTable) {
    this.rateTable = rateTable;
  }

  public ProjectUpdateDto projectManger(DtoValueString projectManger) {
    this.projectManger = projectManger;
    return this;
  }

   /**
   * Get projectManger
   * @return projectManger
  **/
  @ApiModelProperty(value = "")
  public DtoValueString getProjectManger() {
    return projectManger;
  }

  public void setProjectManger(DtoValueString projectManger) {
    this.projectManger = projectManger;
  }

  public ProjectUpdateDto autoAllocate(DtoValueNullableBoolean autoAllocate) {
    this.autoAllocate = autoAllocate;
    return this;
  }

   /**
   * Get autoAllocate
   * @return autoAllocate
  **/
  @ApiModelProperty(value = "")
  public DtoValueNullableBoolean getAutoAllocate() {
    return autoAllocate;
  }

  public void setAutoAllocate(DtoValueNullableBoolean autoAllocate) {
    this.autoAllocate = autoAllocate;
  }

  public ProjectUpdateDto automaticReleaseArDoc(DtoValueNullableBoolean automaticReleaseArDoc) {
    this.automaticReleaseArDoc = automaticReleaseArDoc;
    return this;
  }

   /**
   * Get automaticReleaseArDoc
   * @return automaticReleaseArDoc
  **/
  @ApiModelProperty(value = "")
  public DtoValueNullableBoolean getAutomaticReleaseArDoc() {
    return automaticReleaseArDoc;
  }

  public void setAutomaticReleaseArDoc(DtoValueNullableBoolean automaticReleaseArDoc) {
    this.automaticReleaseArDoc = automaticReleaseArDoc;
  }

  public ProjectUpdateDto restricEmployees(DtoValueNullableBoolean restricEmployees) {
    this.restricEmployees = restricEmployees;
    return this;
  }

   /**
   * Get restricEmployees
   * @return restricEmployees
  **/
  @ApiModelProperty(value = "")
  public DtoValueNullableBoolean getRestricEmployees() {
    return restricEmployees;
  }

  public void setRestricEmployees(DtoValueNullableBoolean restricEmployees) {
    this.restricEmployees = restricEmployees;
  }

  public ProjectUpdateDto restricEquipment(DtoValueNullableBoolean restricEquipment) {
    this.restricEquipment = restricEquipment;
    return this;
  }

   /**
   * Get restricEquipment
   * @return restricEquipment
  **/
  @ApiModelProperty(value = "")
  public DtoValueNullableBoolean getRestricEquipment() {
    return restricEquipment;
  }

  public void setRestricEquipment(DtoValueNullableBoolean restricEquipment) {
    this.restricEquipment = restricEquipment;
  }

  public ProjectUpdateDto customerLocation(DtoValueString customerLocation) {
    this.customerLocation = customerLocation;
    return this;
  }

   /**
   * Get customerLocation
   * @return customerLocation
  **/
  @ApiModelProperty(value = "")
  public DtoValueString getCustomerLocation() {
    return customerLocation;
  }

  public void setCustomerLocation(DtoValueString customerLocation) {
    this.customerLocation = customerLocation;
  }

  public ProjectUpdateDto visibility(VisibilityUpdateDto visibility) {
    this.visibility = visibility;
    return this;
  }

   /**
   * Get visibility
   * @return visibility
  **/
  @ApiModelProperty(value = "")
  public VisibilityUpdateDto getVisibility() {
    return visibility;
  }

  public void setVisibility(VisibilityUpdateDto visibility) {
    this.visibility = visibility;
  }

  public ProjectUpdateDto tasks(List<TaskUpdateDto> tasks) {
    this.tasks = tasks;
    return this;
  }

  public ProjectUpdateDto addTasksItem(TaskUpdateDto tasksItem) {
    if (this.tasks == null) {
      this.tasks = new ArrayList<>();
    }
    this.tasks.add(tasksItem);
    return this;
  }

   /**
   * Get tasks
   * @return tasks
  **/
  @ApiModelProperty(value = "")
  public List<TaskUpdateDto> getTasks() {
    return tasks;
  }

  public void setTasks(List<TaskUpdateDto> tasks) {
    this.tasks = tasks;
  }

  public ProjectUpdateDto employees(List<ProjectEmployeeUpdateDto> employees) {
    this.employees = employees;
    return this;
  }

  public ProjectUpdateDto addEmployeesItem(ProjectEmployeeUpdateDto employeesItem) {
    if (this.employees == null) {
      this.employees = new ArrayList<>();
    }
    this.employees.add(employeesItem);
    return this;
  }

   /**
   * Get employees
   * @return employees
  **/
  @ApiModelProperty(value = "")
  public List<ProjectEmployeeUpdateDto> getEmployees() {
    return employees;
  }

  public void setEmployees(List<ProjectEmployeeUpdateDto> employees) {
    this.employees = employees;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ProjectUpdateDto projectUpdateDto = (ProjectUpdateDto) o;
    return Objects.equals(this.projectID, projectUpdateDto.projectID) &&
        Objects.equals(this.customer, projectUpdateDto.customer) &&
        Objects.equals(this.description, projectUpdateDto.description) &&
        Objects.equals(this.hold, projectUpdateDto.hold) &&
        Objects.equals(this.template, projectUpdateDto.template) &&
        Objects.equals(this.status, projectUpdateDto.status) &&
        Objects.equals(this.defAccount, projectUpdateDto.defAccount) &&
        Objects.equals(this.defSub, projectUpdateDto.defSub) &&
        Objects.equals(this.defAccrualAccount, projectUpdateDto.defAccrualAccount) &&
        Objects.equals(this.defAccrualSub, projectUpdateDto.defAccrualSub) &&
        Objects.equals(this.startDate, projectUpdateDto.startDate) &&
        Objects.equals(this.endDate, projectUpdateDto.endDate) &&
        Objects.equals(this.billingPeriod, projectUpdateDto.billingPeriod) &&
        Objects.equals(this.allocationRule, projectUpdateDto.allocationRule) &&
        Objects.equals(this.billingRule, projectUpdateDto.billingRule) &&
        Objects.equals(this.rateTable, projectUpdateDto.rateTable) &&
        Objects.equals(this.projectManger, projectUpdateDto.projectManger) &&
        Objects.equals(this.autoAllocate, projectUpdateDto.autoAllocate) &&
        Objects.equals(this.automaticReleaseArDoc, projectUpdateDto.automaticReleaseArDoc) &&
        Objects.equals(this.restricEmployees, projectUpdateDto.restricEmployees) &&
        Objects.equals(this.restricEquipment, projectUpdateDto.restricEquipment) &&
        Objects.equals(this.customerLocation, projectUpdateDto.customerLocation) &&
        Objects.equals(this.visibility, projectUpdateDto.visibility) &&
        Objects.equals(this.tasks, projectUpdateDto.tasks) &&
        Objects.equals(this.employees, projectUpdateDto.employees);
  }

  @Override
  public int hashCode() {
    return Objects.hash(projectID, customer, description, hold, template, status, defAccount, defSub, defAccrualAccount, defAccrualSub, startDate, endDate, billingPeriod, allocationRule, billingRule, rateTable, projectManger, autoAllocate, automaticReleaseArDoc, restricEmployees, restricEquipment, customerLocation, visibility, tasks, employees);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ProjectUpdateDto {\n");
    
    sb.append("    projectID: ").append(toIndentedString(projectID)).append("\n");
    sb.append("    customer: ").append(toIndentedString(customer)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    hold: ").append(toIndentedString(hold)).append("\n");
    sb.append("    template: ").append(toIndentedString(template)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    defAccount: ").append(toIndentedString(defAccount)).append("\n");
    sb.append("    defSub: ").append(toIndentedString(defSub)).append("\n");
    sb.append("    defAccrualAccount: ").append(toIndentedString(defAccrualAccount)).append("\n");
    sb.append("    defAccrualSub: ").append(toIndentedString(defAccrualSub)).append("\n");
    sb.append("    startDate: ").append(toIndentedString(startDate)).append("\n");
    sb.append("    endDate: ").append(toIndentedString(endDate)).append("\n");
    sb.append("    billingPeriod: ").append(toIndentedString(billingPeriod)).append("\n");
    sb.append("    allocationRule: ").append(toIndentedString(allocationRule)).append("\n");
    sb.append("    billingRule: ").append(toIndentedString(billingRule)).append("\n");
    sb.append("    rateTable: ").append(toIndentedString(rateTable)).append("\n");
    sb.append("    projectManger: ").append(toIndentedString(projectManger)).append("\n");
    sb.append("    autoAllocate: ").append(toIndentedString(autoAllocate)).append("\n");
    sb.append("    automaticReleaseArDoc: ").append(toIndentedString(automaticReleaseArDoc)).append("\n");
    sb.append("    restricEmployees: ").append(toIndentedString(restricEmployees)).append("\n");
    sb.append("    restricEquipment: ").append(toIndentedString(restricEquipment)).append("\n");
    sb.append("    customerLocation: ").append(toIndentedString(customerLocation)).append("\n");
    sb.append("    visibility: ").append(toIndentedString(visibility)).append("\n");
    sb.append("    tasks: ").append(toIndentedString(tasks)).append("\n");
    sb.append("    employees: ").append(toIndentedString(employees)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

