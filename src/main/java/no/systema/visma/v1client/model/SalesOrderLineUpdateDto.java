/*
 * Visma Net API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 6.13.03.0008
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package no.systema.visma.v1client.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import no.systema.visma.v1client.model.DtoValueNullableBoolean;
import no.systema.visma.v1client.model.DtoValueNullableDateTime;
import no.systema.visma.v1client.model.DtoValueNullableDecimal;
import no.systema.visma.v1client.model.DtoValueNullableInt32;
import no.systema.visma.v1client.model.DtoValueNullableInventoryReplenishmentSources;
import no.systema.visma.v1client.model.DtoValueNullableSalesOrderOperations;
import no.systema.visma.v1client.model.DtoValueNullableSalesOrderShipCompleteStatuses;
import no.systema.visma.v1client.model.DtoValueString;

/**
 * This class represent a Sales Order Line in Sales Order Controller. Used to pass data to server for creating or updating an order line
 */
@ApiModel(description = "This class represent a Sales Order Line in Sales Order Controller. Used to pass data to server for creating or updating an order line")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-04-16T15:04:09.234+02:00")
public class SalesOrderLineUpdateDto {
  @JsonProperty("invoiceNbr")
  private DtoValueString invoiceNbr = null;

  @JsonProperty("salesOrderOperation")
  private DtoValueNullableSalesOrderOperations salesOrderOperation = null;

  @JsonProperty("freeItem")
  private DtoValueNullableBoolean freeItem = null;

  @JsonProperty("requestedOn")
  private DtoValueNullableDateTime requestedOn = null;

  @JsonProperty("shipOn")
  private DtoValueNullableDateTime shipOn = null;

  @JsonProperty("shipComplete")
  private DtoValueNullableSalesOrderShipCompleteStatuses shipComplete = null;

  @JsonProperty("undershipThreshold")
  private DtoValueNullableDecimal undershipThreshold = null;

  @JsonProperty("overshipThreshold")
  private DtoValueNullableDecimal overshipThreshold = null;

  @JsonProperty("completed")
  private DtoValueNullableBoolean completed = null;

  @JsonProperty("markForPO")
  private DtoValueNullableBoolean markForPO = null;

  @JsonProperty("poSource")
  private DtoValueNullableInventoryReplenishmentSources poSource = null;

  @JsonProperty("lotSerialNbr")
  private DtoValueString lotSerialNbr = null;

  @JsonProperty("expirationDate")
  private DtoValueNullableDateTime expirationDate = null;

  @JsonProperty("reasonCode")
  private DtoValueString reasonCode = null;

  @JsonProperty("salesPerson")
  private DtoValueString salesPerson = null;

  @JsonProperty("taxCategory")
  private DtoValueString taxCategory = null;

  @JsonProperty("commissionable")
  private DtoValueNullableBoolean commissionable = null;

  @JsonProperty("alternateID")
  private DtoValueString alternateID = null;

  @JsonProperty("projectTask")
  private DtoValueString projectTask = null;

  @JsonProperty("branchNumber")
  private DtoValueString branchNumber = null;

  /**
   * Gets or Sets operation
   */
  public enum OperationEnum {
    INSERT("Insert"),
    
    UPDATE("Update"),
    
    DELETE("Delete");

    private String value;

    OperationEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static OperationEnum fromValue(String text) {
      for (OperationEnum b : OperationEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("operation")
  private OperationEnum operation = null;

  @JsonProperty("lineNbr")
  private DtoValueNullableInt32 lineNbr = null;

  @JsonProperty("inventoryId")
  private DtoValueString inventoryId = null;

  @JsonProperty("inventoryNumber")
  private DtoValueString inventoryNumber = null;

  @JsonProperty("warehouse")
  private DtoValueString warehouse = null;

  @JsonProperty("uom")
  private DtoValueString uom = null;

  @JsonProperty("quantity")
  private DtoValueNullableDecimal quantity = null;

  @JsonProperty("unitCost")
  private DtoValueNullableDecimal unitCost = null;

  @JsonProperty("unitPrice")
  private DtoValueNullableDecimal unitPrice = null;

  @JsonProperty("discountPercent")
  private DtoValueNullableDecimal discountPercent = null;

  @JsonProperty("discountAmount")
  private DtoValueNullableDecimal discountAmount = null;

  @JsonProperty("discountCode")
  private DtoValueString discountCode = null;

  @JsonProperty("manualDiscount")
  private DtoValueNullableBoolean manualDiscount = null;

  @JsonProperty("discUnitPrice")
  private DtoValueNullableDecimal discUnitPrice = null;

  @JsonProperty("lineDescription")
  private DtoValueString lineDescription = null;

  @JsonProperty("note")
  private DtoValueString note = null;

  public SalesOrderLineUpdateDto invoiceNbr(DtoValueString invoiceNbr) {
    this.invoiceNbr = invoiceNbr;
    return this;
  }

   /**
   * Get invoiceNbr
   * @return invoiceNbr
  **/
  @ApiModelProperty(value = "")
  public DtoValueString getInvoiceNbr() {
    return invoiceNbr;
  }

  public void setInvoiceNbr(DtoValueString invoiceNbr) {
    this.invoiceNbr = invoiceNbr;
  }

  public SalesOrderLineUpdateDto salesOrderOperation(DtoValueNullableSalesOrderOperations salesOrderOperation) {
    this.salesOrderOperation = salesOrderOperation;
    return this;
  }

   /**
   * Get salesOrderOperation
   * @return salesOrderOperation
  **/
  @ApiModelProperty(value = "")
  public DtoValueNullableSalesOrderOperations getSalesOrderOperation() {
    return salesOrderOperation;
  }

  public void setSalesOrderOperation(DtoValueNullableSalesOrderOperations salesOrderOperation) {
    this.salesOrderOperation = salesOrderOperation;
  }

  public SalesOrderLineUpdateDto freeItem(DtoValueNullableBoolean freeItem) {
    this.freeItem = freeItem;
    return this;
  }

   /**
   * Get freeItem
   * @return freeItem
  **/
  @ApiModelProperty(value = "")
  public DtoValueNullableBoolean getFreeItem() {
    return freeItem;
  }

  public void setFreeItem(DtoValueNullableBoolean freeItem) {
    this.freeItem = freeItem;
  }

  public SalesOrderLineUpdateDto requestedOn(DtoValueNullableDateTime requestedOn) {
    this.requestedOn = requestedOn;
    return this;
  }

   /**
   * Get requestedOn
   * @return requestedOn
  **/
  @ApiModelProperty(value = "")
  public DtoValueNullableDateTime getRequestedOn() {
    return requestedOn;
  }

  public void setRequestedOn(DtoValueNullableDateTime requestedOn) {
    this.requestedOn = requestedOn;
  }

  public SalesOrderLineUpdateDto shipOn(DtoValueNullableDateTime shipOn) {
    this.shipOn = shipOn;
    return this;
  }

   /**
   * Get shipOn
   * @return shipOn
  **/
  @ApiModelProperty(value = "")
  public DtoValueNullableDateTime getShipOn() {
    return shipOn;
  }

  public void setShipOn(DtoValueNullableDateTime shipOn) {
    this.shipOn = shipOn;
  }

  public SalesOrderLineUpdateDto shipComplete(DtoValueNullableSalesOrderShipCompleteStatuses shipComplete) {
    this.shipComplete = shipComplete;
    return this;
  }

   /**
   * Get shipComplete
   * @return shipComplete
  **/
  @ApiModelProperty(value = "")
  public DtoValueNullableSalesOrderShipCompleteStatuses getShipComplete() {
    return shipComplete;
  }

  public void setShipComplete(DtoValueNullableSalesOrderShipCompleteStatuses shipComplete) {
    this.shipComplete = shipComplete;
  }

  public SalesOrderLineUpdateDto undershipThreshold(DtoValueNullableDecimal undershipThreshold) {
    this.undershipThreshold = undershipThreshold;
    return this;
  }

   /**
   * Get undershipThreshold
   * @return undershipThreshold
  **/
  @ApiModelProperty(value = "")
  public DtoValueNullableDecimal getUndershipThreshold() {
    return undershipThreshold;
  }

  public void setUndershipThreshold(DtoValueNullableDecimal undershipThreshold) {
    this.undershipThreshold = undershipThreshold;
  }

  public SalesOrderLineUpdateDto overshipThreshold(DtoValueNullableDecimal overshipThreshold) {
    this.overshipThreshold = overshipThreshold;
    return this;
  }

   /**
   * Get overshipThreshold
   * @return overshipThreshold
  **/
  @ApiModelProperty(value = "")
  public DtoValueNullableDecimal getOvershipThreshold() {
    return overshipThreshold;
  }

  public void setOvershipThreshold(DtoValueNullableDecimal overshipThreshold) {
    this.overshipThreshold = overshipThreshold;
  }

  public SalesOrderLineUpdateDto completed(DtoValueNullableBoolean completed) {
    this.completed = completed;
    return this;
  }

   /**
   * Get completed
   * @return completed
  **/
  @ApiModelProperty(value = "")
  public DtoValueNullableBoolean getCompleted() {
    return completed;
  }

  public void setCompleted(DtoValueNullableBoolean completed) {
    this.completed = completed;
  }

  public SalesOrderLineUpdateDto markForPO(DtoValueNullableBoolean markForPO) {
    this.markForPO = markForPO;
    return this;
  }

   /**
   * Get markForPO
   * @return markForPO
  **/
  @ApiModelProperty(value = "")
  public DtoValueNullableBoolean getMarkForPO() {
    return markForPO;
  }

  public void setMarkForPO(DtoValueNullableBoolean markForPO) {
    this.markForPO = markForPO;
  }

  public SalesOrderLineUpdateDto poSource(DtoValueNullableInventoryReplenishmentSources poSource) {
    this.poSource = poSource;
    return this;
  }

   /**
   * Get poSource
   * @return poSource
  **/
  @ApiModelProperty(value = "")
  public DtoValueNullableInventoryReplenishmentSources getPoSource() {
    return poSource;
  }

  public void setPoSource(DtoValueNullableInventoryReplenishmentSources poSource) {
    this.poSource = poSource;
  }

  public SalesOrderLineUpdateDto lotSerialNbr(DtoValueString lotSerialNbr) {
    this.lotSerialNbr = lotSerialNbr;
    return this;
  }

   /**
   * Get lotSerialNbr
   * @return lotSerialNbr
  **/
  @ApiModelProperty(value = "")
  public DtoValueString getLotSerialNbr() {
    return lotSerialNbr;
  }

  public void setLotSerialNbr(DtoValueString lotSerialNbr) {
    this.lotSerialNbr = lotSerialNbr;
  }

  public SalesOrderLineUpdateDto expirationDate(DtoValueNullableDateTime expirationDate) {
    this.expirationDate = expirationDate;
    return this;
  }

   /**
   * Get expirationDate
   * @return expirationDate
  **/
  @ApiModelProperty(value = "")
  public DtoValueNullableDateTime getExpirationDate() {
    return expirationDate;
  }

  public void setExpirationDate(DtoValueNullableDateTime expirationDate) {
    this.expirationDate = expirationDate;
  }

  public SalesOrderLineUpdateDto reasonCode(DtoValueString reasonCode) {
    this.reasonCode = reasonCode;
    return this;
  }

   /**
   * Get reasonCode
   * @return reasonCode
  **/
  @ApiModelProperty(value = "")
  public DtoValueString getReasonCode() {
    return reasonCode;
  }

  public void setReasonCode(DtoValueString reasonCode) {
    this.reasonCode = reasonCode;
  }

  public SalesOrderLineUpdateDto salesPerson(DtoValueString salesPerson) {
    this.salesPerson = salesPerson;
    return this;
  }

   /**
   * Get salesPerson
   * @return salesPerson
  **/
  @ApiModelProperty(value = "")
  public DtoValueString getSalesPerson() {
    return salesPerson;
  }

  public void setSalesPerson(DtoValueString salesPerson) {
    this.salesPerson = salesPerson;
  }

  public SalesOrderLineUpdateDto taxCategory(DtoValueString taxCategory) {
    this.taxCategory = taxCategory;
    return this;
  }

   /**
   * Get taxCategory
   * @return taxCategory
  **/
  @ApiModelProperty(value = "")
  public DtoValueString getTaxCategory() {
    return taxCategory;
  }

  public void setTaxCategory(DtoValueString taxCategory) {
    this.taxCategory = taxCategory;
  }

  public SalesOrderLineUpdateDto commissionable(DtoValueNullableBoolean commissionable) {
    this.commissionable = commissionable;
    return this;
  }

   /**
   * Get commissionable
   * @return commissionable
  **/
  @ApiModelProperty(value = "")
  public DtoValueNullableBoolean getCommissionable() {
    return commissionable;
  }

  public void setCommissionable(DtoValueNullableBoolean commissionable) {
    this.commissionable = commissionable;
  }

  public SalesOrderLineUpdateDto alternateID(DtoValueString alternateID) {
    this.alternateID = alternateID;
    return this;
  }

   /**
   * Get alternateID
   * @return alternateID
  **/
  @ApiModelProperty(value = "")
  public DtoValueString getAlternateID() {
    return alternateID;
  }

  public void setAlternateID(DtoValueString alternateID) {
    this.alternateID = alternateID;
  }

  public SalesOrderLineUpdateDto projectTask(DtoValueString projectTask) {
    this.projectTask = projectTask;
    return this;
  }

   /**
   * Get projectTask
   * @return projectTask
  **/
  @ApiModelProperty(value = "")
  public DtoValueString getProjectTask() {
    return projectTask;
  }

  public void setProjectTask(DtoValueString projectTask) {
    this.projectTask = projectTask;
  }

  public SalesOrderLineUpdateDto branchNumber(DtoValueString branchNumber) {
    this.branchNumber = branchNumber;
    return this;
  }

   /**
   * Get branchNumber
   * @return branchNumber
  **/
  @ApiModelProperty(value = "")
  public DtoValueString getBranchNumber() {
    return branchNumber;
  }

  public void setBranchNumber(DtoValueString branchNumber) {
    this.branchNumber = branchNumber;
  }

  public SalesOrderLineUpdateDto operation(OperationEnum operation) {
    this.operation = operation;
    return this;
  }

   /**
   * Get operation
   * @return operation
  **/
  @ApiModelProperty(value = "")
  public OperationEnum getOperation() {
    return operation;
  }

  public void setOperation(OperationEnum operation) {
    this.operation = operation;
  }

  public SalesOrderLineUpdateDto lineNbr(DtoValueNullableInt32 lineNbr) {
    this.lineNbr = lineNbr;
    return this;
  }

   /**
   * Get lineNbr
   * @return lineNbr
  **/
  @ApiModelProperty(value = "")
  public DtoValueNullableInt32 getLineNbr() {
    return lineNbr;
  }

  public void setLineNbr(DtoValueNullableInt32 lineNbr) {
    this.lineNbr = lineNbr;
  }

  public SalesOrderLineUpdateDto inventoryId(DtoValueString inventoryId) {
    this.inventoryId = inventoryId;
    return this;
  }

   /**
   * InventoryId is deprecated, please use InventoryNumber instead.
   * @return inventoryId
  **/
  @ApiModelProperty(value = "InventoryId is deprecated, please use InventoryNumber instead.")
  public DtoValueString getInventoryId() {
    return inventoryId;
  }

  public void setInventoryId(DtoValueString inventoryId) {
    this.inventoryId = inventoryId;
  }

  public SalesOrderLineUpdateDto inventoryNumber(DtoValueString inventoryNumber) {
    this.inventoryNumber = inventoryNumber;
    return this;
  }

   /**
   * Mandatory field
   * @return inventoryNumber
  **/
  @ApiModelProperty(required = true, value = "Mandatory field")
  public DtoValueString getInventoryNumber() {
    return inventoryNumber;
  }

  public void setInventoryNumber(DtoValueString inventoryNumber) {
    this.inventoryNumber = inventoryNumber;
  }

  public SalesOrderLineUpdateDto warehouse(DtoValueString warehouse) {
    this.warehouse = warehouse;
    return this;
  }

   /**
   * Get warehouse
   * @return warehouse
  **/
  @ApiModelProperty(value = "")
  public DtoValueString getWarehouse() {
    return warehouse;
  }

  public void setWarehouse(DtoValueString warehouse) {
    this.warehouse = warehouse;
  }

  public SalesOrderLineUpdateDto uom(DtoValueString uom) {
    this.uom = uom;
    return this;
  }

   /**
   * Get uom
   * @return uom
  **/
  @ApiModelProperty(value = "")
  public DtoValueString getUom() {
    return uom;
  }

  public void setUom(DtoValueString uom) {
    this.uom = uom;
  }

  public SalesOrderLineUpdateDto quantity(DtoValueNullableDecimal quantity) {
    this.quantity = quantity;
    return this;
  }

   /**
   * Get quantity
   * @return quantity
  **/
  @ApiModelProperty(value = "")
  public DtoValueNullableDecimal getQuantity() {
    return quantity;
  }

  public void setQuantity(DtoValueNullableDecimal quantity) {
    this.quantity = quantity;
  }

  public SalesOrderLineUpdateDto unitCost(DtoValueNullableDecimal unitCost) {
    this.unitCost = unitCost;
    return this;
  }

   /**
   * Get unitCost
   * @return unitCost
  **/
  @ApiModelProperty(value = "")
  public DtoValueNullableDecimal getUnitCost() {
    return unitCost;
  }

  public void setUnitCost(DtoValueNullableDecimal unitCost) {
    this.unitCost = unitCost;
  }

  public SalesOrderLineUpdateDto unitPrice(DtoValueNullableDecimal unitPrice) {
    this.unitPrice = unitPrice;
    return this;
  }

   /**
   * Get unitPrice
   * @return unitPrice
  **/
  @ApiModelProperty(value = "")
  public DtoValueNullableDecimal getUnitPrice() {
    return unitPrice;
  }

  public void setUnitPrice(DtoValueNullableDecimal unitPrice) {
    this.unitPrice = unitPrice;
  }

  public SalesOrderLineUpdateDto discountPercent(DtoValueNullableDecimal discountPercent) {
    this.discountPercent = discountPercent;
    return this;
  }

   /**
   * Get discountPercent
   * @return discountPercent
  **/
  @ApiModelProperty(value = "")
  public DtoValueNullableDecimal getDiscountPercent() {
    return discountPercent;
  }

  public void setDiscountPercent(DtoValueNullableDecimal discountPercent) {
    this.discountPercent = discountPercent;
  }

  public SalesOrderLineUpdateDto discountAmount(DtoValueNullableDecimal discountAmount) {
    this.discountAmount = discountAmount;
    return this;
  }

   /**
   * Get discountAmount
   * @return discountAmount
  **/
  @ApiModelProperty(value = "")
  public DtoValueNullableDecimal getDiscountAmount() {
    return discountAmount;
  }

  public void setDiscountAmount(DtoValueNullableDecimal discountAmount) {
    this.discountAmount = discountAmount;
  }

  public SalesOrderLineUpdateDto discountCode(DtoValueString discountCode) {
    this.discountCode = discountCode;
    return this;
  }

   /**
   * Get discountCode
   * @return discountCode
  **/
  @ApiModelProperty(value = "")
  public DtoValueString getDiscountCode() {
    return discountCode;
  }

  public void setDiscountCode(DtoValueString discountCode) {
    this.discountCode = discountCode;
  }

  public SalesOrderLineUpdateDto manualDiscount(DtoValueNullableBoolean manualDiscount) {
    this.manualDiscount = manualDiscount;
    return this;
  }

   /**
   * Get manualDiscount
   * @return manualDiscount
  **/
  @ApiModelProperty(value = "")
  public DtoValueNullableBoolean getManualDiscount() {
    return manualDiscount;
  }

  public void setManualDiscount(DtoValueNullableBoolean manualDiscount) {
    this.manualDiscount = manualDiscount;
  }

  public SalesOrderLineUpdateDto discUnitPrice(DtoValueNullableDecimal discUnitPrice) {
    this.discUnitPrice = discUnitPrice;
    return this;
  }

   /**
   * Get discUnitPrice
   * @return discUnitPrice
  **/
  @ApiModelProperty(value = "")
  public DtoValueNullableDecimal getDiscUnitPrice() {
    return discUnitPrice;
  }

  public void setDiscUnitPrice(DtoValueNullableDecimal discUnitPrice) {
    this.discUnitPrice = discUnitPrice;
  }

  public SalesOrderLineUpdateDto lineDescription(DtoValueString lineDescription) {
    this.lineDescription = lineDescription;
    return this;
  }

   /**
   * Get lineDescription
   * @return lineDescription
  **/
  @ApiModelProperty(value = "")
  public DtoValueString getLineDescription() {
    return lineDescription;
  }

  public void setLineDescription(DtoValueString lineDescription) {
    this.lineDescription = lineDescription;
  }

  public SalesOrderLineUpdateDto note(DtoValueString note) {
    this.note = note;
    return this;
  }

   /**
   * Get note
   * @return note
  **/
  @ApiModelProperty(value = "")
  public DtoValueString getNote() {
    return note;
  }

  public void setNote(DtoValueString note) {
    this.note = note;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SalesOrderLineUpdateDto salesOrderLineUpdateDto = (SalesOrderLineUpdateDto) o;
    return Objects.equals(this.invoiceNbr, salesOrderLineUpdateDto.invoiceNbr) &&
        Objects.equals(this.salesOrderOperation, salesOrderLineUpdateDto.salesOrderOperation) &&
        Objects.equals(this.freeItem, salesOrderLineUpdateDto.freeItem) &&
        Objects.equals(this.requestedOn, salesOrderLineUpdateDto.requestedOn) &&
        Objects.equals(this.shipOn, salesOrderLineUpdateDto.shipOn) &&
        Objects.equals(this.shipComplete, salesOrderLineUpdateDto.shipComplete) &&
        Objects.equals(this.undershipThreshold, salesOrderLineUpdateDto.undershipThreshold) &&
        Objects.equals(this.overshipThreshold, salesOrderLineUpdateDto.overshipThreshold) &&
        Objects.equals(this.completed, salesOrderLineUpdateDto.completed) &&
        Objects.equals(this.markForPO, salesOrderLineUpdateDto.markForPO) &&
        Objects.equals(this.poSource, salesOrderLineUpdateDto.poSource) &&
        Objects.equals(this.lotSerialNbr, salesOrderLineUpdateDto.lotSerialNbr) &&
        Objects.equals(this.expirationDate, salesOrderLineUpdateDto.expirationDate) &&
        Objects.equals(this.reasonCode, salesOrderLineUpdateDto.reasonCode) &&
        Objects.equals(this.salesPerson, salesOrderLineUpdateDto.salesPerson) &&
        Objects.equals(this.taxCategory, salesOrderLineUpdateDto.taxCategory) &&
        Objects.equals(this.commissionable, salesOrderLineUpdateDto.commissionable) &&
        Objects.equals(this.alternateID, salesOrderLineUpdateDto.alternateID) &&
        Objects.equals(this.projectTask, salesOrderLineUpdateDto.projectTask) &&
        Objects.equals(this.branchNumber, salesOrderLineUpdateDto.branchNumber) &&
        Objects.equals(this.operation, salesOrderLineUpdateDto.operation) &&
        Objects.equals(this.lineNbr, salesOrderLineUpdateDto.lineNbr) &&
        Objects.equals(this.inventoryId, salesOrderLineUpdateDto.inventoryId) &&
        Objects.equals(this.inventoryNumber, salesOrderLineUpdateDto.inventoryNumber) &&
        Objects.equals(this.warehouse, salesOrderLineUpdateDto.warehouse) &&
        Objects.equals(this.uom, salesOrderLineUpdateDto.uom) &&
        Objects.equals(this.quantity, salesOrderLineUpdateDto.quantity) &&
        Objects.equals(this.unitCost, salesOrderLineUpdateDto.unitCost) &&
        Objects.equals(this.unitPrice, salesOrderLineUpdateDto.unitPrice) &&
        Objects.equals(this.discountPercent, salesOrderLineUpdateDto.discountPercent) &&
        Objects.equals(this.discountAmount, salesOrderLineUpdateDto.discountAmount) &&
        Objects.equals(this.discountCode, salesOrderLineUpdateDto.discountCode) &&
        Objects.equals(this.manualDiscount, salesOrderLineUpdateDto.manualDiscount) &&
        Objects.equals(this.discUnitPrice, salesOrderLineUpdateDto.discUnitPrice) &&
        Objects.equals(this.lineDescription, salesOrderLineUpdateDto.lineDescription) &&
        Objects.equals(this.note, salesOrderLineUpdateDto.note);
  }

  @Override
  public int hashCode() {
    return Objects.hash(invoiceNbr, salesOrderOperation, freeItem, requestedOn, shipOn, shipComplete, undershipThreshold, overshipThreshold, completed, markForPO, poSource, lotSerialNbr, expirationDate, reasonCode, salesPerson, taxCategory, commissionable, alternateID, projectTask, branchNumber, operation, lineNbr, inventoryId, inventoryNumber, warehouse, uom, quantity, unitCost, unitPrice, discountPercent, discountAmount, discountCode, manualDiscount, discUnitPrice, lineDescription, note);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SalesOrderLineUpdateDto {\n");
    
    sb.append("    invoiceNbr: ").append(toIndentedString(invoiceNbr)).append("\n");
    sb.append("    salesOrderOperation: ").append(toIndentedString(salesOrderOperation)).append("\n");
    sb.append("    freeItem: ").append(toIndentedString(freeItem)).append("\n");
    sb.append("    requestedOn: ").append(toIndentedString(requestedOn)).append("\n");
    sb.append("    shipOn: ").append(toIndentedString(shipOn)).append("\n");
    sb.append("    shipComplete: ").append(toIndentedString(shipComplete)).append("\n");
    sb.append("    undershipThreshold: ").append(toIndentedString(undershipThreshold)).append("\n");
    sb.append("    overshipThreshold: ").append(toIndentedString(overshipThreshold)).append("\n");
    sb.append("    completed: ").append(toIndentedString(completed)).append("\n");
    sb.append("    markForPO: ").append(toIndentedString(markForPO)).append("\n");
    sb.append("    poSource: ").append(toIndentedString(poSource)).append("\n");
    sb.append("    lotSerialNbr: ").append(toIndentedString(lotSerialNbr)).append("\n");
    sb.append("    expirationDate: ").append(toIndentedString(expirationDate)).append("\n");
    sb.append("    reasonCode: ").append(toIndentedString(reasonCode)).append("\n");
    sb.append("    salesPerson: ").append(toIndentedString(salesPerson)).append("\n");
    sb.append("    taxCategory: ").append(toIndentedString(taxCategory)).append("\n");
    sb.append("    commissionable: ").append(toIndentedString(commissionable)).append("\n");
    sb.append("    alternateID: ").append(toIndentedString(alternateID)).append("\n");
    sb.append("    projectTask: ").append(toIndentedString(projectTask)).append("\n");
    sb.append("    branchNumber: ").append(toIndentedString(branchNumber)).append("\n");
    sb.append("    operation: ").append(toIndentedString(operation)).append("\n");
    sb.append("    lineNbr: ").append(toIndentedString(lineNbr)).append("\n");
    sb.append("    inventoryId: ").append(toIndentedString(inventoryId)).append("\n");
    sb.append("    inventoryNumber: ").append(toIndentedString(inventoryNumber)).append("\n");
    sb.append("    warehouse: ").append(toIndentedString(warehouse)).append("\n");
    sb.append("    uom: ").append(toIndentedString(uom)).append("\n");
    sb.append("    quantity: ").append(toIndentedString(quantity)).append("\n");
    sb.append("    unitCost: ").append(toIndentedString(unitCost)).append("\n");
    sb.append("    unitPrice: ").append(toIndentedString(unitPrice)).append("\n");
    sb.append("    discountPercent: ").append(toIndentedString(discountPercent)).append("\n");
    sb.append("    discountAmount: ").append(toIndentedString(discountAmount)).append("\n");
    sb.append("    discountCode: ").append(toIndentedString(discountCode)).append("\n");
    sb.append("    manualDiscount: ").append(toIndentedString(manualDiscount)).append("\n");
    sb.append("    discUnitPrice: ").append(toIndentedString(discUnitPrice)).append("\n");
    sb.append("    lineDescription: ").append(toIndentedString(lineDescription)).append("\n");
    sb.append("    note: ").append(toIndentedString(note)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

