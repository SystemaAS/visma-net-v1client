/*
 * Visma Net API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 6.13.03.0008
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package no.systema.visma.v1client.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

/**
 * StocktakeQueryParameters
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-04-16T15:04:09.234+02:00")
public class StocktakeQueryParameters {
  @JsonProperty("warehouse")
  private String warehouse = null;

  @JsonProperty("location")
  private String location = null;

  @JsonProperty("inventory")
  private String inventory = null;

  @JsonProperty("lotSerialNumber")
  private String lotSerialNumber = null;

  /**
   * Gets or Sets summaryStatus
   */
  public enum SummaryStatusEnum {
    CANCELLED("Cancelled"),
    
    COMPLETED("Completed"),
    
    COUNTING("Counting"),
    
    ENTERING("Entering");

    private String value;

    SummaryStatusEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static SummaryStatusEnum fromValue(String text) {
      for (SummaryStatusEnum b : SummaryStatusEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("summaryStatus")
  private SummaryStatusEnum summaryStatus = null;

  @JsonProperty("numberToRead")
  private Integer numberToRead = null;

  @JsonProperty("startWithLine")
  private Integer startWithLine = null;

  @JsonProperty("endWithLine")
  private Integer endWithLine = null;

  @JsonProperty("freezeDateTime")
  private String freezeDateTime = null;

  @JsonProperty("freezeDateTimeCondition")
  private String freezeDateTimeCondition = null;

  @JsonProperty("lastModifiedDateTime")
  private String lastModifiedDateTime = null;

  @JsonProperty("lastModifiedDateTimeCondition")
  private String lastModifiedDateTimeCondition = null;

  @JsonProperty("expirationDateTime")
  private String expirationDateTime = null;

  @JsonProperty("expirationDateTimeCondition")
  private String expirationDateTimeCondition = null;

  /**
   * Gets or Sets status
   */
  public enum StatusEnum {
    NOTENTERED("NotEntered"),
    
    ENTERED("Entered"),
    
    SKIPPED("Skipped");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static StatusEnum fromValue(String text) {
      for (StatusEnum b : StatusEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("status")
  private StatusEnum status = null;

  @JsonProperty("skipRecords")
  private Integer skipRecords = null;

  public StocktakeQueryParameters warehouse(String warehouse) {
    this.warehouse = warehouse;
    return this;
  }

   /**
   * Get warehouse
   * @return warehouse
  **/
  @ApiModelProperty(value = "")
  public String getWarehouse() {
    return warehouse;
  }

  public void setWarehouse(String warehouse) {
    this.warehouse = warehouse;
  }

  public StocktakeQueryParameters location(String location) {
    this.location = location;
    return this;
  }

   /**
   * Get location
   * @return location
  **/
  @ApiModelProperty(value = "")
  public String getLocation() {
    return location;
  }

  public void setLocation(String location) {
    this.location = location;
  }

  public StocktakeQueryParameters inventory(String inventory) {
    this.inventory = inventory;
    return this;
  }

   /**
   * Get inventory
   * @return inventory
  **/
  @ApiModelProperty(value = "")
  public String getInventory() {
    return inventory;
  }

  public void setInventory(String inventory) {
    this.inventory = inventory;
  }

  public StocktakeQueryParameters lotSerialNumber(String lotSerialNumber) {
    this.lotSerialNumber = lotSerialNumber;
    return this;
  }

   /**
   * Get lotSerialNumber
   * @return lotSerialNumber
  **/
  @ApiModelProperty(value = "")
  public String getLotSerialNumber() {
    return lotSerialNumber;
  }

  public void setLotSerialNumber(String lotSerialNumber) {
    this.lotSerialNumber = lotSerialNumber;
  }

  public StocktakeQueryParameters summaryStatus(SummaryStatusEnum summaryStatus) {
    this.summaryStatus = summaryStatus;
    return this;
  }

   /**
   * Get summaryStatus
   * @return summaryStatus
  **/
  @ApiModelProperty(value = "")
  public SummaryStatusEnum getSummaryStatus() {
    return summaryStatus;
  }

  public void setSummaryStatus(SummaryStatusEnum summaryStatus) {
    this.summaryStatus = summaryStatus;
  }

  public StocktakeQueryParameters numberToRead(Integer numberToRead) {
    this.numberToRead = numberToRead;
    return this;
  }

   /**
   * Get numberToRead
   * @return numberToRead
  **/
  @ApiModelProperty(value = "")
  public Integer getNumberToRead() {
    return numberToRead;
  }

  public void setNumberToRead(Integer numberToRead) {
    this.numberToRead = numberToRead;
  }

  public StocktakeQueryParameters startWithLine(Integer startWithLine) {
    this.startWithLine = startWithLine;
    return this;
  }

   /**
   * Get startWithLine
   * @return startWithLine
  **/
  @ApiModelProperty(value = "")
  public Integer getStartWithLine() {
    return startWithLine;
  }

  public void setStartWithLine(Integer startWithLine) {
    this.startWithLine = startWithLine;
  }

  public StocktakeQueryParameters endWithLine(Integer endWithLine) {
    this.endWithLine = endWithLine;
    return this;
  }

   /**
   * Get endWithLine
   * @return endWithLine
  **/
  @ApiModelProperty(value = "")
  public Integer getEndWithLine() {
    return endWithLine;
  }

  public void setEndWithLine(Integer endWithLine) {
    this.endWithLine = endWithLine;
  }

  public StocktakeQueryParameters freezeDateTime(String freezeDateTime) {
    this.freezeDateTime = freezeDateTime;
    return this;
  }

   /**
   * Get freezeDateTime
   * @return freezeDateTime
  **/
  @ApiModelProperty(value = "")
  public String getFreezeDateTime() {
    return freezeDateTime;
  }

  public void setFreezeDateTime(String freezeDateTime) {
    this.freezeDateTime = freezeDateTime;
  }

  public StocktakeQueryParameters freezeDateTimeCondition(String freezeDateTimeCondition) {
    this.freezeDateTimeCondition = freezeDateTimeCondition;
    return this;
  }

   /**
   * Get freezeDateTimeCondition
   * @return freezeDateTimeCondition
  **/
  @ApiModelProperty(value = "")
  public String getFreezeDateTimeCondition() {
    return freezeDateTimeCondition;
  }

  public void setFreezeDateTimeCondition(String freezeDateTimeCondition) {
    this.freezeDateTimeCondition = freezeDateTimeCondition;
  }

  public StocktakeQueryParameters lastModifiedDateTime(String lastModifiedDateTime) {
    this.lastModifiedDateTime = lastModifiedDateTime;
    return this;
  }

   /**
   * Get lastModifiedDateTime
   * @return lastModifiedDateTime
  **/
  @ApiModelProperty(value = "")
  public String getLastModifiedDateTime() {
    return lastModifiedDateTime;
  }

  public void setLastModifiedDateTime(String lastModifiedDateTime) {
    this.lastModifiedDateTime = lastModifiedDateTime;
  }

  public StocktakeQueryParameters lastModifiedDateTimeCondition(String lastModifiedDateTimeCondition) {
    this.lastModifiedDateTimeCondition = lastModifiedDateTimeCondition;
    return this;
  }

   /**
   * Get lastModifiedDateTimeCondition
   * @return lastModifiedDateTimeCondition
  **/
  @ApiModelProperty(value = "")
  public String getLastModifiedDateTimeCondition() {
    return lastModifiedDateTimeCondition;
  }

  public void setLastModifiedDateTimeCondition(String lastModifiedDateTimeCondition) {
    this.lastModifiedDateTimeCondition = lastModifiedDateTimeCondition;
  }

  public StocktakeQueryParameters expirationDateTime(String expirationDateTime) {
    this.expirationDateTime = expirationDateTime;
    return this;
  }

   /**
   * Get expirationDateTime
   * @return expirationDateTime
  **/
  @ApiModelProperty(value = "")
  public String getExpirationDateTime() {
    return expirationDateTime;
  }

  public void setExpirationDateTime(String expirationDateTime) {
    this.expirationDateTime = expirationDateTime;
  }

  public StocktakeQueryParameters expirationDateTimeCondition(String expirationDateTimeCondition) {
    this.expirationDateTimeCondition = expirationDateTimeCondition;
    return this;
  }

   /**
   * Get expirationDateTimeCondition
   * @return expirationDateTimeCondition
  **/
  @ApiModelProperty(value = "")
  public String getExpirationDateTimeCondition() {
    return expirationDateTimeCondition;
  }

  public void setExpirationDateTimeCondition(String expirationDateTimeCondition) {
    this.expirationDateTimeCondition = expirationDateTimeCondition;
  }

  public StocktakeQueryParameters status(StatusEnum status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @ApiModelProperty(value = "")
  public StatusEnum getStatus() {
    return status;
  }

  public void setStatus(StatusEnum status) {
    this.status = status;
  }

  public StocktakeQueryParameters skipRecords(Integer skipRecords) {
    this.skipRecords = skipRecords;
    return this;
  }

   /**
   * Get skipRecords
   * @return skipRecords
  **/
  @ApiModelProperty(value = "")
  public Integer getSkipRecords() {
    return skipRecords;
  }

  public void setSkipRecords(Integer skipRecords) {
    this.skipRecords = skipRecords;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    StocktakeQueryParameters stocktakeQueryParameters = (StocktakeQueryParameters) o;
    return Objects.equals(this.warehouse, stocktakeQueryParameters.warehouse) &&
        Objects.equals(this.location, stocktakeQueryParameters.location) &&
        Objects.equals(this.inventory, stocktakeQueryParameters.inventory) &&
        Objects.equals(this.lotSerialNumber, stocktakeQueryParameters.lotSerialNumber) &&
        Objects.equals(this.summaryStatus, stocktakeQueryParameters.summaryStatus) &&
        Objects.equals(this.numberToRead, stocktakeQueryParameters.numberToRead) &&
        Objects.equals(this.startWithLine, stocktakeQueryParameters.startWithLine) &&
        Objects.equals(this.endWithLine, stocktakeQueryParameters.endWithLine) &&
        Objects.equals(this.freezeDateTime, stocktakeQueryParameters.freezeDateTime) &&
        Objects.equals(this.freezeDateTimeCondition, stocktakeQueryParameters.freezeDateTimeCondition) &&
        Objects.equals(this.lastModifiedDateTime, stocktakeQueryParameters.lastModifiedDateTime) &&
        Objects.equals(this.lastModifiedDateTimeCondition, stocktakeQueryParameters.lastModifiedDateTimeCondition) &&
        Objects.equals(this.expirationDateTime, stocktakeQueryParameters.expirationDateTime) &&
        Objects.equals(this.expirationDateTimeCondition, stocktakeQueryParameters.expirationDateTimeCondition) &&
        Objects.equals(this.status, stocktakeQueryParameters.status) &&
        Objects.equals(this.skipRecords, stocktakeQueryParameters.skipRecords);
  }

  @Override
  public int hashCode() {
    return Objects.hash(warehouse, location, inventory, lotSerialNumber, summaryStatus, numberToRead, startWithLine, endWithLine, freezeDateTime, freezeDateTimeCondition, lastModifiedDateTime, lastModifiedDateTimeCondition, expirationDateTime, expirationDateTimeCondition, status, skipRecords);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class StocktakeQueryParameters {\n");
    
    sb.append("    warehouse: ").append(toIndentedString(warehouse)).append("\n");
    sb.append("    location: ").append(toIndentedString(location)).append("\n");
    sb.append("    inventory: ").append(toIndentedString(inventory)).append("\n");
    sb.append("    lotSerialNumber: ").append(toIndentedString(lotSerialNumber)).append("\n");
    sb.append("    summaryStatus: ").append(toIndentedString(summaryStatus)).append("\n");
    sb.append("    numberToRead: ").append(toIndentedString(numberToRead)).append("\n");
    sb.append("    startWithLine: ").append(toIndentedString(startWithLine)).append("\n");
    sb.append("    endWithLine: ").append(toIndentedString(endWithLine)).append("\n");
    sb.append("    freezeDateTime: ").append(toIndentedString(freezeDateTime)).append("\n");
    sb.append("    freezeDateTimeCondition: ").append(toIndentedString(freezeDateTimeCondition)).append("\n");
    sb.append("    lastModifiedDateTime: ").append(toIndentedString(lastModifiedDateTime)).append("\n");
    sb.append("    lastModifiedDateTimeCondition: ").append(toIndentedString(lastModifiedDateTimeCondition)).append("\n");
    sb.append("    expirationDateTime: ").append(toIndentedString(expirationDateTime)).append("\n");
    sb.append("    expirationDateTimeCondition: ").append(toIndentedString(expirationDateTimeCondition)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    skipRecords: ").append(toIndentedString(skipRecords)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

