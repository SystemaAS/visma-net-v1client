/*
 * Visma Net API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 6.13.03.0008
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package no.systema.visma.v1client.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.time.LocalDateTime;
import no.systema.visma.v1client.model.AccountNumberTypeDescriptionDto;
import no.systema.visma.v1client.model.AttachmentDto;
import no.systema.visma.v1client.model.BranchNumberDto;
import no.systema.visma.v1client.model.CurrencyIdDescriptionDto;
import no.systema.visma.v1client.model.CustomerNumberDto;
import no.systema.visma.v1client.model.EmployeeDto;
import no.systema.visma.v1client.model.ExpenseClaimNumberDescriptionDto;
import no.systema.visma.v1client.model.InventoryNumberDescriptionDto;
import no.systema.visma.v1client.model.LocationNameDescriptionDto;
import no.systema.visma.v1client.model.ProjectIdDescriptionDto;
import no.systema.visma.v1client.model.ProjectTaskIdDescriptionDto;
import no.systema.visma.v1client.model.SubAccountDescriptionDto;
import no.systema.visma.v1client.model.TaxCategoryNumberDescriptionDto;

/**
 * This class represents a Expense Receipt in ExpenseReceiptController. Used by getting data.
 */
@ApiModel(description = "This class represents a Expense Receipt in ExpenseReceiptController. Used by getting data.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-04-16T15:04:09.234+02:00")
public class ExpenseReceiptDto {
  @JsonProperty("internalId")
  private Integer internalId = null;

  @JsonProperty("receiptId")
  private String receiptId = null;

  @JsonProperty("date")
  private LocalDateTime date = null;

  @JsonProperty("currency")
  private CurrencyIdDescriptionDto currency = null;

  @JsonProperty("refNbr")
  private String refNbr = null;

  @JsonProperty("inventory")
  private InventoryNumberDescriptionDto inventory = null;

  @JsonProperty("description")
  private String description = null;

  @JsonProperty("uom")
  private String uom = null;

  @JsonProperty("quantity")
  private Double quantity = null;

  @JsonProperty("unitCost")
  private Double unitCost = null;

  @JsonProperty("totalAmount")
  private Double totalAmount = null;

  @JsonProperty("employeePart")
  private Double employeePart = null;

  @JsonProperty("claimAmount")
  private Double claimAmount = null;

  /**
   * Gets or Sets status
   */
  public enum StatusEnum {
    OPEN("Open"),
    
    PENDING("Pending"),
    
    APPROVED("Approved"),
    
    REJECTED("Rejected"),
    
    RELEASED("Released");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static StatusEnum fromValue(String text) {
      for (StatusEnum b : StatusEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("status")
  private StatusEnum status = null;

  @JsonProperty("claimedBy")
  private EmployeeDto claimedBy = null;

  @JsonProperty("branch")
  private BranchNumberDto branch = null;

  @JsonProperty("expenseClaim")
  private ExpenseClaimNumberDescriptionDto expenseClaim = null;

  @JsonProperty("invoiceable")
  private Boolean invoiceable = null;

  @JsonProperty("project")
  private ProjectIdDescriptionDto project = null;

  @JsonProperty("projectTask")
  private ProjectTaskIdDescriptionDto projectTask = null;

  @JsonProperty("customer")
  private CustomerNumberDto customer = null;

  @JsonProperty("location")
  private LocationNameDescriptionDto location = null;

  @JsonProperty("expenseAccount")
  private AccountNumberTypeDescriptionDto expenseAccount = null;

  @JsonProperty("expenseSub")
  private SubAccountDescriptionDto expenseSub = null;

  @JsonProperty("salesAccount")
  private AccountNumberTypeDescriptionDto salesAccount = null;

  @JsonProperty("salesSub")
  private SubAccountDescriptionDto salesSub = null;

  @JsonProperty("taxCategory")
  private TaxCategoryNumberDescriptionDto taxCategory = null;

  @JsonProperty("image")
  private AttachmentDto image = null;

  public ExpenseReceiptDto internalId(Integer internalId) {
    this.internalId = internalId;
    return this;
  }

   /**
   * Get internalId
   * @return internalId
  **/
  @ApiModelProperty(value = "")
  public Integer getInternalId() {
    return internalId;
  }

  public void setInternalId(Integer internalId) {
    this.internalId = internalId;
  }

  public ExpenseReceiptDto receiptId(String receiptId) {
    this.receiptId = receiptId;
    return this;
  }

   /**
   * Get receiptId
   * @return receiptId
  **/
  @ApiModelProperty(value = "")
  public String getReceiptId() {
    return receiptId;
  }

  public void setReceiptId(String receiptId) {
    this.receiptId = receiptId;
  }

  public ExpenseReceiptDto date(LocalDateTime date) {
    this.date = date;
    return this;
  }

   /**
   * Get date
   * @return date
  **/
  @ApiModelProperty(value = "")
  public LocalDateTime getDate() {
    return date;
  }

  public void setDate(LocalDateTime date) {
    this.date = date;
  }

  public ExpenseReceiptDto currency(CurrencyIdDescriptionDto currency) {
    this.currency = currency;
    return this;
  }

   /**
   * Get currency
   * @return currency
  **/
  @ApiModelProperty(value = "")
  public CurrencyIdDescriptionDto getCurrency() {
    return currency;
  }

  public void setCurrency(CurrencyIdDescriptionDto currency) {
    this.currency = currency;
  }

  public ExpenseReceiptDto refNbr(String refNbr) {
    this.refNbr = refNbr;
    return this;
  }

   /**
   * Get refNbr
   * @return refNbr
  **/
  @ApiModelProperty(value = "")
  public String getRefNbr() {
    return refNbr;
  }

  public void setRefNbr(String refNbr) {
    this.refNbr = refNbr;
  }

  public ExpenseReceiptDto inventory(InventoryNumberDescriptionDto inventory) {
    this.inventory = inventory;
    return this;
  }

   /**
   * Get inventory
   * @return inventory
  **/
  @ApiModelProperty(value = "")
  public InventoryNumberDescriptionDto getInventory() {
    return inventory;
  }

  public void setInventory(InventoryNumberDescriptionDto inventory) {
    this.inventory = inventory;
  }

  public ExpenseReceiptDto description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @ApiModelProperty(value = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public ExpenseReceiptDto uom(String uom) {
    this.uom = uom;
    return this;
  }

   /**
   * Get uom
   * @return uom
  **/
  @ApiModelProperty(value = "")
  public String getUom() {
    return uom;
  }

  public void setUom(String uom) {
    this.uom = uom;
  }

  public ExpenseReceiptDto quantity(Double quantity) {
    this.quantity = quantity;
    return this;
  }

   /**
   * Get quantity
   * @return quantity
  **/
  @ApiModelProperty(value = "")
  public Double getQuantity() {
    return quantity;
  }

  public void setQuantity(Double quantity) {
    this.quantity = quantity;
  }

  public ExpenseReceiptDto unitCost(Double unitCost) {
    this.unitCost = unitCost;
    return this;
  }

   /**
   * Get unitCost
   * @return unitCost
  **/
  @ApiModelProperty(value = "")
  public Double getUnitCost() {
    return unitCost;
  }

  public void setUnitCost(Double unitCost) {
    this.unitCost = unitCost;
  }

  public ExpenseReceiptDto totalAmount(Double totalAmount) {
    this.totalAmount = totalAmount;
    return this;
  }

   /**
   * Get totalAmount
   * @return totalAmount
  **/
  @ApiModelProperty(value = "")
  public Double getTotalAmount() {
    return totalAmount;
  }

  public void setTotalAmount(Double totalAmount) {
    this.totalAmount = totalAmount;
  }

  public ExpenseReceiptDto employeePart(Double employeePart) {
    this.employeePart = employeePart;
    return this;
  }

   /**
   * Get employeePart
   * @return employeePart
  **/
  @ApiModelProperty(value = "")
  public Double getEmployeePart() {
    return employeePart;
  }

  public void setEmployeePart(Double employeePart) {
    this.employeePart = employeePart;
  }

  public ExpenseReceiptDto claimAmount(Double claimAmount) {
    this.claimAmount = claimAmount;
    return this;
  }

   /**
   * Get claimAmount
   * @return claimAmount
  **/
  @ApiModelProperty(value = "")
  public Double getClaimAmount() {
    return claimAmount;
  }

  public void setClaimAmount(Double claimAmount) {
    this.claimAmount = claimAmount;
  }

  public ExpenseReceiptDto status(StatusEnum status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @ApiModelProperty(value = "")
  public StatusEnum getStatus() {
    return status;
  }

  public void setStatus(StatusEnum status) {
    this.status = status;
  }

  public ExpenseReceiptDto claimedBy(EmployeeDto claimedBy) {
    this.claimedBy = claimedBy;
    return this;
  }

   /**
   * Get claimedBy
   * @return claimedBy
  **/
  @ApiModelProperty(value = "")
  public EmployeeDto getClaimedBy() {
    return claimedBy;
  }

  public void setClaimedBy(EmployeeDto claimedBy) {
    this.claimedBy = claimedBy;
  }

  public ExpenseReceiptDto branch(BranchNumberDto branch) {
    this.branch = branch;
    return this;
  }

   /**
   * Get branch
   * @return branch
  **/
  @ApiModelProperty(value = "")
  public BranchNumberDto getBranch() {
    return branch;
  }

  public void setBranch(BranchNumberDto branch) {
    this.branch = branch;
  }

  public ExpenseReceiptDto expenseClaim(ExpenseClaimNumberDescriptionDto expenseClaim) {
    this.expenseClaim = expenseClaim;
    return this;
  }

   /**
   * Get expenseClaim
   * @return expenseClaim
  **/
  @ApiModelProperty(value = "")
  public ExpenseClaimNumberDescriptionDto getExpenseClaim() {
    return expenseClaim;
  }

  public void setExpenseClaim(ExpenseClaimNumberDescriptionDto expenseClaim) {
    this.expenseClaim = expenseClaim;
  }

  public ExpenseReceiptDto invoiceable(Boolean invoiceable) {
    this.invoiceable = invoiceable;
    return this;
  }

   /**
   * Get invoiceable
   * @return invoiceable
  **/
  @ApiModelProperty(value = "")
  public Boolean isInvoiceable() {
    return invoiceable;
  }

  public void setInvoiceable(Boolean invoiceable) {
    this.invoiceable = invoiceable;
  }

  public ExpenseReceiptDto project(ProjectIdDescriptionDto project) {
    this.project = project;
    return this;
  }

   /**
   * Get project
   * @return project
  **/
  @ApiModelProperty(value = "")
  public ProjectIdDescriptionDto getProject() {
    return project;
  }

  public void setProject(ProjectIdDescriptionDto project) {
    this.project = project;
  }

  public ExpenseReceiptDto projectTask(ProjectTaskIdDescriptionDto projectTask) {
    this.projectTask = projectTask;
    return this;
  }

   /**
   * Get projectTask
   * @return projectTask
  **/
  @ApiModelProperty(value = "")
  public ProjectTaskIdDescriptionDto getProjectTask() {
    return projectTask;
  }

  public void setProjectTask(ProjectTaskIdDescriptionDto projectTask) {
    this.projectTask = projectTask;
  }

  public ExpenseReceiptDto customer(CustomerNumberDto customer) {
    this.customer = customer;
    return this;
  }

   /**
   * Get customer
   * @return customer
  **/
  @ApiModelProperty(value = "")
  public CustomerNumberDto getCustomer() {
    return customer;
  }

  public void setCustomer(CustomerNumberDto customer) {
    this.customer = customer;
  }

  public ExpenseReceiptDto location(LocationNameDescriptionDto location) {
    this.location = location;
    return this;
  }

   /**
   * Get location
   * @return location
  **/
  @ApiModelProperty(value = "")
  public LocationNameDescriptionDto getLocation() {
    return location;
  }

  public void setLocation(LocationNameDescriptionDto location) {
    this.location = location;
  }

  public ExpenseReceiptDto expenseAccount(AccountNumberTypeDescriptionDto expenseAccount) {
    this.expenseAccount = expenseAccount;
    return this;
  }

   /**
   * Get expenseAccount
   * @return expenseAccount
  **/
  @ApiModelProperty(value = "")
  public AccountNumberTypeDescriptionDto getExpenseAccount() {
    return expenseAccount;
  }

  public void setExpenseAccount(AccountNumberTypeDescriptionDto expenseAccount) {
    this.expenseAccount = expenseAccount;
  }

  public ExpenseReceiptDto expenseSub(SubAccountDescriptionDto expenseSub) {
    this.expenseSub = expenseSub;
    return this;
  }

   /**
   * Get expenseSub
   * @return expenseSub
  **/
  @ApiModelProperty(value = "")
  public SubAccountDescriptionDto getExpenseSub() {
    return expenseSub;
  }

  public void setExpenseSub(SubAccountDescriptionDto expenseSub) {
    this.expenseSub = expenseSub;
  }

  public ExpenseReceiptDto salesAccount(AccountNumberTypeDescriptionDto salesAccount) {
    this.salesAccount = salesAccount;
    return this;
  }

   /**
   * Get salesAccount
   * @return salesAccount
  **/
  @ApiModelProperty(value = "")
  public AccountNumberTypeDescriptionDto getSalesAccount() {
    return salesAccount;
  }

  public void setSalesAccount(AccountNumberTypeDescriptionDto salesAccount) {
    this.salesAccount = salesAccount;
  }

  public ExpenseReceiptDto salesSub(SubAccountDescriptionDto salesSub) {
    this.salesSub = salesSub;
    return this;
  }

   /**
   * Get salesSub
   * @return salesSub
  **/
  @ApiModelProperty(value = "")
  public SubAccountDescriptionDto getSalesSub() {
    return salesSub;
  }

  public void setSalesSub(SubAccountDescriptionDto salesSub) {
    this.salesSub = salesSub;
  }

  public ExpenseReceiptDto taxCategory(TaxCategoryNumberDescriptionDto taxCategory) {
    this.taxCategory = taxCategory;
    return this;
  }

   /**
   * Get taxCategory
   * @return taxCategory
  **/
  @ApiModelProperty(value = "")
  public TaxCategoryNumberDescriptionDto getTaxCategory() {
    return taxCategory;
  }

  public void setTaxCategory(TaxCategoryNumberDescriptionDto taxCategory) {
    this.taxCategory = taxCategory;
  }

  public ExpenseReceiptDto image(AttachmentDto image) {
    this.image = image;
    return this;
  }

   /**
   * Get image
   * @return image
  **/
  @ApiModelProperty(value = "")
  public AttachmentDto getImage() {
    return image;
  }

  public void setImage(AttachmentDto image) {
    this.image = image;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ExpenseReceiptDto expenseReceiptDto = (ExpenseReceiptDto) o;
    return Objects.equals(this.internalId, expenseReceiptDto.internalId) &&
        Objects.equals(this.receiptId, expenseReceiptDto.receiptId) &&
        Objects.equals(this.date, expenseReceiptDto.date) &&
        Objects.equals(this.currency, expenseReceiptDto.currency) &&
        Objects.equals(this.refNbr, expenseReceiptDto.refNbr) &&
        Objects.equals(this.inventory, expenseReceiptDto.inventory) &&
        Objects.equals(this.description, expenseReceiptDto.description) &&
        Objects.equals(this.uom, expenseReceiptDto.uom) &&
        Objects.equals(this.quantity, expenseReceiptDto.quantity) &&
        Objects.equals(this.unitCost, expenseReceiptDto.unitCost) &&
        Objects.equals(this.totalAmount, expenseReceiptDto.totalAmount) &&
        Objects.equals(this.employeePart, expenseReceiptDto.employeePart) &&
        Objects.equals(this.claimAmount, expenseReceiptDto.claimAmount) &&
        Objects.equals(this.status, expenseReceiptDto.status) &&
        Objects.equals(this.claimedBy, expenseReceiptDto.claimedBy) &&
        Objects.equals(this.branch, expenseReceiptDto.branch) &&
        Objects.equals(this.expenseClaim, expenseReceiptDto.expenseClaim) &&
        Objects.equals(this.invoiceable, expenseReceiptDto.invoiceable) &&
        Objects.equals(this.project, expenseReceiptDto.project) &&
        Objects.equals(this.projectTask, expenseReceiptDto.projectTask) &&
        Objects.equals(this.customer, expenseReceiptDto.customer) &&
        Objects.equals(this.location, expenseReceiptDto.location) &&
        Objects.equals(this.expenseAccount, expenseReceiptDto.expenseAccount) &&
        Objects.equals(this.expenseSub, expenseReceiptDto.expenseSub) &&
        Objects.equals(this.salesAccount, expenseReceiptDto.salesAccount) &&
        Objects.equals(this.salesSub, expenseReceiptDto.salesSub) &&
        Objects.equals(this.taxCategory, expenseReceiptDto.taxCategory) &&
        Objects.equals(this.image, expenseReceiptDto.image);
  }

  @Override
  public int hashCode() {
    return Objects.hash(internalId, receiptId, date, currency, refNbr, inventory, description, uom, quantity, unitCost, totalAmount, employeePart, claimAmount, status, claimedBy, branch, expenseClaim, invoiceable, project, projectTask, customer, location, expenseAccount, expenseSub, salesAccount, salesSub, taxCategory, image);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ExpenseReceiptDto {\n");
    
    sb.append("    internalId: ").append(toIndentedString(internalId)).append("\n");
    sb.append("    receiptId: ").append(toIndentedString(receiptId)).append("\n");
    sb.append("    date: ").append(toIndentedString(date)).append("\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    refNbr: ").append(toIndentedString(refNbr)).append("\n");
    sb.append("    inventory: ").append(toIndentedString(inventory)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    uom: ").append(toIndentedString(uom)).append("\n");
    sb.append("    quantity: ").append(toIndentedString(quantity)).append("\n");
    sb.append("    unitCost: ").append(toIndentedString(unitCost)).append("\n");
    sb.append("    totalAmount: ").append(toIndentedString(totalAmount)).append("\n");
    sb.append("    employeePart: ").append(toIndentedString(employeePart)).append("\n");
    sb.append("    claimAmount: ").append(toIndentedString(claimAmount)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    claimedBy: ").append(toIndentedString(claimedBy)).append("\n");
    sb.append("    branch: ").append(toIndentedString(branch)).append("\n");
    sb.append("    expenseClaim: ").append(toIndentedString(expenseClaim)).append("\n");
    sb.append("    invoiceable: ").append(toIndentedString(invoiceable)).append("\n");
    sb.append("    project: ").append(toIndentedString(project)).append("\n");
    sb.append("    projectTask: ").append(toIndentedString(projectTask)).append("\n");
    sb.append("    customer: ").append(toIndentedString(customer)).append("\n");
    sb.append("    location: ").append(toIndentedString(location)).append("\n");
    sb.append("    expenseAccount: ").append(toIndentedString(expenseAccount)).append("\n");
    sb.append("    expenseSub: ").append(toIndentedString(expenseSub)).append("\n");
    sb.append("    salesAccount: ").append(toIndentedString(salesAccount)).append("\n");
    sb.append("    salesSub: ").append(toIndentedString(salesSub)).append("\n");
    sb.append("    taxCategory: ").append(toIndentedString(taxCategory)).append("\n");
    sb.append("    image: ").append(toIndentedString(image)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

