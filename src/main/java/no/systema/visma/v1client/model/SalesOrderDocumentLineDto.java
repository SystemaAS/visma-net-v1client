/*
 * Visma Net API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 6.13.03.0008
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package no.systema.visma.v1client.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import no.systema.visma.v1client.model.AttachmentDto;
import no.systema.visma.v1client.model.BranchNumberDto;
import no.systema.visma.v1client.model.InventoryNumberDescriptionDto;
import no.systema.visma.v1client.model.WarehouseIdDescriptionDto;

/**
 * This class represents a SOOrder in SOOrderController. Used by getting data.
 */
@ApiModel(description = "This class represents a SOOrder in SOOrderController. Used by getting data.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-04-16T15:04:09.234+02:00")
public class SalesOrderDocumentLineDto {
  @JsonProperty("lineNbr")
  private Integer lineNbr = null;

  @JsonProperty("sortOrder")
  private Integer sortOrder = null;

  @JsonProperty("inventory")
  private InventoryNumberDescriptionDto inventory = null;

  @JsonProperty("warehouse")
  private WarehouseIdDescriptionDto warehouse = null;

  @JsonProperty("uom")
  private String uom = null;

  @JsonProperty("quantity")
  private Double quantity = null;

  @JsonProperty("qtyOnShipments")
  private Double qtyOnShipments = null;

  @JsonProperty("openQty")
  private Double openQty = null;

  @JsonProperty("unitCost")
  private Double unitCost = null;

  @JsonProperty("unitPrice")
  private Double unitPrice = null;

  @JsonProperty("discountCode")
  private String discountCode = null;

  @JsonProperty("discountPercent")
  private Double discountPercent = null;

  @JsonProperty("discountAmount")
  private Double discountAmount = null;

  @JsonProperty("manualDiscount")
  private Boolean manualDiscount = null;

  @JsonProperty("discUnitPrice")
  private Double discUnitPrice = null;

  @JsonProperty("extPrice")
  private Double extPrice = null;

  @JsonProperty("unbilledAmount")
  private Double unbilledAmount = null;

  @JsonProperty("lineDescription")
  private String lineDescription = null;

  @JsonProperty("branchNumber")
  private BranchNumberDto branchNumber = null;

  @JsonProperty("note")
  private String note = null;

  @JsonProperty("attachments")
  private List<AttachmentDto> attachments = null;

  public SalesOrderDocumentLineDto lineNbr(Integer lineNbr) {
    this.lineNbr = lineNbr;
    return this;
  }

   /**
   * Get lineNbr
   * @return lineNbr
  **/
  @ApiModelProperty(value = "")
  public Integer getLineNbr() {
    return lineNbr;
  }

  public void setLineNbr(Integer lineNbr) {
    this.lineNbr = lineNbr;
  }

  public SalesOrderDocumentLineDto sortOrder(Integer sortOrder) {
    this.sortOrder = sortOrder;
    return this;
  }

   /**
   * Get sortOrder
   * @return sortOrder
  **/
  @ApiModelProperty(value = "")
  public Integer getSortOrder() {
    return sortOrder;
  }

  public void setSortOrder(Integer sortOrder) {
    this.sortOrder = sortOrder;
  }

  public SalesOrderDocumentLineDto inventory(InventoryNumberDescriptionDto inventory) {
    this.inventory = inventory;
    return this;
  }

   /**
   * Get inventory
   * @return inventory
  **/
  @ApiModelProperty(value = "")
  public InventoryNumberDescriptionDto getInventory() {
    return inventory;
  }

  public void setInventory(InventoryNumberDescriptionDto inventory) {
    this.inventory = inventory;
  }

  public SalesOrderDocumentLineDto warehouse(WarehouseIdDescriptionDto warehouse) {
    this.warehouse = warehouse;
    return this;
  }

   /**
   * Get warehouse
   * @return warehouse
  **/
  @ApiModelProperty(value = "")
  public WarehouseIdDescriptionDto getWarehouse() {
    return warehouse;
  }

  public void setWarehouse(WarehouseIdDescriptionDto warehouse) {
    this.warehouse = warehouse;
  }

  public SalesOrderDocumentLineDto uom(String uom) {
    this.uom = uom;
    return this;
  }

   /**
   * Get uom
   * @return uom
  **/
  @ApiModelProperty(value = "")
  public String getUom() {
    return uom;
  }

  public void setUom(String uom) {
    this.uom = uom;
  }

  public SalesOrderDocumentLineDto quantity(Double quantity) {
    this.quantity = quantity;
    return this;
  }

   /**
   * Get quantity
   * @return quantity
  **/
  @ApiModelProperty(value = "")
  public Double getQuantity() {
    return quantity;
  }

  public void setQuantity(Double quantity) {
    this.quantity = quantity;
  }

  public SalesOrderDocumentLineDto qtyOnShipments(Double qtyOnShipments) {
    this.qtyOnShipments = qtyOnShipments;
    return this;
  }

   /**
   * Get qtyOnShipments
   * @return qtyOnShipments
  **/
  @ApiModelProperty(value = "")
  public Double getQtyOnShipments() {
    return qtyOnShipments;
  }

  public void setQtyOnShipments(Double qtyOnShipments) {
    this.qtyOnShipments = qtyOnShipments;
  }

  public SalesOrderDocumentLineDto openQty(Double openQty) {
    this.openQty = openQty;
    return this;
  }

   /**
   * Get openQty
   * @return openQty
  **/
  @ApiModelProperty(value = "")
  public Double getOpenQty() {
    return openQty;
  }

  public void setOpenQty(Double openQty) {
    this.openQty = openQty;
  }

  public SalesOrderDocumentLineDto unitCost(Double unitCost) {
    this.unitCost = unitCost;
    return this;
  }

   /**
   * Get unitCost
   * @return unitCost
  **/
  @ApiModelProperty(value = "")
  public Double getUnitCost() {
    return unitCost;
  }

  public void setUnitCost(Double unitCost) {
    this.unitCost = unitCost;
  }

  public SalesOrderDocumentLineDto unitPrice(Double unitPrice) {
    this.unitPrice = unitPrice;
    return this;
  }

   /**
   * Get unitPrice
   * @return unitPrice
  **/
  @ApiModelProperty(value = "")
  public Double getUnitPrice() {
    return unitPrice;
  }

  public void setUnitPrice(Double unitPrice) {
    this.unitPrice = unitPrice;
  }

  public SalesOrderDocumentLineDto discountCode(String discountCode) {
    this.discountCode = discountCode;
    return this;
  }

   /**
   * Get discountCode
   * @return discountCode
  **/
  @ApiModelProperty(value = "")
  public String getDiscountCode() {
    return discountCode;
  }

  public void setDiscountCode(String discountCode) {
    this.discountCode = discountCode;
  }

  public SalesOrderDocumentLineDto discountPercent(Double discountPercent) {
    this.discountPercent = discountPercent;
    return this;
  }

   /**
   * Get discountPercent
   * @return discountPercent
  **/
  @ApiModelProperty(value = "")
  public Double getDiscountPercent() {
    return discountPercent;
  }

  public void setDiscountPercent(Double discountPercent) {
    this.discountPercent = discountPercent;
  }

  public SalesOrderDocumentLineDto discountAmount(Double discountAmount) {
    this.discountAmount = discountAmount;
    return this;
  }

   /**
   * Get discountAmount
   * @return discountAmount
  **/
  @ApiModelProperty(value = "")
  public Double getDiscountAmount() {
    return discountAmount;
  }

  public void setDiscountAmount(Double discountAmount) {
    this.discountAmount = discountAmount;
  }

  public SalesOrderDocumentLineDto manualDiscount(Boolean manualDiscount) {
    this.manualDiscount = manualDiscount;
    return this;
  }

   /**
   * Get manualDiscount
   * @return manualDiscount
  **/
  @ApiModelProperty(value = "")
  public Boolean isManualDiscount() {
    return manualDiscount;
  }

  public void setManualDiscount(Boolean manualDiscount) {
    this.manualDiscount = manualDiscount;
  }

  public SalesOrderDocumentLineDto discUnitPrice(Double discUnitPrice) {
    this.discUnitPrice = discUnitPrice;
    return this;
  }

   /**
   * Get discUnitPrice
   * @return discUnitPrice
  **/
  @ApiModelProperty(value = "")
  public Double getDiscUnitPrice() {
    return discUnitPrice;
  }

  public void setDiscUnitPrice(Double discUnitPrice) {
    this.discUnitPrice = discUnitPrice;
  }

  public SalesOrderDocumentLineDto extPrice(Double extPrice) {
    this.extPrice = extPrice;
    return this;
  }

   /**
   * Get extPrice
   * @return extPrice
  **/
  @ApiModelProperty(value = "")
  public Double getExtPrice() {
    return extPrice;
  }

  public void setExtPrice(Double extPrice) {
    this.extPrice = extPrice;
  }

  public SalesOrderDocumentLineDto unbilledAmount(Double unbilledAmount) {
    this.unbilledAmount = unbilledAmount;
    return this;
  }

   /**
   * Get unbilledAmount
   * @return unbilledAmount
  **/
  @ApiModelProperty(value = "")
  public Double getUnbilledAmount() {
    return unbilledAmount;
  }

  public void setUnbilledAmount(Double unbilledAmount) {
    this.unbilledAmount = unbilledAmount;
  }

  public SalesOrderDocumentLineDto lineDescription(String lineDescription) {
    this.lineDescription = lineDescription;
    return this;
  }

   /**
   * Get lineDescription
   * @return lineDescription
  **/
  @ApiModelProperty(value = "")
  public String getLineDescription() {
    return lineDescription;
  }

  public void setLineDescription(String lineDescription) {
    this.lineDescription = lineDescription;
  }

  public SalesOrderDocumentLineDto branchNumber(BranchNumberDto branchNumber) {
    this.branchNumber = branchNumber;
    return this;
  }

   /**
   * Get branchNumber
   * @return branchNumber
  **/
  @ApiModelProperty(value = "")
  public BranchNumberDto getBranchNumber() {
    return branchNumber;
  }

  public void setBranchNumber(BranchNumberDto branchNumber) {
    this.branchNumber = branchNumber;
  }

  public SalesOrderDocumentLineDto note(String note) {
    this.note = note;
    return this;
  }

   /**
   * Get note
   * @return note
  **/
  @ApiModelProperty(value = "")
  public String getNote() {
    return note;
  }

  public void setNote(String note) {
    this.note = note;
  }

  public SalesOrderDocumentLineDto attachments(List<AttachmentDto> attachments) {
    this.attachments = attachments;
    return this;
  }

  public SalesOrderDocumentLineDto addAttachmentsItem(AttachmentDto attachmentsItem) {
    if (this.attachments == null) {
      this.attachments = new ArrayList<>();
    }
    this.attachments.add(attachmentsItem);
    return this;
  }

   /**
   * The data containing information about the document attachments
   * @return attachments
  **/
  @ApiModelProperty(value = "The data containing information about the document attachments")
  public List<AttachmentDto> getAttachments() {
    return attachments;
  }

  public void setAttachments(List<AttachmentDto> attachments) {
    this.attachments = attachments;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SalesOrderDocumentLineDto salesOrderDocumentLineDto = (SalesOrderDocumentLineDto) o;
    return Objects.equals(this.lineNbr, salesOrderDocumentLineDto.lineNbr) &&
        Objects.equals(this.sortOrder, salesOrderDocumentLineDto.sortOrder) &&
        Objects.equals(this.inventory, salesOrderDocumentLineDto.inventory) &&
        Objects.equals(this.warehouse, salesOrderDocumentLineDto.warehouse) &&
        Objects.equals(this.uom, salesOrderDocumentLineDto.uom) &&
        Objects.equals(this.quantity, salesOrderDocumentLineDto.quantity) &&
        Objects.equals(this.qtyOnShipments, salesOrderDocumentLineDto.qtyOnShipments) &&
        Objects.equals(this.openQty, salesOrderDocumentLineDto.openQty) &&
        Objects.equals(this.unitCost, salesOrderDocumentLineDto.unitCost) &&
        Objects.equals(this.unitPrice, salesOrderDocumentLineDto.unitPrice) &&
        Objects.equals(this.discountCode, salesOrderDocumentLineDto.discountCode) &&
        Objects.equals(this.discountPercent, salesOrderDocumentLineDto.discountPercent) &&
        Objects.equals(this.discountAmount, salesOrderDocumentLineDto.discountAmount) &&
        Objects.equals(this.manualDiscount, salesOrderDocumentLineDto.manualDiscount) &&
        Objects.equals(this.discUnitPrice, salesOrderDocumentLineDto.discUnitPrice) &&
        Objects.equals(this.extPrice, salesOrderDocumentLineDto.extPrice) &&
        Objects.equals(this.unbilledAmount, salesOrderDocumentLineDto.unbilledAmount) &&
        Objects.equals(this.lineDescription, salesOrderDocumentLineDto.lineDescription) &&
        Objects.equals(this.branchNumber, salesOrderDocumentLineDto.branchNumber) &&
        Objects.equals(this.note, salesOrderDocumentLineDto.note) &&
        Objects.equals(this.attachments, salesOrderDocumentLineDto.attachments);
  }

  @Override
  public int hashCode() {
    return Objects.hash(lineNbr, sortOrder, inventory, warehouse, uom, quantity, qtyOnShipments, openQty, unitCost, unitPrice, discountCode, discountPercent, discountAmount, manualDiscount, discUnitPrice, extPrice, unbilledAmount, lineDescription, branchNumber, note, attachments);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SalesOrderDocumentLineDto {\n");
    
    sb.append("    lineNbr: ").append(toIndentedString(lineNbr)).append("\n");
    sb.append("    sortOrder: ").append(toIndentedString(sortOrder)).append("\n");
    sb.append("    inventory: ").append(toIndentedString(inventory)).append("\n");
    sb.append("    warehouse: ").append(toIndentedString(warehouse)).append("\n");
    sb.append("    uom: ").append(toIndentedString(uom)).append("\n");
    sb.append("    quantity: ").append(toIndentedString(quantity)).append("\n");
    sb.append("    qtyOnShipments: ").append(toIndentedString(qtyOnShipments)).append("\n");
    sb.append("    openQty: ").append(toIndentedString(openQty)).append("\n");
    sb.append("    unitCost: ").append(toIndentedString(unitCost)).append("\n");
    sb.append("    unitPrice: ").append(toIndentedString(unitPrice)).append("\n");
    sb.append("    discountCode: ").append(toIndentedString(discountCode)).append("\n");
    sb.append("    discountPercent: ").append(toIndentedString(discountPercent)).append("\n");
    sb.append("    discountAmount: ").append(toIndentedString(discountAmount)).append("\n");
    sb.append("    manualDiscount: ").append(toIndentedString(manualDiscount)).append("\n");
    sb.append("    discUnitPrice: ").append(toIndentedString(discUnitPrice)).append("\n");
    sb.append("    extPrice: ").append(toIndentedString(extPrice)).append("\n");
    sb.append("    unbilledAmount: ").append(toIndentedString(unbilledAmount)).append("\n");
    sb.append("    lineDescription: ").append(toIndentedString(lineDescription)).append("\n");
    sb.append("    branchNumber: ").append(toIndentedString(branchNumber)).append("\n");
    sb.append("    note: ").append(toIndentedString(note)).append("\n");
    sb.append("    attachments: ").append(toIndentedString(attachments)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

