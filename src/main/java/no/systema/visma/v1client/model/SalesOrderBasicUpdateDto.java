/*
 * Visma Net API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 6.13.03.0008
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package no.systema.visma.v1client.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import no.systema.visma.v1client.model.DtoValueNullableBoolean;
import no.systema.visma.v1client.model.DtoValueNullableDateTime;
import no.systema.visma.v1client.model.DtoValueString;
import no.systema.visma.v1client.model.SalesOrderBasicLineUpdateDto;

/**
 * This class represent a Sales Order in Sales Order Controller. Used to pass data to server for creating or updating an order
 */
@ApiModel(description = "This class represent a Sales Order in Sales Order Controller. Used to pass data to server for creating or updating an order")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-04-16T15:04:09.234+02:00")
public class SalesOrderBasicUpdateDto {
  @JsonProperty("lines")
  private List<SalesOrderBasicLineUpdateDto> lines = null;

  @JsonProperty("orderType")
  private DtoValueString orderType = null;

  @JsonProperty("orderNumber")
  private DtoValueString orderNumber = null;

  @JsonProperty("hold")
  private DtoValueNullableBoolean hold = null;

  @JsonProperty("date")
  private DtoValueNullableDateTime date = null;

  @JsonProperty("requestOn")
  private DtoValueNullableDateTime requestOn = null;

  @JsonProperty("customerOrder")
  private DtoValueString customerOrder = null;

  @JsonProperty("customerRefNo")
  private DtoValueString customerRefNo = null;

  @JsonProperty("customer")
  private DtoValueString customer = null;

  @JsonProperty("location")
  private DtoValueString location = null;

  @JsonProperty("currency")
  private DtoValueString currency = null;

  @JsonProperty("description")
  private DtoValueString description = null;

  @JsonProperty("recalculateShipment")
  private Boolean recalculateShipment = null;

  @JsonProperty("branchNumber")
  private DtoValueString branchNumber = null;

  @JsonProperty("note")
  private DtoValueString note = null;

  public SalesOrderBasicUpdateDto lines(List<SalesOrderBasicLineUpdateDto> lines) {
    this.lines = lines;
    return this;
  }

  public SalesOrderBasicUpdateDto addLinesItem(SalesOrderBasicLineUpdateDto linesItem) {
    if (this.lines == null) {
      this.lines = new ArrayList<>();
    }
    this.lines.add(linesItem);
    return this;
  }

   /**
   * Get lines
   * @return lines
  **/
  @ApiModelProperty(value = "")
  public List<SalesOrderBasicLineUpdateDto> getLines() {
    return lines;
  }

  public void setLines(List<SalesOrderBasicLineUpdateDto> lines) {
    this.lines = lines;
  }

  public SalesOrderBasicUpdateDto orderType(DtoValueString orderType) {
    this.orderType = orderType;
    return this;
  }

   /**
   * Mandatory field
   * @return orderType
  **/
  @ApiModelProperty(required = true, value = "Mandatory field")
  public DtoValueString getOrderType() {
    return orderType;
  }

  public void setOrderType(DtoValueString orderType) {
    this.orderType = orderType;
  }

  public SalesOrderBasicUpdateDto orderNumber(DtoValueString orderNumber) {
    this.orderNumber = orderNumber;
    return this;
  }

   /**
   * Get orderNumber
   * @return orderNumber
  **/
  @ApiModelProperty(value = "")
  public DtoValueString getOrderNumber() {
    return orderNumber;
  }

  public void setOrderNumber(DtoValueString orderNumber) {
    this.orderNumber = orderNumber;
  }

  public SalesOrderBasicUpdateDto hold(DtoValueNullableBoolean hold) {
    this.hold = hold;
    return this;
  }

   /**
   * Get hold
   * @return hold
  **/
  @ApiModelProperty(value = "")
  public DtoValueNullableBoolean getHold() {
    return hold;
  }

  public void setHold(DtoValueNullableBoolean hold) {
    this.hold = hold;
  }

  public SalesOrderBasicUpdateDto date(DtoValueNullableDateTime date) {
    this.date = date;
    return this;
  }

   /**
   * Get date
   * @return date
  **/
  @ApiModelProperty(value = "")
  public DtoValueNullableDateTime getDate() {
    return date;
  }

  public void setDate(DtoValueNullableDateTime date) {
    this.date = date;
  }

  public SalesOrderBasicUpdateDto requestOn(DtoValueNullableDateTime requestOn) {
    this.requestOn = requestOn;
    return this;
  }

   /**
   * Get requestOn
   * @return requestOn
  **/
  @ApiModelProperty(value = "")
  public DtoValueNullableDateTime getRequestOn() {
    return requestOn;
  }

  public void setRequestOn(DtoValueNullableDateTime requestOn) {
    this.requestOn = requestOn;
  }

  public SalesOrderBasicUpdateDto customerOrder(DtoValueString customerOrder) {
    this.customerOrder = customerOrder;
    return this;
  }

   /**
   * Get customerOrder
   * @return customerOrder
  **/
  @ApiModelProperty(value = "")
  public DtoValueString getCustomerOrder() {
    return customerOrder;
  }

  public void setCustomerOrder(DtoValueString customerOrder) {
    this.customerOrder = customerOrder;
  }

  public SalesOrderBasicUpdateDto customerRefNo(DtoValueString customerRefNo) {
    this.customerRefNo = customerRefNo;
    return this;
  }

   /**
   * Get customerRefNo
   * @return customerRefNo
  **/
  @ApiModelProperty(value = "")
  public DtoValueString getCustomerRefNo() {
    return customerRefNo;
  }

  public void setCustomerRefNo(DtoValueString customerRefNo) {
    this.customerRefNo = customerRefNo;
  }

  public SalesOrderBasicUpdateDto customer(DtoValueString customer) {
    this.customer = customer;
    return this;
  }

   /**
   * Mandatory field
   * @return customer
  **/
  @ApiModelProperty(required = true, value = "Mandatory field")
  public DtoValueString getCustomer() {
    return customer;
  }

  public void setCustomer(DtoValueString customer) {
    this.customer = customer;
  }

  public SalesOrderBasicUpdateDto location(DtoValueString location) {
    this.location = location;
    return this;
  }

   /**
   * Get location
   * @return location
  **/
  @ApiModelProperty(value = "")
  public DtoValueString getLocation() {
    return location;
  }

  public void setLocation(DtoValueString location) {
    this.location = location;
  }

  public SalesOrderBasicUpdateDto currency(DtoValueString currency) {
    this.currency = currency;
    return this;
  }

   /**
   * Get currency
   * @return currency
  **/
  @ApiModelProperty(value = "")
  public DtoValueString getCurrency() {
    return currency;
  }

  public void setCurrency(DtoValueString currency) {
    this.currency = currency;
  }

  public SalesOrderBasicUpdateDto description(DtoValueString description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @ApiModelProperty(value = "")
  public DtoValueString getDescription() {
    return description;
  }

  public void setDescription(DtoValueString description) {
    this.description = description;
  }

  public SalesOrderBasicUpdateDto recalculateShipment(Boolean recalculateShipment) {
    this.recalculateShipment = recalculateShipment;
    return this;
  }

   /**
   * Get recalculateShipment
   * @return recalculateShipment
  **/
  @ApiModelProperty(value = "")
  public Boolean isRecalculateShipment() {
    return recalculateShipment;
  }

  public void setRecalculateShipment(Boolean recalculateShipment) {
    this.recalculateShipment = recalculateShipment;
  }

  public SalesOrderBasicUpdateDto branchNumber(DtoValueString branchNumber) {
    this.branchNumber = branchNumber;
    return this;
  }

   /**
   * Get branchNumber
   * @return branchNumber
  **/
  @ApiModelProperty(value = "")
  public DtoValueString getBranchNumber() {
    return branchNumber;
  }

  public void setBranchNumber(DtoValueString branchNumber) {
    this.branchNumber = branchNumber;
  }

  public SalesOrderBasicUpdateDto note(DtoValueString note) {
    this.note = note;
    return this;
  }

   /**
   * Get note
   * @return note
  **/
  @ApiModelProperty(value = "")
  public DtoValueString getNote() {
    return note;
  }

  public void setNote(DtoValueString note) {
    this.note = note;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SalesOrderBasicUpdateDto salesOrderBasicUpdateDto = (SalesOrderBasicUpdateDto) o;
    return Objects.equals(this.lines, salesOrderBasicUpdateDto.lines) &&
        Objects.equals(this.orderType, salesOrderBasicUpdateDto.orderType) &&
        Objects.equals(this.orderNumber, salesOrderBasicUpdateDto.orderNumber) &&
        Objects.equals(this.hold, salesOrderBasicUpdateDto.hold) &&
        Objects.equals(this.date, salesOrderBasicUpdateDto.date) &&
        Objects.equals(this.requestOn, salesOrderBasicUpdateDto.requestOn) &&
        Objects.equals(this.customerOrder, salesOrderBasicUpdateDto.customerOrder) &&
        Objects.equals(this.customerRefNo, salesOrderBasicUpdateDto.customerRefNo) &&
        Objects.equals(this.customer, salesOrderBasicUpdateDto.customer) &&
        Objects.equals(this.location, salesOrderBasicUpdateDto.location) &&
        Objects.equals(this.currency, salesOrderBasicUpdateDto.currency) &&
        Objects.equals(this.description, salesOrderBasicUpdateDto.description) &&
        Objects.equals(this.recalculateShipment, salesOrderBasicUpdateDto.recalculateShipment) &&
        Objects.equals(this.branchNumber, salesOrderBasicUpdateDto.branchNumber) &&
        Objects.equals(this.note, salesOrderBasicUpdateDto.note);
  }

  @Override
  public int hashCode() {
    return Objects.hash(lines, orderType, orderNumber, hold, date, requestOn, customerOrder, customerRefNo, customer, location, currency, description, recalculateShipment, branchNumber, note);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SalesOrderBasicUpdateDto {\n");
    
    sb.append("    lines: ").append(toIndentedString(lines)).append("\n");
    sb.append("    orderType: ").append(toIndentedString(orderType)).append("\n");
    sb.append("    orderNumber: ").append(toIndentedString(orderNumber)).append("\n");
    sb.append("    hold: ").append(toIndentedString(hold)).append("\n");
    sb.append("    date: ").append(toIndentedString(date)).append("\n");
    sb.append("    requestOn: ").append(toIndentedString(requestOn)).append("\n");
    sb.append("    customerOrder: ").append(toIndentedString(customerOrder)).append("\n");
    sb.append("    customerRefNo: ").append(toIndentedString(customerRefNo)).append("\n");
    sb.append("    customer: ").append(toIndentedString(customer)).append("\n");
    sb.append("    location: ").append(toIndentedString(location)).append("\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    recalculateShipment: ").append(toIndentedString(recalculateShipment)).append("\n");
    sb.append("    branchNumber: ").append(toIndentedString(branchNumber)).append("\n");
    sb.append("    note: ").append(toIndentedString(note)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

